{
  "sourceUrl": "https://engineering.fb.com/feed/",
  "title": "Engineering at Meta",
  "description": "Engineering at Meta Blog",
  "link": "https://engineering.fb.com/",
  "items": [
    {
      "title": "阅读Meta的2025年可持续发展报告 (原标题: Read Meta’s 2025 Sustainability Report)",
      "link": "https://sustainability.atmeta.com/2025-sustainability-report/",
      "pubDate": "Fri, 12 Sep 2025 16:36:33 +0000",
      "isoDate": "2025-09-12T16:36:33.000Z",
      "creator": "",
      "summary": "# Meta 2025年可持续发展报告\n\n## 报告愿景：连接到更美好的现实\nMeta的2025年可持续发展报告旨在通过其在气候、负责任的供应链、水资源和生物多样性方面的努力，构建一个更美好的现实。\n\n![户外空旷道路通向山脉](https://sustainability.atmeta.com/wp-content/uploads/2025/08/1_Meta-2025-Sustainability-Landing-Page_Headline_Connecting-to-a-Better-Reality.jpg?resize=5953%2C4802)\n\n![俯瞰树梢和山脉的自然风光](https://sustainability.atmeta.com/wp-content/uploads/2025/08/2_Meta-2025-Sustainability-Landing-Page_Pillar_Climate.jpg?resize=5184%2C2916)\n\n## 可持续发展支柱\n\n### 气候\n随着气候变化影响日益普遍，Meta致力于通过业务脱碳，为建设更健康的地球、更具韧性的社区和净零现实贡献力量。\n\n### 负责任的供应链\nMeta作为复杂价值链的一部分，通过开放沟通、支持安全工作条件的倡议以及对核心可持续发展问题的深入理解，努力赋能工人并保护环境。\n\n![戴安全眼镜和实验服的人用小钳子操作手机](https://sustainability.atmeta.com/wp-content/uploads/2025/08/4_Meta-2025-Sustainability-Landing-Page_Pillar_RSC.jpg?w=1620&resize=1620%2C911)\n\n### 水资源\n水是地球生命的重要资源。Meta致力于通过专业技术和责任管理水资源，以确保健康的水生生态系统。\n\n![海浪拍打海岸的海洋景色](https://sustainability.atmeta.com/wp-content/uploads/2025/08/3_Meta-2025-Sustainability-Landing-Page_Pillar_Water.jpg?w=1620&resize=1620%2C1078)\n\n### 生物多样性\n生物多样性支持生态系统稳定，确保地球上生物繁荣。Meta通过积极行动支持数据中心所在地原生生态系统的生物多样性，并投资当地社区的长期活力。\n\n![野花盛开的草地自然风光](https://sustainability.atmeta.com/wp-content/uploads/2025/08/5_Meta-2025-Sustainability-Landing-Page_Pillar_Biodiversity.jpg?resize=3200%2C2136)\n\n## 目标与承诺\n\nMeta的核心可持续发展战略旨在到2030年实现全价值链净零排放和水资源正效益。为实现向零碳经济和更健康地球的愿景，Meta设定了以下支持目标：\n\n![一个人在刚准备好的土地上植树](https://sustainability.atmeta.com/wp-content/uploads/2025/08/6_Meta-2025-Sustainability-Landing-Page_Goals-and-Commitments.jpg)\n\n*   到2031年，将范围1和范围2排放量在2021年基准上减少42%。\n*   到2026年，使至少三分之二的供应商设定符合科学的减排目标。\n*   到2031年底，范围3排放量不超过2021年基准。\n*   在高水资源压力地区恢复200%的用水量，在中水资源压力地区恢复100%的用水量。\n*   继续以清洁和可再生能源匹配100%的电力使用，以支持运营。\n*   与供应链合作伙伴设定人权和环境期望，并与他们合作建立能力以达到Meta的标准。\n\n## 亮点成就\n\n### 清洁和可再生能源\nMeta支持的风能和太阳能项目在全球电网中增加了超过15吉瓦的清洁和可再生能源。\n\n![日落时分有风力涡轮机的田野](https://sustainability.atmeta.com/wp-content/uploads/2025/08/7_Meta-2025-Sustainability-Landing-Page_Highlight_Clean-and-Renewable-Energy.jpg?w=1620&resize=8272%2C6200)\n\n### 水资源恢复\n自2017年以来，Meta已资助40多个水资源恢复项目。2024年，这些项目在高和中水资源压力地区恢复了超过16亿加仑的水。\n\n![河岸有树木，水流中有植物的河流](https://sustainability.atmeta.com/wp-content/uploads/2025/08/8_Meta-2025-Sustainability-Landing-Page_Highlight_Water-Restoration_PLACEHOLDER-FOR-WATER-PROJECT-1.jpeg?w=1620&resize=3840%2C2160)\n\n### 数据中心园区生物多样性\n超过50%的运营数据中心园区面积（超过4000英亩）已规划、安装或保留，以有意支持本地物种的栖息地。\n\n![位于亚利桑那州梅萨的Meta数据中心](https://sustainability.atmeta.com/wp-content/uploads/2025/08/9_Meta-2025-Sustainability-Landing-Page_Highlight_Data-Center-Campus-Biodiversity.jpeg?w=1620&resize=2048%2C1536)\n\n### 负责任的供应链\nMeta持续在供应商现场推广安全的工艺化学品管理，开展意识提升和风险缓解培训，并支持在可行的情况下用更安全的替代品替换有害化学品。\n\n![穿着安全装备的制造工人](https://sustainability.atmeta.com/wp-content/uploads/2025/08/10_Meta-2025-Sustainability-Landing-Page_Highlight_RSC.jpeg?w=1620&resize=5616%2C3744)\n\n### 为AI设计数据中心\nMeta投资创建可扩展的基础设施，以支持当前和未来的AI需求。其设计融合了高性能和定制解决方案，以更少的占地面积提供相似的计算能力，从而提高了交付时间和成本效率。\n\n![AI数据中心设计图](https://sustainability.atmeta.com/wp-content/uploads/2025/08/Opt3-min-4.jpg)\n\n### 创新投资\n*   2024年，Meta自有数据中心建设废弃物中有91%被转移出垃圾填埋场。\n*   Meta所有自有数据中心均获得LEED金级或更高认证。",
      "shortSummary": "Meta的2025年可持续发展报告阐述了其通过气候行动、负责任的供应链、水资源管理和生物多样性等支柱，实现“连接到更美好现实”的承诺。核心目标是到2030年实现全价值链净零排放和水资源正效益。具体目标包括到2031年减少42%的范围1和2排放，并恢复高水压地区200%的用水。报告亮点包括新增15吉瓦清洁能源、2024年恢复超16亿加仑水、提升数据中心生物多样性，以及推广负责任的供应链实践和可持续的AI数据中心设计。",
      "translated_title": "阅读Meta的2025年可持续发展报告",
      "images": [
        {
          "url": "https://sustainability.atmeta.com/wp-content/uploads/2025/08/1_Meta-2025-Sustainability-Landing-Page_Headline_Connecting-to-a-Better-Reality.jpg?resize=5953%2C4802",
          "alt": "An outdoor scene with an empty road leading toward mountains.",
          "title": "",
          "position": 1
        },
        {
          "url": "https://sustainability.atmeta.com/wp-content/uploads/2025/08/2_Meta-2025-Sustainability-Landing-Page_Pillar_Climate.jpg?resize=5184%2C2916",
          "alt": "A nature scene overlooking treetops and mountains.",
          "title": "",
          "position": 2
        },
        {
          "url": "https://sustainability.atmeta.com/wp-content/uploads/2025/08/4_Meta-2025-Sustainability-Landing-Page_Pillar_RSC.jpg?w=1620&resize=1620%2C911",
          "alt": "A person in safety glasses and a lab coat working on a mobile phone with small pliers.",
          "title": "",
          "position": 3
        },
        {
          "url": "https://sustainability.atmeta.com/wp-content/uploads/2025/08/3_Meta-2025-Sustainability-Landing-Page_Pillar_Water.jpg?w=1620&resize=1620%2C1078",
          "alt": "A view of the ocean, showing waves crashing.",
          "title": "",
          "position": 4
        },
        {
          "url": "https://sustainability.atmeta.com/wp-content/uploads/2025/08/5_Meta-2025-Sustainability-Landing-Page_Pillar_Biodiversity.jpg?resize=3200%2C2136",
          "alt": "A nature scene of a meadow with wildflowers.",
          "title": "",
          "position": 5
        },
        {
          "url": "https://sustainability.atmeta.com/wp-content/uploads/2025/08/6_Meta-2025-Sustainability-Landing-Page_Goals-and-Commitments.jpg",
          "alt": "A person planting trees in freshly prepared ground.",
          "title": "",
          "position": 6
        },
        {
          "url": "https://sustainability.atmeta.com/wp-content/uploads/2024/08/download-icon.png",
          "alt": "",
          "title": "",
          "position": 7
        },
        {
          "url": "https://sustainability.atmeta.com/wp-content/uploads/2024/08/Icon_Expanded__7b2e82.png",
          "alt": "vehicle icon",
          "title": "",
          "position": 8
        }
      ],
      "contentSource": "完整文章",
      "content": "<p> [...]</p>\n<p><a class=\"btn btn-secondary understrap-read-more-link\" href=\"https://sustainability.atmeta.com/2025-sustainability-report/\">Read More...</a></p>\n<p>The post <a rel=\"nofollow\" href=\"https://sustainability.atmeta.com/2025-sustainability-report/\">Read Meta&#8217;s 2025 Sustainability Report</a> appeared first on <a rel=\"nofollow\" href=\"https://engineering.fb.com\">Engineering at Meta</a>.</p>\n"
    },
    {
      "title": "Instagram 提升通知质量的新排名框架 (原标题: A New Ranking Framework for Better Notification Quality on Instagram)",
      "link": "https://engineering.fb.com/2025/09/02/ml-applications/a-new-ranking-framework-for-better-notification-quality-on-instagram/",
      "pubDate": "Tue, 02 Sep 2025 16:00:08 +0000",
      "isoDate": "2025-09-02T16:00:08.000Z",
      "creator": "",
      "summary": "# Instagram 提升通知质量的新排名框架\n\nMeta 正在利用机器学习 (ML) 和多样性算法来改进 Instagram 上的通知质量和用户体验。通过引入一个多样性感知通知排名框架，旨在减少通知的单一性，提供更丰富、更具吸引力的通知组合，从而降低通知总量并提高参与率。\n\n## 引言\n\n通知是促使用户返回 Instagram 并增强参与度的强大工具。无论是朋友点赞照片、亲密朋友发布故事，还是推荐可能喜欢的 Reels，通知都能实时呈现重要时刻。Instagram 利用 ML 模型决定何时向谁发送通知以及包含哪些内容，这些模型旨在优化用户积极参与度，如点击率 (CTR) 和使用时长。\n\n## 现有机器学习模型的局限性\n\n尽管以参与度为优化的模型能有效促进互动，但它们可能过度优先考虑用户之前互动过的产品类型和作者。这会导致用户过度接触相同的创作者或产品类型，而忽略其他有价值且多样的体验。长此以往，通知可能会变得像垃圾邮件，增加用户禁用通知的可能性，从而错失更平衡、满意和丰富的体验。\n\n## 挑战：平衡多样性与个性化\n\n核心挑战在于如何引入有意义的通知多样性，同时又不牺牲用户对 Instagram 个性化和相关性的期望。\n\n## Instagram 的多样性感知通知排名框架\n\n为了解决这一问题，Instagram 引入了一个多样性感知通知排名框架，旨在提供更具多样性、更好策划且重复性更低的通知。该框架显著降低了每日通知量，同时提高了点击率，并带来了多项益处：\n\n*   **可扩展性**：能够为每个维度纳入定制化的软惩罚（降权）逻辑，实现更具适应性和复杂的多元化策略。\n*   **灵活性**：通过可调节的权重，灵活调整内容、作者和产品类型等维度的降权强度。\n*   **整合性**：平衡个性化与多样性，确保通知既相关又多样。\n\n## 缺乏多样性的风险（过度曝光）\n\n通知中过度曝光的问题主要体现在两个方面：\n\n*   **对同一作者的过度曝光**：用户可能收到大部分来自同一朋友的通知，即使他们也与其他朋友互动。这会让人感到重复和单一，降低通知的整体价值。\n*   **对同一产品界面的过度曝光**：用户可能主要收到来自同一产品界面（如 Stories）的通知，即使 Feed 或 Reels 也能提供价值。例如，如果用户最近更多地与 Stories 互动，系统可能会只发送 Stories 通知，而忽略其更广泛的兴趣。\n\n## 框架工作原理\n\nInstagram 的多样性感知通知排名框架旨在通过平衡用户参与的预测潜力与内容多样性的需求来增强通知体验。该框架在现有参与度 ML 模型之上引入了一个**多样性层**，对这些模型生成的候选分数应用乘法惩罚，如下图所示：\n\n![图片 1](https://engineering.fb.com/wp-content/uploads/2025/09/A-new-ranking-framework-for-better-notification-quality-on-Instagram.png)\n\n**图 1**：Instagram 的多样性感知排名框架，其中多样性层位于现有建模层之上，并对与最近发送的通知过于相似的通知进行惩罚。\n\n多样性层评估每个通知候选与最近发送的通知在多个维度（如内容、作者、通知类型和产品界面）上的相似性。然后，它应用经过精心校准的惩罚（以乘法降权因子表示），以降低过于相似或重复的候选的排名。调整后的分数用于重新排名候选，使系统能够选择既保持高参与潜力又引入有意义多样性的通知。最终，质量门槛会选择通过排名和多样性标准的最优候选。\n\n### 数学公式\n\n在多样性层中，我们对每个候选的基础相关性分数应用一个乘法降权因子。给定一个通知候选 `c`，其最终分数计算为其基础排名分数 `R(c)` 与多样性降权乘数 `D(c)` 的乘积。`D(c)` 是一个介于 [0,1] 之间的惩罚因子，根据与最近发送通知的相似性来降低分数。\n\n我们定义了一组语义维度（例如，作者、产品类型）以促进多样性。对于每个维度 `i`，我们使用最大边际相关性 (MMR) 方法计算候选 `c` 与历史通知集合 `H` 之间的相似性信号 `p_i(c)`。在基线实现中，`p_i(c)` 是一个二进制值：如果相似性超过阈值 `τ_i` 则为 1，否则为 0。\n\n最终的降权乘数 `D(c)` 是通过对所有维度 `i` 的 `(1 - w_i * p_i(c))` 乘积计算得出的，其中 `w_i` 控制其相应维度的降权强度。这种公式确保了与先前已发送通知在一个或多个维度上相似的候选被按比例降权，从而减少冗余并促进内容多样性。\n\n## 未来展望\n\nInstagram 将继续发展其多样性感知通知排名系统，下一步是引入更具适应性、动态的降权策略。例如，当用户收到更多通知（特别是相似类型或快速连续的通知）时，系统将逐步对新的通知候选应用更强的惩罚，从而有效缓解高通知量或紧密间隔发送造成的压倒性体验。\n\n从长远来看，Instagram 计划将大型语言模型 (LLMs) 引入多样性管道。LLMs 可以帮助系统超越表面规则，理解消息之间的语义相似性，并以更多样化、用户友好的方式重新措辞内容。这将允许系统通过更丰富的语言和改进的相关性来个性化通知体验，同时保持主题、语气和时间上的多样性。",
      "shortSummary": "Instagram 推出了一项新的多样性感知通知排名框架，旨在解决传统机器学习模型导致的通知过度曝光问题。该框架在现有模型之上增加了一个多样性层，通过对重复内容和作者施加惩罚，减少了通知总量，同时提高了用户参与度。这为用户提供了更丰富、更个性化的通知体验。未来，该系统将引入自适应降权策略并整合大型语言模型，以进一步提升通知质量和多样性。",
      "translated_title": "Instagram 提升通知质量的新排名框架",
      "images": [
        {
          "url": "https://engineering.fb.com/wp-content/uploads/2025/09/A-new-ranking-framework-for-better-notification-quality-on-Instagram.png",
          "alt": "",
          "title": "",
          "position": 1
        },
        {
          "url": "https://s0.wp.com/latex.php?latex=%5Ctext%7BScore%7D%28c%29+%3D+R%28c%29+%5Ctimes+D%28c%29+&bg=ffffff&fg=000&s=0&c=20201002",
          "alt": "\\text{Score}(c) = R(c) \\times D(c) ",
          "title": "",
          "position": 2
        },
        {
          "url": "https://s0.wp.com/latex.php?latex=p_i%28c%29+%3D+%5Cmathrm%7Bmax%7D_%7Bh+%5Cin+H%7D%5Cmathrm%7Bsim%7D_i%28c%2C+h%29+&bg=ffffff&fg=000&s=0&c=20201002",
          "alt": "p_i(c) = \\mathrm{max}_{h \\in H}\\mathrm{sim}_i(c, h) ",
          "title": "",
          "position": 3
        },
        {
          "url": "https://s0.wp.com/latex.php?latex=D%28c%29+%3D+%5Cprod_%7Bi%3D1%7D%5E%7Bm%7D+%5Cleft%28+1+-+w_i+%5Ccdot+p_i%28c%29+%5Cright%29+&bg=ffffff&fg=000&s=0&c=20201002",
          "alt": "D(c) = \\prod_{i=1}^{m} \\left( 1 - w_i \\cdot p_i(c) \\right) ",
          "title": "",
          "position": 4
        }
      ],
      "contentSource": "完整文章",
      "content": "<p>We’re sharing how Meta is applying machine learning (ML) and diversity algorithms to improve notification quality and user experience.  We’ve introduced a diversity-aware notification ranking framework to reduce uniformity and deliver a more varied and engaging mix of notifications. This new framework reduces the volume of notifications and drives higher engagement rates through more diverse [...]</p>\n<p><a class=\"btn btn-secondary understrap-read-more-link\" href=\"https://engineering.fb.com/2025/09/02/ml-applications/a-new-ranking-framework-for-better-notification-quality-on-instagram/\">Read More...</a></p>\n<p>The post <a rel=\"nofollow\" href=\"https://engineering.fb.com/2025/09/02/ml-applications/a-new-ranking-framework-for-better-notification-quality-on-instagram/\">A New Ranking Framework for Better Notification Quality on Instagram</a> appeared first on <a rel=\"nofollow\" href=\"https://engineering.fb.com\">Engineering at Meta</a>.</p>\n"
    },
    {
      "title": "在Buck2上启用Kotlin增量编译 (原标题: Enabling Kotlin incremental compilation on Buck2)",
      "link": "https://engineering.fb.com/2025/08/26/open-source/enabling-kotlin-incremental-compilation-on-buck2/",
      "pubDate": "Tue, 26 Aug 2025 16:00:52 +0000",
      "isoDate": "2025-08-26T16:00:52.000Z",
      "creator": "",
      "summary": "## 在Buck2上启用Kotlin增量编译\n\nMeta工程团队成功地将Kotlin增量编译器集成到其构建系统Buck2中，以解决大型Kotlin模块导致的构建时间过长问题，显著提升了开发效率和构建速度。\n\n### 背景与动机\n\n尽管Buck2鼓励使用小型模块以实现快速构建，但随着代码库的增长和团队的变化，一些Kotlin模块变得庞大，开始对构建时间产生显著影响。为了解决这一问题，团队决定深入研究Kotlin增量编译器。\n\n### 关键成果\n\n*   **构建速度提升**：关键模块的构建速度提升高达3倍。\n*   **开发者效率**：平均开发者构建时间提升约30%。\n*   **特定模块优化**：对于不涉及注解处理的模块，速度几乎翻倍。\n\n### 实施步骤与挑战\n\n#### 1. 集成Kotlin的构建工具API (Build Tools API)\n\n*   **挑战**：命令行接口（CLI）不支持增量编译，而内部编译器API不稳定且不保证向后兼容性。\n*   **解决方案**：采用了Kotlin 1.9.20中引入的实验性Build Tools API (KEEP)，该API是官方的编译器集成点，支持增量编译。团队认为其最终会稳定，并提前介入提供反馈。\n*   **Shading冲突**：Build Tools API依赖于`kotlin-compiler-embeddable`（经过混淆处理的版本），而Meta的Android工具链历史上使用`kotlin-compiler`（未混淆版本），导致`NoClassDefFoundError`。最初通过对Build Tools API进行反混淆处理来解决，随后将整个工具链迁移到使用混淆处理的Kotlin编译器，以实现更稳定的设置。\n\n#### 2. 保留前次构建输出\n\n*   **挑战**：Buck2默认在重建模块前删除前次构建的输出，而增量编译器需要访问这些输出。\n*   **解决方案**：通过配置Buck2的增量操作（incremental actions），跳过对前次输出的自动清理。这使得构建操作可以访问上次运行的所有内容，但需要手动清理不再有用的文件。\n\n#### 3. 使增量编译器缓存可重定位\n\n*   **挑战**：在Buck2支持的分布式构建环境中，如果编译器缓存不可重定位，可能导致路径不匹配的错误和冲突。\n*   **解决方案**：在增量编译设置中明确配置了根项目目录和构建目录，确保编译器缓存的稳定性和可靠性，无论构建在哪里执行。\n\n#### 4. 配置增量编译器\n\n*   **原理**：增量编译器通过跟踪模块内部文件和依赖项的变化来决定需要重新编译的内容。\n*   **模块内部变化**：利用Buck2增量操作提供的哈希摘要，比较前后两次构建的哈希值，生成修改文件列表并传递给编译器，避免编译器自行检测变化。\n*   **依赖项变化**：通过生成类路径快照（ABI）来检测依赖项的变化。Buck2中新增了一个专门的操作来从库输出生成类路径快照，并将其作为输入传递给消费模块。由于这是一个独立的操作，可以远程执行或从缓存中获取，减轻了本地机器的负担。\n\n#### 5. 使编译器插件与增量编译器协同工作\n\n*   **挑战1：结果不完整**：自定义编译器插件未针对部分输入设计，在只处理文件子集时会产生不完整的结果。\n*   **解决方案1**：将插件也改造为增量模式，使其能够正确处理部分输入。\n*   **挑战2：多轮编译**：增量编译器可能在单次构建中进行多轮编译，每次处理不同的文件集，导致插件被多次触发并可能覆盖早期输出。\n*   **解决方案2**：更新插件，使其在多轮编译中累积结果而非替换。\n\n#### 6. 验证注解处理器功能\n\n*   **解决方案**：大多数注解处理器使用Kotlin符号处理（KSP2）。KSP2作为一个独立的工具，利用Kotlin分析API分析源代码，独立于标准编译流程运行，并自带增量处理支持，因此无需修改即可继续使用。\n\n#### 7. 启用针对ABI的编译\n\n*   **挑战**：为了最大化缓存命中率，Buck2针对类ABI而非完整的JAR文件构建Android模块。Kotlin目标使用`jvm-abi-gen`编译器插件生成ABI，但在启用增量编译后，该插件缺乏增量支持，且ABI提取会发生两次（插件和类路径快照）。\n*   **当前解决方案**：实现了一个自定义的（但非最优的）解决方案，将新生成的ABI与之前的结果合并。\n*   **未来展望**：正在积极探索更好的长期替代方案，理想情况是重用已收集的类路径快照信息，或将此功能直接内置到Kotlin编译器中（参见KT-62881）。\n\n#### 8. 测试\n\n*   **方法**：通过A/B测试在Meta的代码库上衡量Kotlin增量编译的真实影响，确保结果的可靠性。\n*   **结果**：在最大的模块上，增量编译带来了显著的性能提升，证实了其价值。\n\n### 后续计划\n\nKotlin增量编译目前已在Buck2中得到支持，并正在Meta的代码库中积极推广。目前仅供内部使用，但团队正努力将其引入最近开源的工具链中，并探索在整个Android工具链中扩展增量能力的方法。",
      "shortSummary": "Meta已成功在Buck2构建系统中启用Kotlin增量编译，显著提升了构建速度和开发者效率。通过集成Kotlin Build Tools API、保留前次输出、使缓存可重定位、优化编译器配置、改造编译器插件以及利用KSP2，团队实现了关键模块构建速度提升高达3倍，平均开发者构建时间缩短30%。目前该功能正在内部推广，并计划开源，以进一步扩展Android工具链的增量能力。",
      "translated_title": "在Buck2上启用Kotlin增量编译",
      "images": [],
      "contentSource": "RSS",
      "content": "<p>The Kotlin incremental compiler has been a true gem for developers chasing faster compilation since its introduction in build tools. Now, we’re excited to bring its benefits to Buck2 –  Meta’s build system – to unlock even more speed and efficiency for Kotlin developers. Unlike a traditional compiler that recompiles an entire module every time, [...]</p>\n<p><a class=\"btn btn-secondary understrap-read-more-link\" href=\"https://engineering.fb.com/2025/08/26/open-source/enabling-kotlin-incremental-compilation-on-buck2/\">Read More...</a></p>\n<p>The post <a rel=\"nofollow\" href=\"https://engineering.fb.com/2025/08/26/open-source/enabling-kotlin-incremental-compilation-on-buck2/\">Enabling Kotlin incremental compilation on Buck2</a> appeared first on <a rel=\"nofollow\" href=\"https://engineering.fb.com\">Engineering at Meta</a>.</p>\n"
    },
    {
      "title": "为数据仓库数据访问和安全创建AI代理解决方案 (原标题: Creating AI agent solutions for warehouse data access and security)",
      "link": "https://engineering.fb.com/2025/08/13/data-infrastructure/agentic-solution-for-warehouse-data-access/",
      "pubDate": "Wed, 13 Aug 2025 22:05:07 +0000",
      "isoDate": "2025-08-13T22:05:07.000Z",
      "creator": "",
      "summary": "Meta正在改进其数据仓库，以提高生产力和安全性，同时服务于人类用户和AI代理。本文详细介绍了Meta如何开发AI代理来简化数据访问请求并帮助数据所有者管理安全。\n\n## 背景与挑战\n\n*   **传统方法：** 过去，Meta通过将数据仓库组织成层次结构（图1）来扩展数据访问和管理，并使用基于角色的访问控制。数据流被视为图（图2），数据访问决策是局部的、规则驱动的。\n*   **日益增长的复杂性：** 随着数据量和AI系统的发展，数据访问模式变得更加复杂。AI系统能够处理数据图的不同部分，使得人工驱动的决策变得困难且耗时。人类和代理跨领域协作增加了系统复杂性（图3）。\n*   **AI作为解决方案：** 尽管AI是复杂性的驱动因素，但Meta认为AI也能提供解决方案。需要一种代理化解决方案，将其原生集成到数据产品中，并建立严格的防护措施。\n\n## 多代理系统设计\n\nMeta将解决方案建模为一个多代理系统（图4），包含两种主要代理：\n\n*   **数据用户代理：** 协助数据用户获取所需数据。\n    *   由三个专业子代理组成，由一个分类代理协调（图5）：\n        1.  **建议替代方案：** 当用户遇到受限表时，提供非受限或限制较少的替代方案，帮助用户重写查询以使用非受限列，或利用精选分析。这些见解通常是隐性的，LLM和代理能够大规模地综合和引导用户。\n        2.  **促进低风险数据探索：** 为数据探索阶段提供上下文感知、任务特定的低风险数据访问，通常只涉及少量数据。\n        3.  **协助获取访问权限：** 帮助用户制定权限请求并与数据所有者代理协商（目前仍有人工干预）。\n*   **数据所有者代理：** 帮助数据所有者管理访问和维护安全。\n    *   由多个子代理组成（图6）：\n        1.  **安全操作：** 像初级工程师一样，根据数据所有者提供的SOP（标准操作程序）处理传入的权限请求。\n        2.  **主动配置访问规则：** 利用语义和内容，改进传统的角色挖掘过程。\n\n## 代理的输入与管理\n\n*   **数据仓库作为资源：** 数据仓库的层次结构被转换为文本形式，类似于嵌套文件夹，为LLM提供只读的摘要视图（图7）。SOP（规则、维基、历史交互）也以文本形式作为代理的输入。\n*   **上下文管理：** 区分三种场景（图8）：\n    *   **自动上下文：** 系统根据用户访问行为自动获取精确上下文。\n    *   **静态上下文：** 用户明确选择特定范围或扩展自动上下文。\n    *   **动态上下文：** 代理通过元数据（如数据语义）或相似性搜索进一步过滤资源。\n*   **意图管理：** 用户意图通过两种方式建模（图9）：\n    *   **显式意图：** 用户通过假定关联角色等方式明确传达其业务需求。\n    *   **隐式意图：** 系统在短时间内从用户活动中推断意图（例如，根据夜间处理管道故障推断数据访问意图）。\n\n## 深度探索：部分数据预览\n\n部分数据预览是一个端到端用例，旨在数据探索阶段实现任务特定、上下文感知的数据访问。它通过代理工作流协调四个关键能力（图10）：\n\n1.  **上下文：** 分析用户活动以理解业务需求，并与数据控制对齐，提供任务特定、上下文感知的控制。\n2.  **查询级访问控制：** 分析查询的结构，例如是否涉及聚合或随机抽样。\n3.  **数据访问预算：** 根据员工通常访问的数据量分配每日刷新的预算，作为第一道防线。\n4.  **基于规则的风险管理：** 采用基于规则的风险控制，防御AI代理的攻击或故障。\n\n### 系统架构\n\n*   **数据用户代理：** 利用用户活动工具（diffs、任务、帖子、SEVs、仪表板、文档）和用户配置文件工具，根据用户活动、配置文件和查询形状形成用户意图，然后调用数据所有者代理（图11）。\n*   **数据所有者代理：** 分析查询，获取相关资源的元数据（表摘要、列描述、数据语义、SOPs）。利用LLM模型生成决策和推理，并通过输出防护措施确保决策符合基于规则的风险计算。\n*   所有决策和日志都安全存储，用于未来参考和分析。\n\n### LLM与代理的优势\n\nLLM的语言和推理能力对于建模难以分析建模的上下文和任务特定业务需求至关重要。代理帮助构建动态、端到端的工作流。同时，通过分析性规则风险计算等防护措施，确保代理在既定边界内运行，并强调透明度和可追溯性。\n\n## 评估与反馈\n\n*   **评估：** 通过使用真实请求、用户活动和配置文件数据策划评估数据集来评估系统准确性和性能。每天运行评估以捕获潜在的回归（图12）。\n*   **反馈循环（数据飞轮）：** 用户查询、代理处理轨迹、上下文和最终输出都安全存储，用于反馈和审计。为数据所有者创建了数据工具，允许他们查看和审查决策并提供反馈，从而更新评估并评估整体流程（图13）。\n\n## 未来展望\n\n未来工作包括：\n\n*   **代理协作：** 支持代理代表用户直接访问数据的场景。\n*   **工具演进：** 持续改进数据仓库和工具，使其能被代理有效使用（最初为员工或服务构建）。",
      "shortSummary": "Meta正在通过AI代理解决方案提升数据仓库的数据访问和安全性。该方案采用多代理系统，数据用户代理协助获取数据，数据所有者代理管理权限。系统利用LLM进行上下文和意图管理，实现细粒度、风险受控的数据访问，尤其在数据探索阶段。通过防护措施、审计和反馈循环，确保代理安全高效运行，以应对日益复杂的数据管理挑战。",
      "translated_title": "为数据仓库数据访问和安全创建AI代理解决方案",
      "images": [
        {
          "url": "https://engineering.fb.com/wp-content/uploads/2025/07/image3.png",
          "alt": "",
          "title": "",
          "position": 1
        },
        {
          "url": "https://engineering.fb.com/wp-content/uploads/2025/07/image5.png",
          "alt": "",
          "title": "",
          "position": 2
        },
        {
          "url": "https://engineering.fb.com/wp-content/uploads/2025/07/image4.png",
          "alt": "",
          "title": "",
          "position": 3
        },
        {
          "url": "https://engineering.fb.com/wp-content/uploads/2025/07/image7.png",
          "alt": "",
          "title": "",
          "position": 4
        },
        {
          "url": "https://engineering.fb.com/wp-content/uploads/2025/07/image10.png",
          "alt": "",
          "title": "",
          "position": 5
        },
        {
          "url": "https://engineering.fb.com/wp-content/uploads/2025/07/image8.png",
          "alt": "",
          "title": "",
          "position": 6
        },
        {
          "url": "https://engineering.fb.com/wp-content/uploads/2025/07/image9.png",
          "alt": "",
          "title": "",
          "position": 7
        },
        {
          "url": "https://engineering.fb.com/wp-content/uploads/2025/07/image2.png",
          "alt": "",
          "title": "",
          "position": 8
        }
      ],
      "contentSource": "完整文章",
      "content": "<p>In this post, we explore the ways we’re evolving Meta’s data warehouse to facilitate productivity and security to serve both human users and AI agents.  We detail how we’re developing agents that help users making data access requests to get to the data they need, and that help data owners process requests and maintain security.  [...]</p>\n<p><a class=\"btn btn-secondary understrap-read-more-link\" href=\"https://engineering.fb.com/2025/08/13/data-infrastructure/agentic-solution-for-warehouse-data-access/\">Read More...</a></p>\n<p>The post <a rel=\"nofollow\" href=\"https://engineering.fb.com/2025/08/13/data-infrastructure/agentic-solution-for-warehouse-data-access/\">Creating AI agent solutions for warehouse data access and security</a> appeared first on <a rel=\"nofollow\" href=\"https://engineering.fb.com\">Engineering at Meta</a>.</p>\n"
    },
    {
      "title": "联邦平台与隐私浪潮：Meta 如何大规模分发合规相关任务 (原标题: Federation Platform and Privacy Waves: How Meta distributes compliance-related tasks at scale)",
      "link": "https://engineering.fb.com/2025/08/11/security/federation-platform-privacy-waves-meta-distributes-compliance-tasks/",
      "pubDate": "Mon, 11 Aug 2025 16:00:21 +0000",
      "isoDate": "2025-08-11T16:00:21.000Z",
      "creator": "",
      "summary": "## Meta的联邦平台与隐私浪潮：大规模合规任务管理\n\n### 引言\nMeta正在探索其“联邦平台”（Federation Platform）和“隐私浪潮”（Privacy Waves），这是一套可扩展的工具和方法，旨在高效管理大规模的合规相关任务，特别是隐私工作，以保障数十亿用户的数据安全。这套系统共同构建了一个结构化、有效且可持续的隐私工作运营方法。\n\n### 核心组件\n*   **联邦平台 (Federation Platform)**：负责将大型合规倡议分解为更小、更易于管理的工作流。它将任务分发给适当的团队，并使其能够跟踪从开始到完成的整个进度。\n*   **隐私浪潮 (Privacy Waves)**：将这些倡议的任务组织成每月批次，创建可预测的节奏，从而提高任务分发和管理的质量与问责制。它帮助团队系统地规划和执行合规相关工作，而非被动应对。\n\n### 关键效益与影响\n*   **效率与规模**：联邦平台和隐私浪潮在支持Meta的合规立场方面发挥着关键作用，每年管理超过10万项任务，并确保在既定时间内完成。据估计，该计划通过优化策略、工具和任务质量，节省了数十万工程工时。\n*   **开发人员体验**：内部调查显示，与临时任务相比，隐私浪潮任务的积极情绪显著更高。积极、管理良好的任务流程减少了运营负担，保持了士气，并维持了高生产力。\n*   **外部问责**：该系统通过清晰、标准化的实践以及一致的文档和验证，支持Meta应对外部要求，维护其合规姿态。\n*   **领域扩展**：该方法在隐私领域的成功促使其扩展到安全、可访问性以及更广泛的合规工作等其他领域。\n\n### 为何需要集中式工作分发与管理系统\n大型组织如Meta需要集中式系统来管理合规工作，原因如下：\n*   **大规模隐私义务的复杂性**：合规工作通常需要数千名工程师在数百个全球压力和主题领域完成小型、专业化的任务。\n*   **可扩展性与内部问责**：缺乏集中管理和监督会导致任务疲劳、难以满足完成预期，并降低开发人员情绪。\n*   **开发人员体验的重要性**：积极的任务流能提高产出，降低运营负担。\n*   **外部问责制的必要性**：Meta必须向监管机构和审计师展示一致有效的运营。\n\n### 联邦平台如何管理隐私工作：工作流配置\n在联邦平台上实施工作流需要定义代码逻辑，以反映潜在隐私问题的典型生命周期，包括检测、分发、修复和验证解决。技术工作流配置（代码文件）包含以下方法：\n*   **抓取标志 (Scraping flags)**：识别需要关注的潜在隐私问题标志，并将其摄入平台。\n*   **所有权解析 (Ownership resolution)**：实现逻辑以确定隐私标志的所有权，通常通过Meta的中央目录映射资产。\n*   **分组 (Grouping)**：可选地将相关标志分组，以便高效批量修复。\n*   **行动 (Actioning - Task/Diff)**：决定如何处理每个隐私标志或标志组，通常是创建任务或发送自动化代码更改。\n*   **任务内容与分发 (Task content and distribution)**：配置任务内容（背景、说明、修复工作流）和分发方式（通常通过隐私浪潮）。\n*   **解决逻辑 (Resolution logic)**：定义何时解决隐私标志，允许平台自动关闭或重新打开任务。\n\n这种通用配置模型也已扩展到安全、可访问性、API迁移、代码质量改进等其他工程卓越倡议中。\n\n### 端到端联邦流程概述\n除了技术配置，隐私工作流还遵循以下全面的端到端联邦流程：\n1.  **高层战略与规划**：在分发工作前，对隐私领域的整体战略进行彻底审查，确保其有效满足适用的隐私义务。产品组织会提前了解即将到来的隐私工作。\n2.  **配置高效任务体验**：联邦平台任务必须清晰沟通工作性质、截止日期、相关上下文和文档。通过向导式工作流、多选问题和自动化修复（如代码更改、点击修复工具）来引导用户，并嵌入AI支持代理。\n3.  **审查和改进任务质量**：审查委员会提供任务质量反馈。通过自动化健康信号（如完成率、开放任务、开发人员摩擦）和工程师情绪调查来监控和改进工作流。\n4.  **分发工作**：使用Linting工具防止分发低质量和低风险的工作。任务通过隐私浪潮（预定义、可预测的批次）分发，并利用复杂的匹配算法将任务与团队对齐。\n5.  **确保执行问责制**：设定截止日期，通过自动化提醒和升级机制确保按时完成。在所有组织层面严格衡量和报告隐私工作的完成率，培养问责文化。\n6.  **报告与认可**：集中分发系统标准化任务完成文档，为Meta的合规姿态提供清晰一致的证据。利用集中式认可工具，将工程师的贡献计入绩效评估，激励他们优先处理这些关键工作。\n\n### 联邦平台与浪潮的扩展\n随着Meta的不断发展，联邦平台和浪潮计划正积极扩展到安全、可访问性以及更广泛的合规相关领域。尽管面临不同类型的任务、复杂的多步骤修复流程和多变的截止日期等独特挑战，但其集中式任务分发、执行跟踪和问责制的基本原则提供了一个强大的框架来有效应对这些挑战。Meta致力于通过完善工具和流程，满足每个领域的特定需求，同时保持高质量和高效率标准，以超越预期。",
      "shortSummary": "Meta利用“联邦平台”和“隐私浪潮”系统大规模管理合规任务，特别是隐私工作。联邦平台负责任务分解与分发，隐私浪潮则通过月度批处理确保可预测性和问责制。该系统每年处理超10万项任务，显著提升了效率、开发人员满意度，并加强了外部合规性。其成功经验正扩展至安全和可访问性等领域，为Meta提供了统一、高效的合规管理框架，保障用户数据安全。",
      "translated_title": "联邦平台与隐私浪潮：Meta 如何大规模分发合规相关任务",
      "images": [],
      "contentSource": "RSS",
      "content": "<p>We’re exploring Meta’s Federation Platform, a scalable set of tools for managing compliance-related tasks, along with Privacy Waves, our method for batching these tasks and ensuring accountability.  Together, the Federation Platform and Privacy Waves create a structured, effective, and sustainable approach to operationalizing privacy work, enabling Meta to safeguard user data for the billions of [...]</p>\n<p><a class=\"btn btn-secondary understrap-read-more-link\" href=\"https://engineering.fb.com/2025/08/11/security/federation-platform-privacy-waves-meta-distributes-compliance-tasks/\">Read More...</a></p>\n<p>The post <a rel=\"nofollow\" href=\"https://engineering.fb.com/2025/08/11/security/federation-platform-privacy-waves-meta-distributes-compliance-tasks/\">Federation Platform and Privacy Waves: How Meta distributes compliance-related tasks at scale</a> appeared first on <a rel=\"nofollow\" href=\"https://engineering.fb.com\">Engineering at Meta</a>.</p>\n"
    },
    {
      "title": "差异风险评分：AI驱动的风险感知软件开发 (原标题: Diff Risk Score: AI-driven risk-aware software development)",
      "link": "https://engineering.fb.com/2025/08/06/developer-tools/diff-risk-score-drs-ai-risk-aware-software-development-meta/",
      "pubDate": "Wed, 06 Aug 2025 17:50:51 +0000",
      "isoDate": "2025-08-06T17:50:51.000Z",
      "creator": "",
      "summary": "# 差异风险评分 (DRS)：AI驱动的风险感知软件开发\n\n## 概述\nMeta 开发的差异风险评分 (Diff Risk Score, DRS) 是一项基于人工智能的技术，旨在预测代码更改导致生产事故（即 SEV）的可能性。DRS 基于经过微调的 Llama 大型语言模型 (LLM) 构建，通过评估代码更改和相关元数据来生成风险评分，并突出显示潜在的风险代码片段。\n\n## 核心价值与应用\nDRS 目前已为Meta的许多风险感知功能提供支持，这些功能优化了产品质量、开发者生产力以及计算容量效率。\n\n### 解决软件开发风险\n软件开发，特别是对于复杂、快速迭代和大规模的产品和技术而言，充满了风险。Meta 作为一家全球性公司，需要最佳工具来降低风险，保护用户体验和广告商成果。DRS 是 Meta 将 AI 应用于软件开发流程的首批成果之一，旨在通过预测代码更改是否可能导致 SEV，从而改进代码编写和推送的各个方面。\n\n### 关键用例：代码解冻\n历史上，为了降低敏感时期（如“网络星期五”购物周）的事故风险，Meta 的一些团队会“冻结”代码库的主要部分，阻止工程师发布代码。虽然这带来了明显的可靠性优势，但却以大幅降低生产力为代价。\n\nDRS 实现了更精细的方法，允许开发人员在这些时期提交风险较低的更改，同时最大限度地减少生产事故，从而保护用户体验、业务和生产力。\n\n*   **显著成效**：DRS 在多个敏感时期带来了显著的生产力提升。例如，在 2024 年一次重要的合作伙伴活动期间，DRS 帮助 Meta 成功提交了 10,000 多个代码更改（这些更改在以往的代码冻结期间是无法提交的），且对生产环境的影响极小，从而实现了持续创新和客户成功。\n*   **双重收益**：通过这种方式管理生产力和风险，Meta 获得了双重收益：提交了更多代码，并减少了工程师用于检测、理解和缓解生产事故的时间。\n\n## 未来展望\nDRS 的成功推动了 Meta 内部创建新的风险感知功能，这些功能涵盖了从规划到发布后监控的整个开发生命周期。对构建此类功能的需求也促使 Meta 建立了风险感知平台 (Risk Awareness Platform, RAP)，以提供风险分析 API 和工具集成。\n\nMeta 设想了风险感知在未来几个月和几年的四个主要发展方向：\n\n1.  **扩展 DRS 驱动的功能**：尽管风险感知平台已经涌现出大量由 DRS 驱动的功能（如优化构建和测试选择、提高可靠性、选择代码审查员以及分析发布风险），但这仅仅是开始。软件工程中的一个关键问题是在可靠性阈值下最大化创新率，因此风险理解的应用几乎是无穷无尽的。Meta 将继续构建更多风险感知功能并提高其质量。\n2.  **超越代码更改风险**：将风险预测扩展到配置更改风险。虽然代码更改是 Meta 发生 SEV 的主要原因，但配置更改是另一个重要类别。RAP 已扩展，包含预测各种配置更改风险的模型。\n3.  **自动化风险缓解**：Meta 计划使用 AI 代理主动生成风险缓解更改，而不仅仅是标记风险差异或推荐回滚机制。这适用于“动态”代码（即差异或拉取请求）和“静态”代码，以降低基线代码库风险。未来，这些代理还将能够灵活地处理代码和配置更改。\n4.  **自然语言输出解释**：Meta 将越来越多地使用自然语言输出来向人类解释这些风险感知技术的作用和原因。通过帮助工程师理解风险评分背后的原理，Meta 将赋能他们缓解风险或向模型提供反馈以提高准确性，从而形成一个改进风险模型和最终用户体验的学习循环。\n\n## 总结\nMeta 对风险感知软件开发的未来充满期待，并期待与行业同行共同学习和进步。",
      "shortSummary": "Meta 的差异风险评分 (DRS) 是一项 AI 驱动的技术，利用微调的 Llama LLM 预测代码更改导致生产事故的风险。它显著提升了开发者生产力，通过实现“代码解冻”等功能，允许在敏感时期提交低风险更改，同时保障系统可靠性。DRS 已有众多应用，未来将扩展至配置风险、自动化风险缓解，并利用自然语言解释 AI 决策，以持续优化软件开发流程。",
      "translated_title": "差异风险评分：AI驱动的风险感知软件开发",
      "images": [],
      "contentSource": "RSS",
      "content": "<p>The state of the research Diff Risk Score (DRS) is an AI-powered technology built at Meta that predicts the likelihood of a code change causing a production incident, also known as a SEV. Built on a fine-tuned Llama LLM, DRS evaluates code changes and metadata to produce a risk score and highlight potentially risky code [...]</p>\n<p><a class=\"btn btn-secondary understrap-read-more-link\" href=\"https://engineering.fb.com/2025/08/06/developer-tools/diff-risk-score-drs-ai-risk-aware-software-development-meta/\">Read More...</a></p>\n<p>The post <a rel=\"nofollow\" href=\"https://engineering.fb.com/2025/08/06/developer-tools/diff-risk-score-drs-ai-risk-aware-software-development-meta/\">Diff Risk Score: AI-driven risk-aware software development</a> appeared first on <a rel=\"nofollow\" href=\"https://engineering.fb.com\">Engineering at Meta</a>.</p>\n"
    },
    {
      "title": "为所有人构建人机界面 (原标题: Building a human-computer interface for everyone)",
      "link": "https://engineering.fb.com/2025/08/04/virtual-reality/building-a-human-computer-interface-for-everyone-meta-tech-podcast/",
      "pubDate": "Mon, 04 Aug 2025 14:00:25 +0000",
      "isoDate": "2025-08-04T14:00:25.000Z",
      "creator": "",
      "summary": "## 为所有人构建人机界面：Meta Reality Labs 的研究\n\nMeta Reality Labs 的最新研究正坚定地指向腕戴式设备，特别是利用表面肌电图（sEMG）技术，作为未来人机交互（HCI）的关键方向。这项研究旨在实现仅通过细微手部动作即可控制任何设备。\n\n### 核心挑战：通用性\n\n在人机交互领域，通用性一直是最大的挑战之一。目前，驱动设备的机器学习模型通常是为特定个体的手势进行训练的，但它们难以将相同的学习应用于其他人。这意味着，新型人机交互设备通常是“一对一”的，即只适用于特定用户。\n\n### Meta 团队的应对策略\n\nMeta 的 EMG 工程和研究团队正在积极应对这一通用性挑战，并重新构想我们与技术互动的方式。该团队致力于开发一种能够适用于所有人的腕戴式输入设备。\n\n### Meta Tech Podcast 深入探讨\n\n在最新一期的 Meta Tech Podcast 中，Pascal Hartig 与 Meta EMG 工程和研究团队的研究科学家 Sean B.、Lauren G. 和 Jesse M. 进行了深入交流。他们讨论了以下关键议题：\n\n*   **通用人机神经运动接口的创建之路**：如何打造一个首创的、能够普遍适用的接口。\n*   **软硬件工程与神经科学的融合**：探讨当软件、硬件工程与神经科学相结合时会发生什么，以及这种交叉学科如何推动创新。\n\n### 播客收听方式\n\n该播客节目可在以下平台下载或收听：\n\n*   Spotify\n*   Apple Podcasts\n*   Pocket Casts\n\nMeta Tech Podcast 由 Meta 推出，旨在展示 Meta 工程师在各个层面的工作，从底层框架到最终用户功能。听众可以通过 Instagram、Threads 或 X 提供反馈。如果对 Meta 的职业机会感兴趣，可以访问 Meta 招聘页面。",
      "shortSummary": "Meta Reality Labs 正在研究利用腕戴式 sEMG 设备，通过细微手部动作实现通用设备控制。当前人机交互面临的最大挑战是通用性，即设备通常“一对一”地为特定用户设计。Meta 的 EMG 团队正致力于解决这一问题，旨在开发一个适用于所有人的通用人机神经运动接口。相关研究和进展在 Meta Tech Podcast 中有详细讨论，涵盖了软硬件工程与神经科学的融合。",
      "translated_title": "为所有人构建人机界面",
      "images": [],
      "contentSource": "RSS",
      "content": "<p>What if you could control any device using only subtle hand movements? New research from Meta’s Reality Labs is pointing even more firmly toward wrist-worn devices using surface electromyography (sEMG) becoming the future of human-computer interaction. But how do you develop a wrist-worn input device that works for everyone? Generalization has been one of the [...]</p>\n<p><a class=\"btn btn-secondary understrap-read-more-link\" href=\"https://engineering.fb.com/2025/08/04/virtual-reality/building-a-human-computer-interface-for-everyone-meta-tech-podcast/\">Read More...</a></p>\n<p>The post <a rel=\"nofollow\" href=\"https://engineering.fb.com/2025/08/04/virtual-reality/building-a-human-computer-interface-for-everyone-meta-tech-podcast/\">Building a human-computer interface for everyone</a> appeared first on <a rel=\"nofollow\" href=\"https://engineering.fb.com\">Engineering at Meta</a>.</p>\n"
    },
    {
      "title": "使用 ExecuTorch 加速 Meta 系列应用中的设备端机器学习 (原标题: Accelerating on-device ML on Meta’s family of apps with ExecuTorch)",
      "link": "https://engineering.fb.com/2025/07/28/android/executorch-on-device-ml-meta-family-of-apps/",
      "pubDate": "Mon, 28 Jul 2025 20:30:33 +0000",
      "isoDate": "2025-07-28T20:30:33.000Z",
      "creator": "",
      "summary": "## 使用 ExecuTorch 加速 Meta 系列应用中的设备端机器学习\n\nExecuTorch 是 Meta 开发的 PyTorch 边缘设备推理框架，并获得了 Arm、Apple 和 Qualcomm 等行业领导者的支持。它是一个开源解决方案，旨在加速 Meta 旗下应用（FoA）在移动和边缘设备上的设备端机器学习（ML）模型运行。\n\n### 设备端机器学习的重要性\n\n在 Meta 的应用中，设备端机器学习日益重要，主要原因包括：\n*   **改善延迟**：模型在本地运行，减少了网络往返时间。\n*   **维护用户隐私**：数据保留在用户设备上，无需上传到服务器。\n*   **实现离线功能**：即使没有网络连接，部分功能也能正常使用。\n\n### ExecuTorch 的核心优势\n\nExecuTorch 基于 PyTorch 2.x 技术构建，将模型转换为稳定、紧凑的表示形式，以实现高效的设备端部署。其主要特点包括：\n*   **紧凑的运行时**：占用资源少。\n*   **模块化和可扩展性**：开发者可以轻松选择和自定义组件。\n*   **高可移植性**：确保跨平台兼容性。\n*   **PyTorch 兼容性**：与现有 PyTorch 生态系统无缝集成。\n\n### ExecuTorch 在 Meta 应用中的实际应用\n\nExecuTorch 已在 Instagram、WhatsApp、Messenger 和 Facebook 等 Meta 应用中广泛部署，为数十亿用户提供服务，并显著提升了设备端 ML 模型的性能和效率，简化了从研究到生产的路径。\n\n#### 1. Instagram 的“抠图”功能 (Cutouts)\n*   **功能描述**：允许用户将照片和视频转换为动画个性化贴纸，分享到 Reels 或 Stories。\n*   **ExecuTorch 优化**：通过启用 SqueezeSAM（Meta Segment Anything Model (SAM) 的轻量级版本），在 Android 和 iOS 上显著提升了“抠图”功能的运行速度。\n*   **成果**：日活跃用户 (DAU) 显著增加。\n\n#### 2. WhatsApp 视频和通话质量优化\n*   **功能描述**：开发带宽估算模型，优化视频流质量，确保视频通话流畅性。\n*   **ExecuTorch 优化**：提升了带宽估算模型的性能、可靠性和效率。\n*   **成果**：大幅减少了模型加载时间和平均推理时间，降低了应用无响应 (ANR) 指标，并通过模糊测试增强了安全性。Meta 正在将其他关键 WhatsApp 模型（如设备端降噪和视频增强）迁移到 ExecuTorch。\n\n#### 3. Messenger 端到端加密 (E2EE) 中的设备端机器学习\n*   **功能描述**：确保只有对话双方能看到消息内容，Meta 也无法查看。\n*   **ExecuTorch 优化**：将服务器端模型迁移到设备端，使数据传输保持加密。部署了设备端语言识别 (LID) 模型，该模型能快速检测文本语言，支持翻译、消息摘要和个性化内容推荐等任务。\n*   **成果**：设备端 LID 运行速度显著加快，节省了服务器和网络容量。同时，其他 Messenger 模型（如视频通话质量优化和图像抠图）也已迁移到设备端，提高了基础设施效率并支持全球功能扩展。\n\n#### 4. Facebook 背景音乐推荐\n*   **功能描述**：核心 AI 模型 SceneX 执行图像识别/分类、字幕、AI 生成背景和图像安全检查等任务。\n*   **ExecuTorch 优化**：将 SceneX 迁移到 ExecuTorch 后，可根据图片为 Facebook Stories 推荐背景音乐。\n*   **成果**：SceneX 在低端到高端设备上的性能全面提升。其他图像质量增强和通话背景降噪模型也处于 A/B 测试阶段。\n\n### ExecuTorch 社区与未来展望\n\nMeta 鼓励行业贡献者和开发者参与 ExecuTorch 项目，通过其 GitHub 页面分享反馈，并加入 ExecuTorch Discord 服务器社区。Meta 期待与社区共同推动设备端机器学习的创新，塑造设备端 AI 的未来。",
      "shortSummary": "ExecuTorch 是 Meta 开发的开源 PyTorch 边缘设备推理框架，旨在加速其应用系列中的设备端机器学习。它通过提升性能、保护用户隐私和实现离线功能，显著改善了用户体验。ExecuTorch 已成功应用于 Instagram 抠图、WhatsApp 视频通话质量优化、Messenger 端到端加密中的语言识别以及 Facebook 背景音乐推荐等功能，实现了模型运行更快、效率更高、资源消耗更低，并简化了从研究到生产的流程。",
      "translated_title": "使用 ExecuTorch 加速 Meta 系列应用中的设备端机器学习",
      "images": [],
      "contentSource": "RSS",
      "content": "<p>ExecuTorch is the PyTorch inference framework for edge devices developed by Meta with support from industry leaders like Arm, Apple, and Qualcomm.  Running machine learning (ML) models on-device is increasingly important for Meta’s family of apps (FoA). These on-device models improve latency, maintain user privacy by keeping data on users’ devices, and enable offline functionality. [...]</p>\n<p><a class=\"btn btn-secondary understrap-read-more-link\" href=\"https://engineering.fb.com/2025/07/28/android/executorch-on-device-ml-meta-family-of-apps/\">Read More...</a></p>\n<p>The post <a rel=\"nofollow\" href=\"https://engineering.fb.com/2025/07/28/android/executorch-on-device-ml-meta-family-of-apps/\">Accelerating on-device ML on Meta’s family of apps with ExecuTorch</a> appeared first on <a rel=\"nofollow\" href=\"https://engineering.fb.com\">Engineering at Meta</a>.</p>\n"
    },
    {
      "title": "策略区域：Meta 如何在批处理系统中大规模实施目的限制 (原标题: Policy Zones: How Meta enforces purpose limitation at scale in batch processing systems)",
      "link": "https://engineering.fb.com/2025/07/23/security/policy-zones-meta-purpose-limitation-batch-processing-systems/",
      "pubDate": "Wed, 23 Jul 2025 23:00:05 +0000",
      "isoDate": "2025-07-23T23:00:05.000Z",
      "creator": "",
      "summary": "# 策略区域：Meta 在批处理系统中大规模实施目的限制\n\nMeta 开发了隐私感知基础设施（Privacy Aware Infrastructure, PAI）和策略区域（Policy Zones），旨在大规模批处理系统中强制执行数据目的限制。策略区域与 Meta 的 EB 级数据仓库和处理系统深度集成，通过运行时强制执行和 SQL 解析，在每天数百万的数据流中传播和执行隐私标注，每小时执行数万亿次用户同意检查。\n\n## 核心问题与解决方案\n\n**挑战：**\n*   **传统访问控制（ACL）的局限性：** 过去依赖访问控制列表（ACL）来保护数据集，但这需要将数据进行物理上的粗粒度分离，以确保每个数据集只有一个目的。这种方法在小规模下可行，但在大规模复杂数据依赖关系中会导致巨大的操作开销和频繁的审计需求。\n*   **粗粒度数据分离：** 难以在复杂的数据依赖关系中实现数据和处理的完全分离。\n*   **过度保守的数据标记（标签蔓延）：** 偶然访问受目的限制的数据会导致所有派生数据集也被标记为受限，即使访问是虚假的。\n*   **缺乏治理和可扩展的数据模型：** 存在大量内部数据策略和隐私控制，且新策略不断产生，需要强大的控制机制和独立运作的能力。\n\n**策略区域的解决方案：**\n*   **信息流控制（IFC）原则：** 策略区域利用信息流控制原则，不仅控制数据访问，还实时控制数据的处理和传输，提供更持久和可持续的方法。\n*   **细粒度信息流跟踪：** 跟踪数据流向，确保下游数据的限制至少与上游源数据一样严格，从而无需粗粒度地分离数据。\n*   **策略区域管理器（PZM）：** 开发了一套工具来识别潜在的过度标记情况，并通过再分类系统允许工程师安全地停止敏感数据标签的传播。\n*   **可治理数据标注（GDAs）：** 引入精确、受治理的标注，描述受目的限制的数据类型。GDAs 具有受控的生命周期，限制了谁可以创建、关联或移除标注，并确保每个策略独立运作。\n\n## 策略区域的关键组件与运作机制\n\n1.  **隐私感知基础设施 (PAI)：**\n    *   PAI 是一个旨在简化数据流、确保目的限制和透明度的框架，利用自动化减少隐私合规的开销。\n    *   策略区域是 PAI 的关键组成部分，使工程师能够专注于产品创新，同时遵守用户隐私承诺。\n\n2.  **可治理数据标注 (GDAs)：**\n    *   GDAs 是简单、人类可读的标签（例如：MESSAGING_DATA），用于描述数据集上的目的使用限制。\n    *   它们影响数据集的访问行为，并具有受控的生命周期，以确保数据策略得到遵守。\n\n3.  **统一编程模型 (UPM)：**\n    *   UPM 是一个 SQL 解析器，它拦截由各种数据处理器发出的查询，并将其转换为语义树。\n    *   这些语义树捕获了每个数据移动步骤的输入、输出和转换，为精确的策略执行提供了必要的信号。\n\n4.  **策略评估服务 (PES)：**\n    *   PES 接收 UPM 解析后的信息，执行流控制检查，验证数据移动和转换步骤是否符合隐私策略。\n    *   如果允许数据流，PES 会将决策传递给计算引擎。\n\n5.  **数据仓库权限服务 (WPS)：**\n    *   WPS 对数据仓库的访问执行最终验证，确保以隐私策略感知的方式进行访问。\n    *   PES 向客户端颁发包含加密签名上下文信息的特殊令牌（“密钥”），该密钥通过计算引擎传递并在访问时使用，以确保安全的数据流。\n\n## 规模化应用与示例：保护用户消息数据\n\n*   **规模：** 策略区域控制数百万个数据集的访问，每天分析数千万个数据流，每小时执行数万亿次批处理用户同意检查，并处理数百种不同的数据策略要求。\n*   **消息数据保护：**\n    *   用户消息数据（如交付时间戳、状态等非内容数据）通过日志或数据库抓取进入 Meta 的数据仓库和 AI 系统。\n    *   数据通过消息队列 Scribe 流式传输，可实时处理或存储以进行异步批处理。\n    *   日志库配置时会关联一个 GDA（如 MESSAGING_DATA）。\n    *   策略区域基础设施会强制执行限制：下游数据资产必须携带相同的 GDA，且访问仅限于中央配置中定义的允许目的。\n    *   策略区域验证 GDA 与下游 Scribe 类别的关联，确保合规的数据流。\n*   **数据仓库中的策略执行：**\n    *   数据仓库中的数据处理通常使用 SQL 进行，例如 Presto 等流行处理器。\n    *   Dataswarm 作为分布式作业调度框架，负责调度 SQL 查询。\n    *   UPM 解析这些 SQL 查询，PES 进行流控制检查，WPS 进行最终验证，确保数据流在整个仓库中都符合策略。\n\n通过将隐私作为基础设施的核心部分，Meta 赋能产品团队创建新的体验，同时始终尊重用户隐私。",
      "shortSummary": "Meta 开发了“策略区域”（Policy Zones）和“隐私感知基础设施”（PAI），以在大规模批处理系统中强制执行数据目的限制。该系统利用信息流控制原则、可治理数据标注（GDAs）和运行时强制执行，跟踪并限制数据流。它解决了传统访问控制的局限性，通过细粒度跟踪、再分类和强大的治理机制，确保数据在数万亿次操作中符合隐私要求。这使得工程师能专注于创新，同时履行对用户的隐私承诺。",
      "translated_title": "策略区域：Meta 如何在批处理系统中大规模实施目的限制",
      "images": [],
      "contentSource": "RSS",
      "content": "<p>Meta has developed Privacy Aware Infrastructure (PAI) and Policy Zones to enforce purpose limitations on data, especially in large-scale batch processing systems.  Policy Zones integrates with Meta’s exabyte-scale data warehouse and processing systems, using runtime enforcement and SQL parsing to propagate and enforce privacy annotations across millions of daily data flows per day, performing trillions [...]</p>\n<p><a class=\"btn btn-secondary understrap-read-more-link\" href=\"https://engineering.fb.com/2025/07/23/security/policy-zones-meta-purpose-limitation-batch-processing-systems/\">Read More...</a></p>\n<p>The post <a rel=\"nofollow\" href=\"https://engineering.fb.com/2025/07/23/security/policy-zones-meta-purpose-limitation-batch-processing-systems/\">Policy Zones: How Meta enforces purpose limitation at scale in batch processing systems</a> appeared first on <a rel=\"nofollow\" href=\"https://engineering.fb.com\">Engineering at Meta</a>.</p>\n"
    },
    {
      "title": "Meta 如何保持其 AI 硬件的可靠性 (原标题: How Meta keeps its AI hardware reliable)",
      "link": "https://engineering.fb.com/2025/07/22/data-infrastructure/how-meta-keeps-its-ai-hardware-reliable/",
      "pubDate": "Tue, 22 Jul 2025 18:45:16 +0000",
      "isoDate": "2025-07-22T18:45:16.000Z",
      "creator": "",
      "summary": "## Meta 如何保持其 AI 硬件的可靠性\n\n硬件故障，特别是静默数据损坏（SDCs），对AI训练和推理具有显著影响。SDCs是硬件引起的未被检测到的数据错误，对依赖准确数据进行训练和提供有用输出的AI系统尤其有害。Meta分享了其在不同规模下部署的检测SDC的方法，以确保其AI基础设施的可靠性。\n\n### Meta 的 AI 基础设施概览\n\nMeta的全球AI基础设施由大量硬件组件和服务器组成，通过网络结构连接在全球分布式数据中心。该设置集成了存储、计算和网络架构，以及为训练或推理工作负载量身定制的独特文件系统和PyTorch应用程序。该基础设施支持大规模模型训练以及文本到图像生成和对象分割等高级AI应用。\n\n自2018年以来，Meta在硬件可靠性方面取得了显著进展，识别了磁盘、CPU、内存、交换机、GPU、ASIC和网络中独特的故障类型，经常在发现故障模式方面引领行业。Meta开发了缓解策略，以确保基础设施的平稳运行和可用性。\n\n### AI 集群面临的挑战\n\n*   **硬件故障影响：** 训练大规模模型涉及数千个加速器在同步环境中运行，任何组件故障都可能中断或停止进程。Meta专注于通过检测和诊断来减少训练期间的硬件故障，并使用健康的服务器和加速器快速重启训练。\n*   **Llama 3 经验：** 在运行Llama 3模型集群的经验中，SRAM、HBM、处理网格和网络交换机硬件等组件的硬件故障显著影响AI集群的可靠性，超过66%的训练中断是由此类故障引起的。\n*   **特定挑战：** 加速器可能比CPU可靠性低（复杂性、遥测有限），网络复杂性可能导致故障归因错误，GPU软件堆栈内的错误可能需要大量配置才能纠正。减少硬件和配置故障可大大提高集群效率。\n\n### Meta 遇到的硬件故障类型\n\nMeta基础设施中的硬件故障或错误可大致分为三类：\n\n1.  **静态错误：** 硬件故障通常表现为二元状态（例如，设备通电或断电）。这些错误在大规模部署中易于识别和修复，尽管随着配置和设备规模的增长，它们可能更频繁地发生。\n2.  **瞬态错误：** 这些错误以其可重现性分类，包括负载相关或部分可观察的故障（例如，热失控导致的设备问题或不可纠正错误导致的随机崩溃）。缓解涉及理解其表现条件，并通过大规模部署进行分类和模式匹配。超大规模基础设施中RAS遥测的进步大大改善了这一过程。\n3.  **静默错误（SDCs）：** 当硬件计算错误但未留下可检测的痕迹时发生，导致应用程序消耗不正确的结果。这些错误通常是由于硅缺陷引起的，除非观察到显著偏差，否则可能长时间未被发现。检测它们需要大量的工程投入和昂贵的遥测来追溯数据损坏到特定设备。随着加速器中硅密度的增加，静默数据损坏现在大约每千个设备发生一次故障，远高于宇宙射线引起的软错误。\n\n### SDCs 带来的关键挑战\n\nSDCs在超大规模基础设施中带来了重大挑战，因为它们具有数据依赖性，为所有可能的数据值创建了不切实际的指数级测试空间。这些故障还取决于设备电压、频率、操作温度和生命周期。因此，在设备的整个生命周期中，在随机状态空间内进行一致、定期和频繁的测试是必要的。\n\n### 新颖的 SDC 检测机制\n\n为了保护应用程序免受静默数据损坏，Meta采用了多种检测机制：\n\n*   **Fleetscanner：** 通过有针对性的微基准测试在大规模上捕获性能异常，以识别硬件缺陷。这些测试在维护操作期间定期运行，每45到60天覆盖整个集群。\n*   **Ripple：** 与工作负载协同运行，在毫秒到秒内执行测试，几天内实现全集群覆盖。它在核心和线程之间重叠测试指令，提供比Fleetscanner更快的检测。\n*   **Hardware Sentinel：** 一种新颖的、与测试和架构无关的方法，在内核空间评估应用程序异常。它将基于核心的异常识别为静默数据损坏，无需测试分配，仅在分析平面运行。Hardware Sentinel在不同架构、应用程序和数据中心中，性能比基于测试的方法高出41%。\n\n这些机制结合起来，提供了最佳的在役集群SDC检测和保护覆盖。\n\n### AI 硬件中的静默错误\n\n上述方法已在整个集群中全面生产化部署，检测AI和非AI基础设施中的SDCs。然而，AI应用程序（如训练和推理）对SDCs具有独特且更具挑战性的影响。\n\n#### 训练工作负载中的 SDCs\n\n训练工作负载中的SDCs导致不正确的计算，影响前向和后向传播，从而导致与预期训练路径的偏离。虽然AI训练工作负载有时被认为是SDCs的自适应性，但这仅适用于有限的SDC表现形式。在大多数实际场景中，自适应性不足，SDCs会持续存在并加剧影响。\n\n1.  **NaN 传播：** 当SDC将可表示值推入不正确的表示形式时，在训练计算期间生成NaN。一旦创建NaN，它会通过后续计算传播，影响训练迭代、加速器域、主机域，并最终影响整个集群。这可能导致集群停止，需要识别并隔离有问题的加速器和节点。\n2.  **梯度方差损坏：** 当SDC影响梯度计算时发生，导致梯度爆炸、内爆或局部最小值。这种损坏在数值范围内，但被错误地视为正确，影响同步训练中的整个集群。这些损坏的梯度值被视为真实值进行交换，导致训练看似进展但实际没有改进。检测这些SDCs具有挑战性，因为它们很微妙，并且需要数周或数月才能观察到其影响。\n\n#### 推理工作负载中的 SDCs\n\n在推理应用程序中，SDCs导致不正确的结果，由于操作规模，影响数千个推理消费者。持续的SDCs可以直接影响推荐引擎或LLM输出等系统做出的决策。这些损坏可能绕过与隐私或完整性相关的策略，因为它们不受边界限制。因此，推理损坏显著降低了使用大量计算资源训练的模型的效果。\n\n### SDCs 的影响\n\nSDCs在训练和推理集群中创建了复杂的调试场景。在训练中，可见故障会停止集群，但SDCs会制造进展的假象，掩盖故障源。NaN传播需要识别有问题的节点，否则从检查点重启最终会失败。梯度方差损坏会延长这种假象，直到方差累积，使重启无效。因此，SDCs导致显著的计算效率低下，比可见故障具有更大的时间影响。\n\n在推理中，分类涉及每个子阶段的昂贵遥测。在识别出有问题的节点之前，推理集群无法使用，存在重复损坏的风险。大的偏差更容易通过异常检测器检测到，但小的偏差需要大量的调试，这涉及数百名工程师，停止生产用例，并影响服务生产的可靠容量。\n\n### AI 硬件中 SDCs 的检测和缓解策略\n\nMeta在基础设施中运行的SDC处理策略分为基础设施策略和堆栈策略：\n\n#### 基础设施策略（集群层面）\n\n1.  **还原性分类（Reductive triage）：** 通过对逐渐减小的集群规模进行迷你训练迭代的二分查找，以隔离NaN传播。目标是识别一个能重现NaN问题的小集群，从而隔离有问题的节点进行进一步调查。然后，可以使用新节点重组集群并从保存的检查点恢复训练。\n2.  **确定性训练：** 运行已知有效的模型进行几次训练迭代，以确保没有NaN或梯度发散。它有助于验证不依赖于数据的计算故障，因为它保证了特定值和训练输入的正确性。\n3.  **超检查点（Hyper-checkpointing）：** 以越来越高的频率创建检查点，以促进更快地识别和隔离损坏节点。它有助于保持训练吞吐量，同时将NaN传播限制在特定的加速器或主机上，从而加快分类和隔离过程。\n\n#### 堆栈策略（软件堆栈层面，与工作负载协调）\n\n1.  **梯度裁剪（Gradient clipping）：** 在训练工作负载中强制执行梯度裁剪，将值限制在指定范围内，从而缓解NaN传播。超出此范围的计算将被裁剪，并且可以通过根据操作数符号将其设置为最大或最小值来在此步骤中检测NaN。\n2.  **算法容错（Algorithmic fault tolerance）：** 将容错集成到训练算法中，以处理一系列数据损坏，从而减少对检测和分类的需求。它以最小的开销提高计算效率，如在CPU训练中所示。",
      "shortSummary": "Meta致力于确保其庞大AI硬件基础设施的可靠性，尤其关注静默数据损坏（SDCs）。SDCs是硬件引起的未检测错误，严重影响AI训练（如NaN传播、梯度损坏）和推理，导致效率低下和结果不准确。为应对此挑战，Meta部署了Fleetscanner、Ripple和Hardware Sentinel等先进检测机制。同时，结合基础设施层面的还原性分类、确定性训练和超检查点，以及软件堆栈层面的梯度裁剪和算法容错等多种缓解策略，以保障AI系统的稳定运行。",
      "translated_title": "Meta 如何保持其 AI 硬件的可靠性",
      "images": [],
      "contentSource": "RSS",
      "content": "<p>Hardware faults can have a significant impact on AI training and inference. Silent data corruptions (SDCs), undetected data errors caused by hardware, can be particularly harmful for AI systems that rely on accurate data for training as well as providing useful outputs. We are sharing methodologies we deploy at various scales for detecting SDC across [...]</p>\n<p><a class=\"btn btn-secondary understrap-read-more-link\" href=\"https://engineering.fb.com/2025/07/22/data-infrastructure/how-meta-keeps-its-ai-hardware-reliable/\">Read More...</a></p>\n<p>The post <a rel=\"nofollow\" href=\"https://engineering.fb.com/2025/07/22/data-infrastructure/how-meta-keeps-its-ai-hardware-reliable/\">How Meta keeps its AI hardware reliable</a> appeared first on <a rel=\"nofollow\" href=\"https://engineering.fb.com\">Engineering at Meta</a>.</p>\n"
    }
  ],
  "lastUpdated": "2025-09-19T05:23:47.139Z"
}