{
  "sourceUrl": "https://github.blog/feed/",
  "title": "The GitHub Blog",
  "description": "Updates, ideas, and inspiration from GitHub to help developers build and design software.",
  "link": "https://github.blog/",
  "items": [
    {
      "title": "构建你的第一个MCP服务器：如何用自定义能力扩展AI工具 (原标题: Building your first MCP server: How to extend AI tools with custom capabilities)",
      "link": "https://github.blog/ai-and-ml/github-copilot/building-your-first-mcp-server-how-to-extend-ai-tools-with-custom-capabilities/",
      "pubDate": "Fri, 22 Aug 2025 16:52:27 +0000",
      "isoDate": "2025-08-22T16:52:27.000Z",
      "creator": "Chris Reddington",
      "summary": "## 模型上下文协议（MCP）：扩展AI工具的标准化方法\n\n文章介绍了模型上下文协议（MCP），这是一种标准化方法，旨在扩展AI工具（如GitHub Copilot）的自定义能力，使其能够访问外部系统、私有数据并执行特定操作。\n\n### 为什么MCP对开发者很重要？\n\n当前的AI工具存在以下局限性：\n\n*   **数据访问受限**：无法原生访问私有数据进行检索增强生成（RAG），如GitHub仓库信息、最新文档或实时数据。\n*   **行动能力不足**：无法执行创建拉取请求、探索本地运行应用的UI或与API交互等操作。\n\n在MCP出现之前，将第三方工具和服务集成到AI中没有标准方法，可能需要为不同的AI工具使用不同的插件和集成模式。MCP通过提供一个统一的标准，解决了这一问题，允许将工具和能力插入任何支持该协议的AI工具中。\n\n### MCP的客户端-服务器模式\n\nMCP遵循开发者熟悉的客户端-服务器模式：\n\n*   **主机（Host）**：你正在使用的AI工具，例如VS Code中的GitHub Copilot。主机通过客户端启动与MCP服务器的连接。\n*   **客户端（Clients）**：存在于主机应用程序内部，与服务器之间是1:1关系。当VS Code连接到新的MCP服务器时，会创建一个新的客户端来维护连接。\n*   **服务器（Server）**：你自定义的MCP服务器，提供工具、资源和提示。例如，文章作者构建了一个提供回合制游戏能力的MCP服务器。\n\n### 构建回合制游戏MCP服务器\n\n为了学习和演示MCP，作者构建了一个可视化的回合制游戏服务器，允许用户与Copilot玩井字棋和石头剪刀布。该项目包含以下组件，均使用TypeScript编写：\n\n*   **Next.js Web应用和API**：用于本地运行的演示/学习目的。\n*   **MCP服务器**：使用MCP TypeScript SDK实现。\n*   **共享库**：包含通用类型定义和组件，在Web应用、API和MCP服务器之间复用。\n\n**工作原理：**\n\n1.  在VS Code中注册MCP服务器，使Copilot了解新的能力和工具。\n2.  用户在VS Code中与GitHub Copilot交互，可以显式调用工具或让Copilot自动发现。\n3.  Copilot调用大型语言模型（LLM）。\n4.  LLM根据提示上下文和可用工具，可能会调用MCP服务器。\n5.  MCP服务器执行请求的工具（例如，在游戏中移动），并返回结果。\n6.  Copilot使用这些结果继续对话。\n\n通过在MCP应用主机（如VS Code中的GitHub Copilot）中注册MCP服务器，AI代理便能访问这些服务器中内置的能力。\n\n![一个MCP服务器配置的截图，显示了回合制游戏MCP服务器正在运行。它显示了一个弹出窗口，列出了MCP服务器的几个工具，包括analyze_game、create_rock_paper_scissors_game、create_tic_tac_toe_game、play_rock_paper_scissor、play_tic_tac_toe和wait_for_player_move。](https://github.blog/wp-content/uploads/2025/08/rdt1.png?resize=1024%2C576)\n\n### 在VS Code中设置MCP服务器\n\n可以通过创建`.vscode/mcp.json`文件来配置MCP服务器。例如，可以配置Playwright MCP服务器和回合制游戏MCP服务器。作者的演示项目采用单体仓库（monorepo）方法，将Web应用、API和MCP服务器捆绑在一起，便于本地克隆和运行。对于更健壮的设置，MCP服务器通常会作为包（如npm或Docker镜像）分发。\n\n### MCP的三个核心构建块\n\n通过构建项目，作者熟悉了MCP服务器的三个基本概念：\n\n1.  **工具（Tools）**：定义AI可以执行的动作。每个工具都有清晰的描述和输入schema。例如，游戏服务器中的工具包括`analyze_game`（获取游戏状态）、`create_tic_tac_toe_game`（开始井字棋游戏）和`play_tic_tac_toe`（AI在井字棋中移动）。AI（Copilot/LLM）不计算实际游戏动作，而是MCP服务器执行特定工具的处理程序来运行CPU游戏逻辑。\n2.  **资源（Resources）**：AI可以访问的上下文信息，通常具有基于URI的标识符。例如，自定义URI方案如`game://tic-tac-toe/{Game-ID}`用于获取特定井字棋游戏的状态。MCP服务器将这些资源URI转换为对本地API服务器的API调用，并传递原始响应作为工具调用的上下文。\n3.  **提示（Prompts）**：为用户提供可重用的指导。除了用户自定义提示外，MCP服务器可以附带预定义的提示，如不同难度级别的策略指南、游戏规则或故障排除帮助。用户可以通过VS Code中的斜杠命令（如`/strategy`）访问这些提示。\n\n### 实际应用和注意事项\n\n尽管游戏演示项目旨在简化学习，但其模式适用于其他MCP服务器：\n\n*   **GitHub MCP服务器**：获取GitHub Issues/PRs信息、列出Dependabot警报，或创建/管理Issues/PRs。\n*   **Playwright MCP服务器**：自动化浏览器导航、交互、截图和内容检查。\n*   **自定义API服务器**：连接到内部服务、数据库或业务逻辑。\n\n**其他考量：**\n\n*   **认证和安全**：生产环境的MCP服务器可能需要处理认证和授权。GitHub MCP服务器支持OAuth流程和个人访问令牌。演示服务器为简化起见未包含认证。\n*   **信任第三方MCP服务器**：安装前需进行尽职调查，确认发布者并审查代码。\n*   **语言和SDK选项**：MCP提供多种语言的SDK，包括TypeScript、Python、Go和Rust等，允许开发者根据技术栈选择。\n\n### 总结\n\nMCP通过标准化AI工具的扩展性，打破了AI助手与外部系统之间的壁垒。它提供了一个清晰的框架，通过工具、资源和提示来设计MCP服务器的能力。无论是构建内部开发工具、集成外部API还是创建自定义工作流，MCP都为以一致、强大的方式扩展AI工具提供了基础。\n\n**下一步：** 探索GitHub MCP服务器、试用Playwright MCP服务器、为内部API或开发工具构建简单服务器，并尝试自定义提示。",
      "shortSummary": "模型上下文协议（MCP）提供了一种标准化方法，用于扩展AI工具（如GitHub Copilot）的自定义能力。它通过客户端-服务器模式，使AI能够访问外部系统、私有数据和实时信息，并执行创建拉取请求、与API交互等操作。MCP的核心构建块包括定义AI可执行动作的“工具”、提供上下文信息的“资源”以及指导用户使用的“提示”。通过MCP，开发者可以打破AI助手与外部系统之间的壁垒，使其在特定开发环境中更具实用性和效率。",
      "translated_title": "构建你的第一个MCP服务器：如何用自定义能力扩展AI工具",
      "images": [
        {
          "url": "https://github.blog/wp-content/uploads/2025/08/rdt1.png?resize=1024%2C576",
          "alt": "A screenshot of an MCP server configuration with the turn-based-game MCP server running. It shows a popup listing several tools from the MCP server including analyze_game, create_rock_paper_scissors_game, create_tic_tac_toe_game, play_rock_paper_scissor, play_tic_tac_toe and wait_for_player_move.",
          "title": "",
          "position": 1
        },
        {
          "url": "https://avatars.githubusercontent.com/u/791642?v=4&s=200",
          "alt": "Chris Reddington",
          "title": "",
          "position": 2
        }
      ],
      "contentSource": "完整文章",
      "content": "<p>Learn Model Context Protocol by building a turn-based game server that shows how to extend GitHub Copilot with custom tools, resources, and prompts.</p>\n<p>The post <a href=\"https://github.blog/ai-and-ml/github-copilot/building-your-first-mcp-server-how-to-extend-ai-tools-with-custom-capabilities/\">Building your first MCP server: How to extend AI tools with custom capabilities</a> appeared first on <a href=\"https://github.blog\">The GitHub Blog</a>.</p>\n"
    },
    {
      "title": "探索GitHub Universe的精华：9个旨在激发创造力、连接与乐趣的空间 (原标题: Explore the best of GitHub Universe: 9 spaces built to spark creativity, connection, and joy)",
      "link": "https://github.blog/news-insights/company-news/explore-the-best-of-github-universe-9-spaces-built-to-spark-creativity-connection-and-joy/",
      "pubDate": "Thu, 21 Aug 2025 18:02:34 +0000",
      "isoDate": "2025-08-21T18:02:34.000Z",
      "creator": "Jeimy Ruiz",
      "summary": "# GitHub Universe 2025：活动概览\n\nGitHub Universe 2025 将于今年十月重返旧金山 Fort Mason Center，承诺带来一场比以往任何时候都更盛大、更大胆、更具互动性的开发者盛会。除了100多场专家主导的会议（完整会议目录将于九月初发布）外，活动还精心设计了九个独特的空间，旨在激发与会者的创造力、促进连接并带来乐趣，无论您是搭建乐高、与同行交流，还是探索新的职业资源。\n\n# 提升技能与探索最新GitHub工具\n\n### 🧭 GitHub Central\n![GitHub Universe的GitHub Central照片。](https://github.blog/wp-content/uploads/2025/08/image7.jpg?resize=1024%2C683)\n在早上的主题演讲结束后，您可以前往 GitHub Central。这里将提供实时演示、客户案例和产品旅程，与三大内容主题（更高效、更安全、更具创造性地使用 GitHub 进行构建）紧密结合。您将有机会探索 GitHub Copilot、GitHub Actions、GitHub Advanced Security 等工具。GitHub Central 融合了自助式工作站、与 GitHub 专家进行的现场会议以及各种惊喜，是您发现和获取灵感的中心。无论您是企业架构师还是刚开始接触自动化，都将带着实用的想法和可靠的策略满载而归。\n\n### 💡 GitHub Expert Center\n![GitHub Universe的GitHub Expert Center照片。](https://github.blog/wp-content/uploads/2025/08/image4.jpg?resize=1024%2C683)\nGitHub Expert Center 是您进行技术深度探讨、获取快速建议和进行一对一交流的首选之地。从人工智能和 GitHub Actions 专家，到安全和规模化采用专家，GitHub 专家们将在现场随时解答您所有的 GitHub 产品问题。您可以提前预约，也可以在会议间隙随时前往。\n\n# 促进成长与拓展人脉\n\n### 🌍 Open Source Zone\n![GitHub Universe的Open Source Zone照片。](https://github.blog/wp-content/uploads/2025/08/image5.jpg?resize=1024%2C683)\n在 Open Source Zone，您可以与来自全球的贡献者、维护者和社区领袖建立联系。发现 GitHub Accelerator 项目中的新星，向维护者社区的领军人物学习，并探索那些正在改变世界软件构建方式的项目。\n\n### 💼 Career Corner\n![一个人在GitHub Universe的Career Corner拍照。](https://github.blog/wp-content/uploads/2025/08/image3.jpg?resize=1024%2C683)\n如果您正寻求职业发展，Career Corner 提供与职业教练进行一对一咨询的机会，获取个性化建议，涵盖简历润色、GitHub 和 LinkedIn 个人资料优化，以及面试准备等。\n\n### 📚 GitHub Learn\nGitHub Learn 汇集了教程、认证和基于角色的学习路径，帮助您按照自己的节奏成长。您可以探索来自 GitHub、Microsoft Learn 等平台的内容，以培养适用于各级别开发者的实际、就业就绪技能。\n\n# 动手实践，尽享乐趣\n\n### 🎯 Recess\n![GitHub Universe上两个人正在交谈和喝咖啡。](https://github.blog/wp-content/uploads/2025/08/image9.jpg?resize=1024%2C683)\n从会议中短暂休息，与志同道合的人建立联系。Recess 是您结识其他与会者或与同事分享非开发兴趣（从搭建乐高到与高管边吃冰淇淋边聊天）的机会。\n\n### 🔮 Makerspace\nMakerspace 是代码与艺术、音乐、机器人等领域碰撞的地方。这是一个供您玩耍、探索和重新构想代码潜力的空间，无需正式培训，只需带上您的好奇心。\n\n### 🛠️ Hack your badge\n每张现场门票都包含一个可编程的徽章，旨在进行定制和编码。您可以按照教程操作，从其他黑客那里获得灵感，创造一件独特的硬件艺术品，以纪念您的 Universe 体验。\n\n### 🛍️ The Shop\n![GitHub Universe的商店照片。](https://github.blog/wp-content/uploads/2025/08/image6.jpg?resize=1024%2C683)\nThe Shop 是您购买 GitHub Copilot 周边、独家开发者主题商品和粉丝最爱收藏品的地方，还有一些只有在现场才能发现的惊喜。\n\n# 票务信息与重要日期\n\n您可以完全定制您的 GitHub Universe 活动体验。现在是购买现场门票的最佳时机，与热爱构建和扩展的同行交流：\n*   在9月8日之前，享受早鸟优惠，立省400美元。\n*   购买三张或更多门票可享七五折优惠。\n*   购买八张或更多门票可享六五折优惠。\n*   团体折扣可与早鸟优惠叠加。\n名额有限，请立即购票。\n\n# 额外资源\n\n文章还提供了帮助说服经理的定制邮件模板、获取最新演讲者和会议信息的注册链接、浏览去年会议以了解体验的选项，以及常见问题解答。",
      "shortSummary": "GitHub Universe 2025将于十月在旧金山举行，将成为一场互动性更强的开发者盛会。活动设有九个独特空间，旨在激发创造力、促进连接和带来乐趣。与会者可探索GitHub最新工具、与专家交流、拓展开源人脉、获取职业指导，并参与动手实践。早鸟票优惠（立省400美元）截止9月8日，并提供团体折扣。立即购票，体验定制化的开发者盛会。",
      "translated_title": "探索GitHub Universe的精华：9个旨在激发创造力、连接与乐趣的空间",
      "images": [
        {
          "url": "https://github.blog/wp-content/uploads/2025/08/image7.jpg?resize=1024%2C683",
          "alt": "A photo of GitHub Central at GitHub Universe.",
          "title": "",
          "position": 1
        },
        {
          "url": "https://github.blog/wp-content/uploads/2025/08/image4.jpg?resize=1024%2C683",
          "alt": "A photo of the GitHub Expert Center at GitHub Universe.",
          "title": "",
          "position": 2
        },
        {
          "url": "https://github.blog/wp-content/uploads/2025/08/image5.jpg?resize=1024%2C683",
          "alt": "A photo of the Open Source Zone at GitHub Universe.",
          "title": "",
          "position": 3
        },
        {
          "url": "https://github.blog/wp-content/uploads/2025/08/image3.jpg?resize=1024%2C683",
          "alt": "A person gets their photo taken in the Career Corner at GitHub Universe.",
          "title": "",
          "position": 4
        },
        {
          "url": "https://github.blog/wp-content/uploads/2025/08/image9.jpg?resize=1024%2C683",
          "alt": "Two people talking and drinking coffee at GitHub Universe.",
          "title": "",
          "position": 5
        },
        {
          "url": "https://github.blog/wp-content/uploads/2025/08/image6.jpg?resize=1024%2C683",
          "alt": "Photo of the Shop at GitHub Universe.",
          "title": "",
          "position": 6
        },
        {
          "url": "https://avatars.githubusercontent.com/u/94011710?v=4&s=200",
          "alt": "Jeimy Ruiz",
          "title": "",
          "position": 7
        },
        {
          "url": "https://github.blog/wp-content/uploads/2024/07/Icon-Circle.svg",
          "alt": "Docs",
          "title": "",
          "position": 8
        }
      ],
      "contentSource": "完整文章",
      "content": "<p>See what’s happening at Universe 2025, from experimental dev tools and career coaching to community-powered spaces. Save $400 on your pass with Early Bird pricing.</p>\n<p>The post <a href=\"https://github.blog/news-insights/company-news/explore-the-best-of-github-universe-9-spaces-built-to-spark-creativity-connection-and-joy/\">Explore the best of GitHub Universe: 9 spaces built to spark creativity, connection, and joy</a> appeared first on <a href=\"https://github.blog\">The GitHub Blog</a>.</p>\n"
    },
    {
      "title": "谁来维护未来？为新一代重新思考开源领导力 (原标题: Who will maintain the future? Rethinking open source leadership for a new generation)",
      "link": "https://github.blog/open-source/maintainers/who-will-maintain-the-future-rethinking-open-source-leadership-for-a-new-generation/",
      "pubDate": "Wed, 20 Aug 2025 16:00:00 +0000",
      "isoDate": "2025-08-20T16:00:00.000Z",
      "creator": "Abigail Cabunoc Mayes",
      "summary": "文章探讨了开源社区面临的“老龄化”和领导力继任问题，并提出了吸引和培养新一代贡献者（尤其是Z世代）的策略。\n\n### 开源社区的“老龄化”问题\n作者以个人经历为例，指出社区在缺乏早期新人引入时，会面临领导力空白。这种模式在开源领域也同样存在：\n*   **数据洞察：** Tidelift 2024年维护者调查显示，46-65岁维护者的比例自2021年以来翻了一番，而26岁以下贡献者的比例从25%降至10%。\n*   **核心问题：** 这种“老龄化”本身并非问题，但缺乏继任计划将导致倦怠、知识流失和长期脆弱性。\n\n### Z世代贡献者画像：Sam\n为了更好地理解如何支持新一代，文章引入了一个名为“Sam”的Z世代虚拟人物：\n*   **基本信息：** Sam，23岁，居住在加拿大城市，生活主要在线上。\n*   **核心诉求：** 希望为有意义的气候科技项目做贡献，但不知从何开始。他们自学编程，擅长社区管理，但觉得公共代码库令人生畏。他们渴望目标、灵活性和归属感。\n*   **面临挑战：** 经济压力、不明确的路径，以及对开源领导力运作方式的不了解。\n\n### 参与之山：吸引Z世代的六步框架\n文章提出了一个名为“参与之山”的框架，该模型概述了贡献者在开源项目中的六个阶段，并对比了传统方法与Z世代贡献者（如Sam）的实际需求：\n\n1.  **发现 (Discovery)**\n    *   **传统方法：** 通过公共仓库、开源许可、项目网站、文档和社交媒体进行基本营销。\n    *   **Sam的需求：** 通过TikTok、Discord和YouTube等平台发现项目。他们希望目的性明确，而不是隐藏在README中。他们的学习始于移动设备。（数据：84%的Z世代使用YouTube，86%认为目的性对工作满意度很重要）。\n\n2.  **首次接触 (First Contact)**\n    *   **传统方法：** 良好的README、清晰的贡献文档和新人提问的沟通渠道。\n    *   **Sam的需求：** 移动友好、视觉优先的登录体验。项目应以其使命为导向。他们更喜欢像Discord这样可以先“潜水”的休闲开放聊天。（数据：72.8%的Z世代偏爱视觉学习，Z世代更喜欢Discord等社区驱动平台）。\n\n3.  **参与 (Participation)**\n    *   **传统方法：** 个人邀请、快速响应问题、“良好首个问题”和清晰的贡献文档。\n    *   **Sam的需求：** 实时反馈。沙盒环境供尝试。明确的学习空间，允许犯错，而非只求表现。（数据：Z世代学生倾向于观察他人完成任务后再尝试）。例如：FreeCodeCamp和Kubernetes的贡献者游乐场。\n\n4.  **持续参与 (Sustained Participation)**\n    *   **传统方法：** 认可贡献者，将任务与兴趣匹配，并展示其工作与项目使命的关联。\n    *   **Sam的需求：** 可分享的认可：徽章、提及、作品集。他们更关心产生影响，而非攀爬层级。（数据：86%的Z世代员工优先考虑导师指导和技能发展）。\n\n5.  **网络化参与 (Networked Participation)**\n    *   **传统方法：** 导师制、社交活动和建立承诺与联系的正式角色。\n    *   **Sam的需求：** 可分享的命名角色，如Discord版主或社区向导。非主题频道和休闲联系。同伴主导的领导力，以传播影响力。（数据：70%的Z世代加入社区是为了归属感和发言权）。例如：Rust的共识驱动治理。\n\n6.  **领导力 (Leadership)**\n    *   **传统方法：** 邀请成为维护者，分享治理权，提供角色职责文档。\n    *   **Sam的需求：** 共享管理权，而非自上而下的控制。补偿或职业发展。清晰的价值交换。（数据：52%的Z世代入不敷出）。他们更可能在有实际支持（导师指导、可见性或带薪时间）时做出贡献。例如：TensorFlow的贡献者阶梯和For Good First Issue的使命导向。\n\n### 采取行动\n开源的未来离不开下一代。项目需要积极适应，让Sam这样的贡献者感到受欢迎、被支持和被看见。\n*   **具体行动：** 将README制作成60秒的解释视频；为首次贡献者创建沙盒空间；启动Discord或非主题频道以培养归属感；让项目使命响亮而明确。\n*   **核心问题：** 问自己：“一个蓬勃发展的项目在Sam看来是怎样的？要怎样才能让他们留下五年，而不是五周？”\n\n![一张幻灯片展示了提升Z世代开源实践的方法。其中包括“发现”阶段的TikTok、YouTube或Discord以及价值观驱动；“首次接触”阶段的使命导向、移动友好和视觉化；“参与”阶段的沙盒环境和实时反馈；“持续参与”阶段的可分享认可；“网络化参与”阶段的可扩展角色和非主题空间；以及“领导力”阶段的薪酬。](https://github.blog/wp-content/uploads/2025/08/slide.jpg?resize=1024%2C576)\n\n维护开源不仅仅是维持运营，更是为下一代创造空间。",
      "shortSummary": "开源社区正面临“老龄化”和领导力继任挑战，年轻贡献者比例下降。为确保未来可持续性，开源项目需适应Z世代需求。这包括：通过TikTok、Discord等平台进行项目发现；提供移动友好、视觉优先的入门体验；创建沙盒环境和实时反馈机制以促进参与；提供可分享的认可和职业发展机会；以及建立共享管理和补偿机制。核心在于理解Z世代对目的、归属感和灵活性的追求，从而构建更具吸引力和包容性的社区，确保新一代贡献者长期留存。",
      "translated_title": "谁来维护未来？为新一代重新思考开源领导力",
      "images": [
        {
          "url": "https://github.blog/wp-content/uploads/2025/08/slide.jpg?resize=1024%2C576",
          "alt": "A slide showing open source practices to level up Gen Z. These include Tik Tok, YouTube, or Discord and Values driven for 'Discovery'; Leads with purpose and Mobile-friendly and visual for \"First contact\"; Sandbox environments and Real-time feedback for \"Participation\"; Recognition they can share for \"Sustained participation\"; Roles that scale and Off-topic spaces for \"Networked participation\"; and Compensation for \"Leadership\".",
          "title": "",
          "position": 1
        },
        {
          "url": "https://avatars.githubusercontent.com/u/617994?v=4&s=200",
          "alt": "Abigail Cabunoc Mayes",
          "title": "",
          "position": 2
        },
        {
          "url": "https://github.blog/wp-content/uploads/2024/07/Icon-Circle.svg",
          "alt": "Docs",
          "title": "",
          "position": 3
        },
        {
          "url": "https://github.blog/wp-content/uploads/2024/07/Icon_95220f.svg",
          "alt": "GitHub",
          "title": "",
          "position": 4
        },
        {
          "url": "https://github.blog/wp-content/uploads/2024/07/Icon_da43dc.svg",
          "alt": "Customer stories",
          "title": "",
          "position": 5
        },
        {
          "url": "https://github.blog/wp-content/uploads/2024/04/Universe24-North_Star.svg",
          "alt": "GitHub Universe 2025",
          "title": "",
          "position": 6
        }
      ],
      "contentSource": "完整文章",
      "content": "<p>Open source is aging. We can better support Gen Z contributors through purpose, flexibility, and pathways to leadership.</p>\n<p>The post <a href=\"https://github.blog/open-source/maintainers/who-will-maintain-the-future-rethinking-open-source-leadership-for-a-new-generation/\">Who will maintain the future? Rethinking open source leadership for a new generation</a> appeared first on <a href=\"https://github.blog\">The GitHub Blog</a>.</p>\n"
    },
    {
      "title": "代理面板：在GitHub上随时随地启动Copilot编码代理任务 (原标题: Agents panel: Launch Copilot coding agent tasks anywhere on GitHub)",
      "link": "https://github.blog/news-insights/product-news/agents-panel-launch-copilot-coding-agent-tasks-anywhere-on-github/",
      "pubDate": "Tue, 19 Aug 2025 19:53:14 +0000",
      "isoDate": "2025-08-19T19:53:14.000Z",
      "creator": "Tim Rogers",
      "summary": "# GitHub推出“代理面板”：随时随地启动Copilot编码代理任务\n\n## 概述\n过去一年，AI代理已成为开发者日常工作流中不可或缺的一部分。GitHub最近推出了异步、自主的Copilot编码代理，允许开发者将问题分配给Copilot，由其在后台工作并创建草稿拉取请求供审查。为了进一步提升用户体验，GitHub现推出全新的“代理面板”，使开发者能够从GitHub.com的任何页面快速将任务委托给Copilot，并跟踪其进度，而无需中断当前工作流。Copilot编码代理也已集成到VS Code、GitHub Mobile和GitHub MCP服务器中。\n\n## 代理面板：您的任务控制中心\n“代理面板”现已在GitHub.com的每个页面上可用，是GitHub上代理工作流的“任务控制中心”。它是一个轻量级浮层，允许您在不离开当前页面的情况下，向Copilot分配新任务并跟踪现有任务。只需点击导航栏中的新“代理”按钮即可开始。\n\n![GitHub中新的代理面板截图，显示了开发者如何从GitHub的任何地方跟踪、管理和启动Copilot编码代理工作流。此截图显示了编码代理正在处理的近期任务，并提供了查看所有任务的选项。开发者还可以在框中输入自然语言提示，并指定编码代理应在哪个仓库和分支上工作。](https://github.blog/wp-content/uploads/2025/08/Agents-panel-with-callout-2.png?resize=1013%2C1024)\n\n通过代理面板，您可以：\n*   **🛠️ 分配后台任务**：无需切换页面即可将任务委托给Copilot。\n*   **👀 实时监控**：实时查看正在运行的任务状态。\n*   **🔗 快速跳转**：在准备好审查时，直接跳转到相关的拉取请求。\n\n您可以通过点击“查看所有任务”以全屏模式打开面板，或通过书签访问`github.com/copilot/agents`。\n\n## 启动新任务\n您可以通过代理面板使用简单的提示启动新的Copilot任务。只需从GitHub的任何页面打开面板，用自然语言描述您的目标，并选择相关仓库。Copilot将接管后续工作，包括制定计划、起草更改、运行测试，然后准备拉取请求。\n\n**示例提示：**\n*   **描述简单任务**：\n    *   “为LoginController添加集成测试”\n    *   “重构WidgetGenerator以提高代码复用性”\n    *   “添加深色/浅色模式切换器”\n*   **提供上下文**（引用GitHub Issue或拉取请求）：\n    *   “修复#877，以拉取请求#855为例”\n    *   “修复#1050，并确保更新README中的截图”\n*   **并行运行多个任务**：\n    *   “为utils.go添加单元测试覆盖” + “为helpers.go添加单元测试覆盖”\n\n## Copilot编码代理简介\nCopilot编码代理允许您通过GitHub.com、GitHub Mobile、VS Code或任何支持MCP的工具，将编码任务委托出去，并在完成后获得草稿拉取请求。\n\n![GitHub Copilot生成的拉取请求截图，显示了已完成工作的摘要。](https://github.blog/wp-content/uploads/2025/08/CleanShot-2025-08-14-at-16.51.35.png?resize=1024%2C368)\n![GitHub Copilot编码代理正在进行中的任务截图，显示了Copilot展示其工作并测试代码输出以确保没有破坏任何东西。](https://github.blog/wp-content/uploads/2025/08/CleanShot-2025-08-14-at-16.53.09.png?resize=1024%2C331)\n![开发者要求GitHub Copilot将其生成的测试移动到主测试套件的截图。](https://github.blog/wp-content/uploads/2025/08/CleanShot-2025-08-14-at-16.54.22.png?resize=835%2C406)\n\n**其主要特性包括：**\n*   **云端运行**：可在云端运行，支持并行处理多个任务，即使您的计算机关闭也能继续工作。\n*   **安全环境**：由GitHub Actions提供支持，可运行构建、测试和代码检查，无需逐一请求每个步骤。\n*   **开发者控制**：通过详细日志和基于拉取请求的审批保持控制，并通过在审查中提及`@copilot`来提供反馈。\n*   **模型上下文协议 (MCP)**：\n    *   Copilot通过GitHub MCP服务器拥有对仓库数据的读取权限。\n    *   通过Playwright MCP服务器可查看网页进行测试和验证。\n    *   可连接到您自己的MCP服务器。\n\n## 其他委托任务方式\n除了代理面板，您还可以通过以下方式启动Copilot编码代理任务：\n*   **GitHub Issues**：在GitHub.com或GitHub Mobile上将问题分配给Copilot。\n*   **Visual Studio Code**：通过GitHub Pull Requests扩展委托任务并跟踪运行中的任务。\n*   **其他IDE**：在JetBrains IDEs和Visual Studio的Copilot Chat中要求Copilot打开拉取请求。\n*   **支持MCP的工具**：通过集成模型上下文协议的兼容应用程序触发任务。\n\n## 可用性\nCopilot编码代理和GitHub上的新代理面板现已向所有付费Copilot订阅者开放公开预览。您的管理员可能需要启用Copilot编码代理策略。",
      "shortSummary": "GitHub推出了新的“代理面板”，允许开发者在GitHub.com的任何页面上，通过简单提示将编码任务委托给Copilot编码代理。该面板作为任务控制中心，方便用户启动、监控和管理Copilot自动生成草稿拉取请求的工作流，无需中断当前操作。Copilot编码代理支持跨平台使用，包括VS Code和GitHub Mobile，旨在提升开发效率，让AI代理更深入地融入日常开发流程。",
      "translated_title": "代理面板：在GitHub上随时随地启动Copilot编码代理任务",
      "images": [
        {
          "url": "https://github.blog/wp-content/uploads/2025/08/Agents-panel-with-callout-2.png?resize=1013%2C1024",
          "alt": "A screenshot of the new Agents panel in GitHub that allows developers to track, manage, and start Copilot coding agent workflows from anywhere on GitHub. This screenshot shows recent tasks that coding agent, an agentic workflow that generates draft pull requests based on requirements set out by a developer, is working on with the option to view all tasks. Developers can also enter a natural language prompt in a box and specify which repository and which branch coding agent should work on.",
          "title": "",
          "position": 1
        },
        {
          "url": "https://github.blog/wp-content/uploads/2025/08/CleanShot-2025-08-14-at-16.51.35.png?resize=1024%2C368",
          "alt": "A screenshot of a pull request generated by GitHub Copilot, an AI coding tool, in a GitHub developer workflow. The pull request is a draft awaiting approval and shows a generated summary of the work that has been completed. The screenshot also shows the developer assigned to review the pull request as well as assignees that include a developer and GitHub Copilot.",
          "title": "",
          "position": 2
        },
        {
          "url": "https://github.blog/wp-content/uploads/2025/08/CleanShot-2025-08-14-at-16.53.09.png?resize=1024%2C331",
          "alt": "A screenshot showing an ongoing task that GitHub Copilot coding agent, an agentic workflow tool on GitHub, is working on. This screenshot shows GitHub Copilot showing its work, and testing its code outputs to ensure it didn’t break anything.",
          "title": "",
          "position": 3
        },
        {
          "url": "https://github.blog/wp-content/uploads/2025/08/CleanShot-2025-08-14-at-16.54.22.png?resize=835%2C406",
          "alt": "A screenshot showing a developer asking GitHub Copilot to move tests that it generated to the main test suite within a diff view of code outputs from GitHub Copilot coding agent.",
          "title": "",
          "position": 4
        },
        {
          "url": "https://avatars.githubusercontent.com/u/116134?v=4&s=200",
          "alt": "Tim Rogers",
          "title": "",
          "position": 5
        },
        {
          "url": "https://github.blog/wp-content/uploads/2024/07/Icon-Circle.svg",
          "alt": "Docs",
          "title": "",
          "position": 6
        },
        {
          "url": "https://github.blog/wp-content/uploads/2024/07/Icon_95220f.svg",
          "alt": "GitHub",
          "title": "",
          "position": 7
        },
        {
          "url": "https://github.blog/wp-content/uploads/2024/07/Icon_da43dc.svg",
          "alt": "Customer stories",
          "title": "",
          "position": 8
        }
      ],
      "contentSource": "完整文章",
      "content": "<p>Delegate coding tasks to Copilot and track progress wherever you are on GitHub. Copilot works in the background, creates a pull request, and tags you for review when finished.</p>\n<p>The post <a href=\"https://github.blog/news-insights/product-news/agents-panel-launch-copilot-coding-agent-tasks-anywhere-on-github/\">Agents panel: Launch Copilot coding agent tasks anywhere on GitHub</a> appeared first on <a href=\"https://github.blog\">The GitHub Blog</a>.</p>\n"
    },
    {
      "title": "Git 2.51 的亮点 (原标题: Highlights from Git 2.51)",
      "link": "https://github.blog/open-source/git/highlights-from-git-2-51/",
      "pubDate": "Mon, 18 Aug 2025 17:04:36 +0000",
      "isoDate": "2025-08-18T17:04:36.000Z",
      "creator": "Taylor Blau",
      "summary": "Git 开源项目发布了 Git 2.51 版本，该版本包含了来自 91 位贡献者（其中 21 位是新贡献者）的新功能和错误修复。以下是 GitHub 对此次发布中一些最有趣的功能和变化的总结：\n\n## 1. 无冗余多包索引 (MIDX)\n\n*   **背景：** Git 将仓库内容存储为对象，可以是“松散”对象或打包文件（packfile）。每个打包文件都有一个索引 (`.idx`)。当存在许多打包文件时，查找速度会变慢。多包索引 (MIDX) 覆盖多个打包文件，显著提高查找效率。\n*   **问题：** 冗余包（cruft pack）用于存储不可达对象，原本应排除在 MIDX 之外。但如果冗余包中的对象后来变得可达，而 MIDX 中没有其副本，则无法为其写入可达性位图。\n*   **Git 2.51 解决方案：** 引入新的打包行为。Git 现在会存储对象的额外副本（及其祖先），如果这些对象的唯一副本在冗余包中。这确保了非冗余包集合在可达性方面是“闭合的”。\n*   **配置：** 新增 `repack.MIDXMustContainCruft` 配置选项，允许将冗余包存储在 MIDX 之外。\n*   **效果：** GitHub 实践表明，MIDX 大小缩小约 38%，写入速度提高 35%，整体仓库读取性能提高约 5%。\n\n## 2. 路径遍历生成更小的打包文件\n\n*   **背景：** Git 2.49 引入了“name-hash v2”功能，改进了增量压缩的对象选择方式，考虑了更多目录结构。\n*   **Git 2.51 增强：** 引入了新的打包对象收集方式——“路径遍历”（path walk）。它不再按修订顺序遍历对象，而是同时发出给定路径下的所有对象。\n*   **优势：** 这种方法完全避免了名称哈希启发式，可以在已知处于相同路径的对象组中查找增量，从而生成比使用新名称哈希函数生成的打包文件更小的文件，并且时间性能具有竞争力。\n*   **使用：** 通过 `repack` 命令的 `--path-walk` 选项尝试。\n\n## 3. 暂存区交换格式\n\n*   **背景：** `git stash` 命令用于保存未提交的更改。Git 在内部创建三个提交来表示暂存区和工作目录的更改，并将其存储在 `refs/stash` 引用中。\n*   **问题：** `refs/stash` 一次只能存储一个暂存条目，导致在不同机器间迁移暂存条目非常不便。\n*   **Git 2.51 解决方案：** 引入新的内部暂存表示形式，允许将多个暂存条目表示为一系列提交。新的表示形式增加了一个父级，指向前一个暂存条目，使其行为类似于普通的提交日志。\n*   **优势：** 现在可以将暂存导出到单个引用，然后像普通分支或标签一样推送或拉取。\n*   **新命令：** `git stash export --to-ref <ref>` 和 `git stash import <ref>`。\n\n## 4. 其他重要更新\n\n*   **`git cat-file` 改进：** 在 Git 2.51 之前，`cat-file` 查询子模块路径会显示“missing”。现在，它会显示子模块的对象 ID 和类型（“submodule”），提高了脚本场景下的实用性。\n*   **支持多路径规范的 Bloom 过滤器：** Git 的 Bloom 过滤器用于加速 `git log` 等历史遍历。Git 2.51 增加了对使用多个路径规范项（如 `git log -- path/to/a path/to/b`）的支持，从而能利用已更改路径的 Bloom 过滤器进行优化。\n*   **`git switch` 和 `git restore` 不再是实验性命令：** 这些命令自 Git 2.23 引入以来一直被视为实验性，现在已稳定，其命令行接口在未来的版本中将保持稳定和向后兼容。\n*   **`git whatchanged` 已弃用：** 该命令的行为类似于 `git log --raw`，现已被标记为弃用，并计划在 Git 3.0 中移除。仍可通过 `--i-still-use-this` 标志使用。\n*   **Git 3.0 的突破性变更（未来计划）：**\n    *   `reftable` 后端将成为 Git 3.0 中创建仓库的默认格式。\n    *   SHA-256 哈希函数将成为初始化新仓库的默认哈希函数。\n    *   Git 3.0 尚无官方发布日期，但可以通过 `WITH_BREAKING_CHANGES` 标志自行构建 Git 来体验新默认设置。\n*   **内部开发流程更新：**\n    *   C99 `bool` 关键字的实验成功，现在允许在整个代码库中使用。\n    *   开始记录项目实验性使用的 C99 功能和未使用的 C99 功能。\n    *   补丁提交指南更新，允许贡献者使用非法律名称提交补丁，与 Linux 内核的方法更接近。\n\n这些只是 Git 2.51 版本中部分亮点，更多详细信息可查阅完整的发布说明。",
      "shortSummary": "Git 2.51 版本发布，带来了多项重要改进。主要亮点包括：引入无冗余多包索引，显著提升仓库读取性能；通过“路径遍历”生成更小的打包文件；改进暂存区格式，支持跨机器迁移暂存条目。此外，`git cat-file` 功能增强，`git switch` 和 `git restore` 不再是实验性命令，`git whatchanged` 被弃用。Git 3.0 计划将 `reftable` 和 SHA-256 作为新仓库的默认设置。内部开发流程也进行了更新，包括 C99 `bool` 关键字的使用和补丁提交指南的调整。",
      "translated_title": "Git 2.51 的亮点",
      "images": [],
      "contentSource": "RSS",
      "content": "<p>The open source Git project just released Git 2.51. Here is GitHub’s look at some of the most interesting features and changes introduced since last time.</p>\n<p>The post <a href=\"https://github.blog/open-source/git/highlights-from-git-2-51/\">Highlights from Git 2.51</a> appeared first on <a href=\"https://github.blog\">The GitHub Blog</a>.</p>\n"
    },
    {
      "title": "GitHub Copilot 中的 GPT-5：我如何在 60 秒内构建一个游戏 (原标题: GPT-5 in GitHub Copilot: How I built a game in 60 seconds)",
      "link": "https://github.blog/ai-and-ml/generative-ai/gpt-5-in-github-copilot-how-i-built-a-game-in-60-seconds/",
      "pubDate": "Thu, 14 Aug 2025 16:30:00 +0000",
      "isoDate": "2025-08-14T16:30:00.000Z",
      "creator": "Kedasha Kerr",
      "summary": "## GitHub Copilot 中的 GPT-5：革新开发工作流\n\n本文探讨了 OpenAI 最新的 GPT-5 模型在 GitHub Copilot 中的应用，以及 GitHub 模型上下文协议（MCP）服务器如何共同改变开发者的工作方式。作者分享了如何利用这些工具在短时间内构建游戏并自动化 GitHub 工作流的经验。\n\n### GPT-5 的强大能力\n\nGPT-5 是 OpenAI 迄今为止最先进的模型，现已集成到 GitHub Copilot 中，可在 VS Code 的问答、编辑和代理模式下使用。其显著特点包括：\n\n*   **卓越的推理能力**：能够处理复杂任务并提供高质量的建议。\n*   **惊人的速度**：响应时间极快，几乎即时提供建议，显著提升开发流程的流畅性。\n*   **易于启用**：在 Copilot 界面中打开模型选择器，选择 GPT-5 (Preview) 即可开始使用。企业用户需由管理员选择启用。\n\n![A screenshot showing GPT-5 (Preview) available in the model picker drop-down menu within GitHub Copilot.](https://github.blog/wp-content/uploads/2025/08/gpt5.png?resize=521%2C501)\n\n### 60 秒构建 Magic Tiles 游戏实测\n\n作者通过一个实时测试展示了 GPT-5 的强大功能：在不到 60 秒内构建了一个 Magic Tiles 游戏原型。其方法论是“规范驱动开发”：\n\n1.  **让 AI 创建产品需求**：首先向 GPT-5 询问游戏的核心 MVP 规范，包括任务分解、核心玩法循环、最小功能集、数据模型结构和清晰的构建清单。这强调了为大型语言模型提供上下文的重要性。\n2.  **通过简单提示进行构建**：在获得 MVP 规范后，只需简单地提示“构建这个”。GPT-5 智能地选择了 HTML、CSS 和 JavaScript，并创建了一个基于 Canvas 的游戏，包含输入处理、得分、连击追踪、速度提升和游戏结束功能。整个构建过程在不到一分钟内完成。\n3.  **使用自然语言迭代**：当需要添加用户说明时，作者直接用自然语言提问，GPT-5 立即更新了 HTML 并提供了后续功能建议，实现了流畅的对话式开发体验。\n\n### GitHub 模型上下文协议（MCP）服务器\n\nMCP 是一种连接 AI 助手与外部工具和应用程序的标准，它充当 LLM 与 GitHub 仓库、Gmail 账户、SQL 服务器、Figma 项目等之间沟通的桥梁。通过 MCP，LLM 不再孤立，而是成为强大的自动化引擎。\n\n**设置 MCP 服务器**：\n\n设置 GitHub MCP 服务器非常简单，只需不到 5 分钟：\n\n1.  在工作区根目录创建 `.vscode/mcp.json` 配置文件。\n2.  点击 MCP 配置中的“启动”按钮，通过标准的 GitHub OAuth 流程进行认证。\n3.  认证后，GitHub MCP 服务器工具即可在 Copilot 界面中使用。\n\n**MCP 自动化实例**：\n\n*   **用自然语言创建仓库**：作者通过简单地向 Copilot 提问，便成功创建了 GitHub 仓库，并将本地代码推送到新仓库，无需切换到浏览器。\n*   **从自然语言批量创建议题**：作者让 Copilot 建议应用改进，然后指示其为“低投入快速改进”创建 GitHub 议题。Copilot 立即创建了五个格式正确的议题，包含描述性标题、详细说明、实施建议和适当的标签。这极大地简化了项目想法的捕获和管理。\n\n### 革命性的工作流\n\nGPT-5 和 GitHub MCP 服务器的结合带来了以下革命性优势：\n\n*   **速度与上下文保留**：GPT-5 的处理速度有助于开发者保持“心流”状态，提升开发体验的流畅性。\n*   **自然语言作为开发界面**：消除了在不同工具之间切换、手动格式化或进行上下文切换的摩擦，实现了意图驱动的自动化。\n*   **人机协作自动化**：AI 处理繁琐部分，而开发者保留控制权，例如可以取消 AI 直接推送到主分支的操作。\n\n### 行动计划\n\n鼓励开发者立即尝试 GPT-5 和 GitHub MCP 服务器：\n\n*   在 GitHub Copilot 中启用 GPT-5，尝试代理模式和规范驱动的开发方法。\n*   设置 GitHub MCP 服务器，并通过自然语言自动化 GitHub 工作流，例如创建仓库、生成议题、自动化分支和拉取请求。\n\n未来，这种组合预示着从手动、界面驱动的工作流向对话式、意图驱动的自动化的重大转变。作者计划在下次直播中从头开始构建一个自定义 MCP 服务器。\n\n![Kedasha Kerr](https://avatars.githubusercontent.com/u/47188731?v=4&s=200) Kedasha Kerr 是 GitHub 的开发者倡导者，致力于分享经验并帮助开发者社区。\n\n探索更多 GitHub 资源：\n\n![Docs](https://github.blog/wp-content/uploads/2024/07/Icon-Circle.svg) 文档\n\n![GitHub](https://github.blog/wp-content/uploads/2024/07/Icon_95220f.svg) GitHub\n\n![Customer stories](https://github.blog/wp-content/uploads/2024/07/Icon_da43dc.svg) 客户案例\n\n![GitHub Universe 2025](https://github.blog/wp-content/uploads/2024/04/Universe24-North_Star.svg) GitHub Universe 2025",
      "shortSummary": "GPT-5 已集成到 GitHub Copilot，显著提升开发速度和代码质量。作者展示了如何利用 GPT-5 在 60 秒内构建游戏，采用“规范驱动开发”和自然语言迭代。同时，GitHub 模型上下文协议（MCP）服务器使 AI 能通过自然语言自动化 GitHub 工作流，如创建仓库和批量生成议题。这些工具共同实现了更流畅、高效且人机协作的开发体验，标志着向意图驱动自动化的转变。",
      "translated_title": "GitHub Copilot 中的 GPT-5：我如何在 60 秒内构建一个游戏",
      "images": [
        {
          "url": "https://github.blog/wp-content/uploads/2025/08/gpt5.png?resize=521%2C501",
          "alt": "A screenshot showing GPT-5 (Preview) available in the model picker drop-down menu within GitHub Copilot.",
          "title": "",
          "position": 1
        },
        {
          "url": "https://avatars.githubusercontent.com/u/47188731?v=4&s=200",
          "alt": "Kedasha Kerr",
          "title": "",
          "position": 2
        },
        {
          "url": "https://github.blog/wp-content/uploads/2024/07/Icon-Circle.svg",
          "alt": "Docs",
          "title": "",
          "position": 3
        },
        {
          "url": "https://github.blog/wp-content/uploads/2024/07/Icon_95220f.svg",
          "alt": "GitHub",
          "title": "",
          "position": 4
        },
        {
          "url": "https://github.blog/wp-content/uploads/2024/07/Icon_da43dc.svg",
          "alt": "Customer stories",
          "title": "",
          "position": 5
        },
        {
          "url": "https://github.blog/wp-content/uploads/2024/04/Universe24-North_Star.svg",
          "alt": "GitHub Universe 2025",
          "title": "",
          "position": 6
        }
      ],
      "contentSource": "完整文章",
      "content": "<p>How GitHub's new MCP server and GPT-5 are revolutionizing developer workflows — with live build examples.</p>\n<p>The post <a href=\"https://github.blog/ai-and-ml/generative-ai/gpt-5-in-github-copilot-how-i-built-a-game-in-60-seconds/\">GPT-5 in GitHub Copilot: How I built a game in 60 seconds</a> appeared first on <a href=\"https://github.blog\">The GitHub Blog</a>.</p>\n"
    },
    {
      "title": "2025年第一季度创新图谱更新：条形图竞赛、数据可视化兴起及关键研究 (原标题: Q1 2025 Innovation Graph update: Bar chart races, data visualization on the rise, and key research)",
      "link": "https://github.blog/news-insights/policy-news-and-insights/q1-2025-innovation-graph-update-bar-chart-races-data-visualization-on-the-rise-and-key-research/",
      "pubDate": "Thu, 14 Aug 2025 16:00:00 +0000",
      "isoDate": "2025-08-14T16:00:00.000Z",
      "creator": "Kevin Xu",
      "summary": "# GitHub创新图谱2025年第一季度更新\n\nGitHub创新图谱旨在为开发者、研究人员和政策制定者提供一种便捷的方式，以探索和分析全球开源软件开发趋势。它提供了一个可靠、透明的数据集，用于追踪全球范围内的公共协作活动。本次最新季度更新包含了截至2025年3月的数据，使得创新图谱涵盖了超过五年的全球软件经济洞察。数据可视化和人工智能（AI）持续获得发展势头，创新图谱正日益成为任何希望将其工作建立在可信、真实开发者数据基础之上的人员的宝贵资源。\n\n## 新功能与趋势\n\n*   **条形图竞赛视频上线**\n    *   我们已在“Git推送”、“仓库”、“开发者”和“组织”等全球指标页面添加了条形图竞赛视频，以更生动地展示数据趋势。\n\n*   **数据可视化进入热门话题排行榜**\n    *   在2025年第一季度，“data-visualization”主题首次进入按唯一推送者数量排名的前50名，位列第50位。\n    *   ![显示“data-visualization”仓库主题在2025年第一季度排名第50位的图表截图。这是它首次也是唯一一次出现在图表上。](https://github.blog/wp-content/uploads/2025/08/data_visualization_topic.png?resize=1024%2C156)\n    *   从2020年第一季度的第100位开始，这是一个艰辛的旅程，其排名稳步上升。\n    *   ![显示“data-visualization”仓库主题随时间排名的折线图。其排名从2020年第一季度的第100位稳步上升到2025年第一季度的第50位，在2022年第一季度曾短暂飙升至约第70位。](https://github.blog/wp-content/uploads/2025/08/data_visualization_historical_rank.png?resize=1024%2C368)\n\n*   **AI和LLM主题的快速增长**\n    *   并非所有仓库主题都像“ai”和“llm”那样拥有如此迅速的上升轨迹。\n    *   “ai”主题从2023年第三季度的第25位迅速上升到2025年第一季度的第8位。\n    *   ![显示“ai”仓库主题随时间快速上升的凸起图，从2023年第三季度的第25位上升到2025年第一季度的第8位。](https://github.blog/wp-content/uploads/2025/08/ai_topic.png?resize=518%2C1024)\n    *   “llm”主题从2024年第二季度的第24位迅速上升到2025年第一季度的第11位。\n    *   ![显示“llm”仓库主题随时间快速上升的凸起图，从2024年第二季度的第24位上升到2025年第一季度的第11位。](https://github.blog/wp-content/uploads/2025/08/llm_topic.png?resize=410%2C1024)\n\n## 关键研究综述\n\n以下是一些近期引起我们兴趣并利用了GitHub和创新图谱数据的研究报告和论文：\n\n1.  **2025年AI指数报告**\n    *   由斯坦福大学以人为本AI研究所（HAI）发布，追踪AI发展和扩散趋势。\n    *   报告第1.6节分析了GitHub上公共AI相关软件项目随时间的变化，显示2024年急剧增加。\n\n2.  **企业加速器与全球创业增长**\n    *   研究发现，参与企业加速器项目使初创公司未来融资增加超过40%。\n    *   创新图谱数据被用作衡量区域技术劳动力能力的指标。\n\n3.  **软件工作的构建块解释编码职业和语言流行度**\n    *   研究人员分析了StackOverflow，开发了一个大规模、细粒度的软件开发任务分类法。\n    *   发现Python开发者更有可能从事与更高薪资相关的任务，这可能因为Python的多功能性使他们更容易掌握不同且不熟悉的领域技能。\n    *   创新图谱数据用于评估StackOverflow用户使用的编程语言分布的代表性。\n\n4.  **谁在使用AI编码？生成式AI的全球扩散与影响**\n    *   研究人员训练了一个分类器来检测AI生成的Python函数，发现美国开发者在GitHub上提交的Python函数中有30%是AI生成的。\n    *   这导致季度总提交量增加了2.4%，每年估计产生96-144亿美元的价值。\n\n5.  **社会能力评估框架：衡量高级AI对脆弱性、韧性和转型的含义**\n    *   研究人员开发了一种基于指标的方法，从三个维度评估社会对高级AI的韧性：结构性因素（“脆弱性”）、预防、吸收和从AI风险中恢复的能力（“韧性”），以及利用AI系统减轻AI风险并重构社会以实现系统性安全的能力（“转型”）。\n    *   创新图谱在原型框架中被引用为衡量社会在网络安全领域人力资本的数据来源。",
      "shortSummary": "GitHub创新图谱2025年第一季度更新，涵盖五年多数据。本次更新新增了条形图竞赛视频，并显示“数据可视化”主题首次进入前50名。AI和LLM主题持续快速增长。此外，多项利用创新图谱数据的研究被突出，涵盖AI发展趋势、企业加速器对创业的促进、编程语言流行度、AI生成代码的影响以及社会对高级AI的韧性评估。",
      "translated_title": "2025年第一季度创新图谱更新：条形图竞赛、数据可视化兴起及关键研究",
      "images": [
        {
          "url": "https://github.blog/wp-content/uploads/2025/08/data_visualization_topic.png?resize=1024%2C156",
          "alt": "Screenshot of a chart that shows that the “data-visualization” repository topic is at rank 50 in Q1 2025. This is the first and only time it appears on the chart.",
          "title": "",
          "position": 1
        },
        {
          "url": "https://github.blog/wp-content/uploads/2025/08/data_visualization_historical_rank.png?resize=1024%2C368",
          "alt": "A line chart that shows the rank of the “data-visualization” repository topic over time. Its rank rose steadily from rank 100 in Q1 2020 to rank 50 in Q1 2025, with a temporary spike to approximately rank 70 in Q1 2022.",
          "title": "",
          "position": 2
        },
        {
          "url": "https://github.blog/wp-content/uploads/2025/08/ai_topic.png?resize=518%2C1024",
          "alt": "A bump chart that shows the rapid rise of the “ai” repository topic over time, starting at rank 25 in Q3 2023 to rank 8 in Q1 2025.",
          "title": "",
          "position": 3
        },
        {
          "url": "https://github.blog/wp-content/uploads/2025/08/llm_topic.png?resize=410%2C1024",
          "alt": "A bump chart that shows the rapid rise of the “llm” repository topic over time, starting at rank 24 in Q2 2024 to rank 11 in Q1 2025.",
          "title": "",
          "position": 4
        },
        {
          "url": "https://avatars.githubusercontent.com/u/4744405?v=4&s=200",
          "alt": "Kevin Xu",
          "title": "",
          "position": 5
        },
        {
          "url": "https://github.blog/wp-content/uploads/2024/07/Icon-Circle.svg",
          "alt": "Docs",
          "title": "",
          "position": 6
        },
        {
          "url": "https://github.blog/wp-content/uploads/2024/07/Icon_95220f.svg",
          "alt": "GitHub",
          "title": "",
          "position": 7
        },
        {
          "url": "https://github.blog/wp-content/uploads/2024/07/Icon_da43dc.svg",
          "alt": "Customer stories",
          "title": "",
          "position": 8
        }
      ],
      "contentSource": "完整文章",
      "content": "<p>Discover the latest trends and insights on public software development activity on GitHub with the quarterly release of data for the Innovation Graph, updated through March 2025.</p>\n<p>The post <a href=\"https://github.blog/news-insights/policy-news-and-insights/q1-2025-innovation-graph-update-bar-chart-races-data-visualization-on-the-rise-and-key-research/\">Q1 2025 Innovation Graph update: Bar chart races, data visualization on the rise, and key research</a> appeared first on <a href=\"https://github.blog\">The GitHub Blog</a>.</p>\n"
    },
    {
      "title": "GitHub 可用性报告：2025 年 7 月 (原标题: GitHub Availability Report: July 2025)",
      "link": "https://github.blog/news-insights/company-news/github-availability-report-july-2025/",
      "pubDate": "Wed, 13 Aug 2025 21:00:00 +0000",
      "isoDate": "2025-08-13T21:00:00.000Z",
      "creator": "Jakub Oleksy",
      "summary": "# GitHub 2025 年 7 月可用性报告\n\nGitHub 在 2025 年 7 月经历了一起导致服务性能下降的事件。\n\n## 事件详情\n*   **发生时间**：2025 年 7 月 28 日世界协调时 21:41，持续 5 小时 34 分钟，直至 7 月 29 日世界协调时 03:15。\n*   **受影响服务**：GitHub Enterprise Importer (GEI)。\n*   **影响**：GEI 处于降级状态，无法处理迁移任务。\n*   **原因**：调查发现，GEI 基础设施的一个组件在例行内部改进实施期间被错误地移除服务，且无法恢复到之前的配置。\n*   **解决方案**：需要配置新的资源来解决此事件。\n\n## 已实施的改进\nGitHub 已识别并实施了以下改进措施：\n*   增强基础设施恢复能力。\n*   进行单元测试。\n*   利用测试数据进行更有效的验证。\n\n## 客户所需操作：更新 IP 允许列表\n由于上述改进，客户需要将新的 IP 范围添加到其已启用的 IP 允许列表中。\n\n### 新的 GEI IP 范围（需添加）：\n*   `20.99.172.64/28`\n*   `135.234.59.224/28`\n\n### 不再使用的 GEI IP 范围（可移除）：\n*   `40.71.233.224/28`\n*   `20.125.12.8/29`\n\n### 需要更新的 IP 允许列表类型：\n*   您的目标 `github.com` 组织或企业上的 IP 允许列表。\n*   如果您从 `github.com` 运行迁移，则需更新您的源 `github.com` 组织或企业上的 IP 允许列表。\n*   如果您从 GitHub Enterprise Server、Bitbucket Server 或 Bitbucket Data Center 实例运行迁移，则需更新您配置的 Azure Blob Storage 或 Amazon S3 存储账户上的允许列表。\n*   如果您从 Azure DevOps 运行迁移，则需更新您的 Azure DevOps 组织上的允许列表。\n\n## 通知与支持\n在过去 90 天内使用 GitHub Enterprise Importer 运行过迁移的用户已收到关于此更改的电子邮件提醒。如有任何迁移相关问题，请联系客户支持。\n\n## 更多信息\n*   请关注 GitHub 状态页面以获取实时更新和事件后总结。\n*   访问 GitHub 工程博客了解更多工作进展。\n\n---\n**作者：**\n![Jakub Oleksy](https://avatars.githubusercontent.com/u/6147691?v=4&s=200) Jakub Oleksy\n\n---\n**探索更多 GitHub 资源：**\n\n*   **文档**\n    ![Docs](https://github.blog/wp-content/uploads/2024/07/Icon-Circle.svg)\n    掌握 GitHub 所需的一切，尽在一处。\n*   **GitHub**\n    ![GitHub](https://github.blog/wp-content/uploads/2024/07/Icon_95220f.svg)\n    在 GitHub 上构建未来，这里是任何人、任何地点构建任何事物的平台。\n*   **客户案例**\n    ![Customer stories](https://github.blog/wp-content/uploads/2024/07/Icon_da43dc.svg)\n    了解使用 GitHub 进行构建的公司和工程团队。\n*   **GitHub Universe 2025**\n    ![GitHub Universe 2025](https://github.blog/wp-content/uploads/2024/04/Universe24-North_Star.svg)\n    最后机会：节省 700 美元购买 Universe 现场通行证，于 10 月 28-29 日在旧金山加入我们。",
      "shortSummary": "GitHub 2025 年 7 月报告了一起持续 5 小时 34 分钟的事件，导致 GitHub Enterprise Importer (GEI) 迁移服务降级。原因是例行改进中基础设施组件被错误移除。为解决此问题，GitHub 配置了新资源并实施了恢复、测试和验证改进。用户需更新 IP 允许列表，添加新的 GEI IP 范围并移除旧范围。受影响用户已收到邮件通知。",
      "translated_title": "GitHub 可用性报告：2025 年 7 月",
      "images": [
        {
          "url": "https://avatars.githubusercontent.com/u/6147691?v=4&s=200",
          "alt": "Jakub Oleksy",
          "title": "",
          "position": 1
        },
        {
          "url": "https://github.blog/wp-content/uploads/2024/07/Icon-Circle.svg",
          "alt": "Docs",
          "title": "",
          "position": 2
        },
        {
          "url": "https://github.blog/wp-content/uploads/2024/07/Icon_95220f.svg",
          "alt": "GitHub",
          "title": "",
          "position": 3
        },
        {
          "url": "https://github.blog/wp-content/uploads/2024/07/Icon_da43dc.svg",
          "alt": "Customer stories",
          "title": "",
          "position": 4
        },
        {
          "url": "https://github.blog/wp-content/uploads/2024/04/Universe24-North_Star.svg",
          "alt": "GitHub Universe 2025",
          "title": "",
          "position": 5
        }
      ],
      "contentSource": "完整文章",
      "content": "<p>In July, we experienced one incident that resulted in degraded performance across GitHub services.</p>\n<p>The post <a href=\"https://github.blog/news-insights/company-news/github-availability-report-july-2025/\">GitHub Availability Report: July 2025</a> appeared first on <a href=\"https://github.blog\">The GitHub Blog</a>.</p>\n"
    },
    {
      "title": "从私有到公开：联合国组织如何分四步开源其技术 (原标题: From private to public: How a United Nations organization open sourced its tech in four steps)",
      "link": "https://github.blog/open-source/social-impact/from-private-to-public-how-a-united-nations-organization-open-sourced-its-tech-in-four-steps/",
      "pubDate": "Wed, 13 Aug 2025 16:00:00 +0000",
      "isoDate": "2025-08-13T16:00:00.000Z",
      "creator": "Joshua Ku",
      "summary": "# 联合国组织开源技术之旅\n\n本文详细介绍了联合国专门机构国际电信联盟电信发展局（ITU BDT）如何通过与GitHub合作，在六个月内将其技术从封闭的Azure DevOps环境成功过渡到开放源代码社区的经验。这一转变旨在赋能全球合作伙伴，促进更广泛的贡献，并利用开源生态系统扩大其影响力，尤其对于预算和团队有限的联合国组织及非营利机构而言，开源具有显著优势。\n\n经过六个月的演示、讲解、研讨会和反馈会议，BDT在开源软件产品方面显著提升了专业知识，包括：\n*   审查了开发和发布软件文档的最佳实践。\n*   获得了选择合适许可证和创建必要支持文档的专业知识。\n*   掌握了管理贡献和确保代码库安全性的技能。\n*   获得了关于开源软件各方面的宝贵建议。\n\n以下是实现这一转变的四个关键步骤：\n\n## 1. 进行研究\n\n团队首先研究了他们喜欢和不喜欢的开源代码库，以确定要借鉴的经验。一个好的代码库应能让访问者通过README文件迅速了解项目需求及参与的益处，并展示对贡献者和社区的价值。研究内容包括：\n*   其他项目如何构建问题。\n*   社区如何运作。\n*   贡献指南是什么。\n*   模拟作为贡献者遇到的困难，并思考改进方案。\n\n通过研究各种成熟度不同的代码库，团队对开源世界的广阔范围有了清晰的认识。推荐的灵感来源包括Ersilia和Terraform，它们也是活跃社区的典范。\n\n## 2. 完善开放和公开的心态并应用于软件领域\n\n在从其他代码库获得启发后，下一步是处理自己的代码。这包括：\n*   **代码清理**：决定哪些代码可以公开，哪些需要清除敏感信息（如内部引用、商业或不兼容许可证的内容），并在必要时创建示例数据。使用示例数据时，务必提供数据格式指南。\n*   **项目塑造**：明确回答以下关键问题：\n    *   为什么有人会想要贡献？\n    *   是否有清晰的入门指南？\n    *   有哪些工作流程和流程来支持贡献者的成功？\n*   **关键文档**：\n    *   **“入门指南”（Getting Started guide）**：包含如何从零开始准备本地环境的信息，确保新开发者知道需要安装什么才能开始贡献。\n    *   **`CONTRIBUTING.md` 文件**：一份关于项目贡献者期望和责任的指南。\n*   **自动化测试**：在引入外部开发者贡献时，自动化测试和代码检查（linting）对于确保代码质量至关重要。\n\n## 3. 确定许可证\n\n选择开源许可证至关重要，否则他人无法合法使用您的项目。`choosealicense.com` 是一个优秀的资源，可帮助选择合适的许可证。不同的许可证有不同的义务：\n*   **义务极少**：如CC0许可证。\n*   **要求署名**：如Apache 2.0、BSD或MIT许可证。\n*   **要求共享源代码**：如GPL或AGPL许可证。\n\n选择许可证时，需考虑与项目中所有依赖项的许可证兼容性，并确保其有助于开源社区利用您的项目（例如，如果项目旨在嵌入其他项目）。ITU团队最终选择了BSD-2许可证，因为它是一种宽松的许可证，明确要求源代码和二进制文件的再分发必须附带署名。\n\n## 4. 吸引贡献者\n\n为了吸引贡献者，可以识别项目中任何“小痛点”（small papercuts），将其设置为易于解决的问题。这些问题可以转化为GitHub Issue，并标记为`good first issue`，这有助于刚接触开源或新加入代码库的开发者快速上手并熟悉代码库。\n\n## 总结与展望\n\nBDT与GitHub的合作探索了如何最好地开源其软件产品。认识到开源在增强全球访问、包容性和协作方面的机遇，团队旨在更广泛地提供软件工具，并吸引更广泛的开发者社区参与。通过此次合作，团队获得了关于如何使其代码库符合开源最佳实践的指导，并参与了实践环节，学习如何管理贡献和与外部开发者协作。这种结构化的方法为开源参与奠定了坚实的基础。在此进展的基础上，ITU团队致力于开源更多软件产品，并已更好地准备好清晰自信地继续这项工作。从私有到公开可能令人望而生畏，但通过循序渐进，您可以转变思维方式，并看到您的项目不断发展。\n\n**作者**：\n![Joshua Ku](https://avatars.githubusercontent.com/u/106406727?v=4&s=200)",
      "shortSummary": "联合国国际电信联盟电信发展局（ITU BDT）通过与GitHub合作，成功将其技术从封闭环境开源。为期六个月的项目分四步进行：研究现有开源项目、清理并公开代码、选择合适的开源许可证，以及通过“好上手问题”吸引贡献者。此举旨在扩大影响力，促进全球合作与包容性，使BDT能更好地利用开源生态系统，并为未来开源更多项目奠定基础。",
      "translated_title": "从私有到公开：联合国组织如何分四步开源其技术",
      "images": [
        {
          "url": "https://avatars.githubusercontent.com/u/106406727?v=4&s=200",
          "alt": "Joshua Ku",
          "title": "",
          "position": 1
        },
        {
          "url": "https://github.blog/wp-content/uploads/2024/07/Icon-Circle.svg",
          "alt": "Docs",
          "title": "",
          "position": 2
        },
        {
          "url": "https://github.blog/wp-content/uploads/2024/07/Icon_95220f.svg",
          "alt": "GitHub",
          "title": "",
          "position": 3
        },
        {
          "url": "https://github.blog/wp-content/uploads/2024/07/Icon_da43dc.svg",
          "alt": "Customer stories",
          "title": "",
          "position": 4
        },
        {
          "url": "https://github.blog/wp-content/uploads/2024/04/Universe24-North_Star.svg",
          "alt": "GitHub Universe 2025",
          "title": "",
          "position": 5
        }
      ],
      "contentSource": "完整文章",
      "content": "<p>Learn how the International Telecommunication Union made the switch to open source, and how you can too!</p>\n<p>The post <a href=\"https://github.blog/open-source/social-impact/from-private-to-public-how-a-united-nations-organization-open-sourced-its-tech-in-four-steps/\">From private to public: How a United Nations organization open sourced its tech in four steps</a> appeared first on <a href=\"https://github.blog\">The GitHub Blog</a>.</p>\n"
    },
    {
      "title": "我们为何开源MCP服务器，以及这对您意味着什么 (原标题: Why we open sourced our MCP server, and what it means for you)",
      "link": "https://github.blog/open-source/maintainers/why-we-open-sourced-our-mcp-server-and-what-it-means-for-you/",
      "pubDate": "Tue, 12 Aug 2025 13:52:49 +0000",
      "isoDate": "2025-08-12T13:52:49.000Z",
      "creator": "Kedasha Kerr",
      "summary": "# 模型上下文协议 (MCP) 与 GitHub 开源服务器\n\n## 核心问题与MCP的诞生\n当大型语言模型 (LLMs) 无法连接到外部应用和工具时，它们容易产生幻觉或基于过时信息给出不准确的答案。为了解决这一核心问题，**模型上下文协议 (MCP)** 应运而生。MCP 是一个开放协议，旨在标准化 LLM 应用程序如何连接并使用外部工具和数据源。它类似于语言服务器协议 (LSP)，两者都遵循客户端-服务器架构，简化了系统间的交互，并提供了标准化的通信模式。MCP 被誉为“LLMs 的 LSP”。\n\n## GitHub 开源其 MCP 服务器\nGitHub 现已开源其自身的 MCP 服务器。该服务器充当 GitHub 与任何 LLM 之间的“事实来源接口”，有效减少了幻觉，并解锁了新的自动化工作流。文章指出，相关内容可在 GitHub Podcast 的最新一集中了解。\n\n## MCP 架构\nMCP 基于客户端-服务器架构，其中 MCP 主机（例如 Copilot Chat 等 AI 应用程序）与 MCP 服务器保持一对一连接。关键概念包括：\n*   **MCP 主机 (MCP Host)**：希望通过 MCP 访问数据的 LLM 应用程序（例如 VS Code, Copilot Chat）。\n*   **MCP 客户端 (MCP Clients)**：在主机应用程序内部与 MCP 服务器保持一对一连接。\n*   **MCP 服务器 (MCP Servers)**：通过 MCP 暴露特定功能的轻量级程序。\n\n## GitHub MCP 服务器的功能\nGitHub MCP 服务器将 AI 工具直接连接到 GitHub 平台。用户不再需要执行 REST 或 GraphQL API 调用，而是可以将兼容 MCP 的客户端或代理指向服务器，并以自然语言请求所需内容。例如，您可以要求它：\n*   列出仓库中所有未解决的问题。\n*   显示等待审查的拉取请求。\n*   获取仓库或文件的元数据。\n*   创建或评论问题。\n\n其核心在于，自然语言请求能够自动转换为结构化、语义明确的 API 调用。这消除了创建自定义 API 端点或解析 Markdown 描述的需要。由于服务器支持 MCP，它可以与任何兼容的主机协同工作，包括 Copilot Workspace、VS Code 插件、基于 LLM 的产品、自定义聊天 UI 和自建代理。\n\n## 工作原理\n该架构概念简单但功能强大：\n1.  **服务器 (Server)**：GitHub 的 MCP 服务器是一个独立的服务，监听结构化的 MCP 请求。\n2.  **客户端 (Client)**：主机和服务器之间的连接器，负责将用户意图转换为有效的 MCP 请求。\n3.  **主机 (Host)**：AI 前端（如 IDE 助手或聊天 UI），负责呈现对话并将结构化提示发送到下游。\n\n当用户提出问题时，主机将其翻译为语义请求，客户端将其打包为 MCP 请求，服务器从 GitHub 获取真实数据并以结构化 JSON 格式返回。这种设计实现了语言模型、用户体验以及其可访问的数据或工具之间的清晰分离，每一层都具有模块化、可测试和可互换的特性。\n\n## 如何开始使用 GitHub 远程 MCP 服务器\n现在即可开始使用 GitHub 的 MCP 服务器。您需要：\n*   **MCP 主机**：VS Code 或任何其他支持 MCP 的 LLM 应用程序。\n*   **MCP 客户端**：Copilot 代理、LLM 聊天 UI 或支持 MCP 的自定义客户端。\n*   **GitHub MCP 服务器**：可从官方 GitHub MCP 服务器仓库获取。\n\n在 VS Code 中安装 GitHub MCP 服务器的步骤：\n1.  添加服务器配置片段：\n    ```json\n    {\n      \"servers\": {\n        \"github\": {\n          \"type\": \"http\",\n          \"url\": \"https://api.githubcopilot.com/mcp/\"\n        }\n      }\n    }\n    ```\n2.  创建配置文件：在项目根目录创建 `/vscode` 目录，并在其中创建 `mcp.json` 文件。\n3.  将上述代码粘贴到 `mcp.json` 文件中。\n4.  完成设置：点击出现的启动按钮，并在提示时完成 OAuth 流程。\n\n## 实际应用案例\n早期采用者已利用 MCP 服务器创建了许多实用工具：\n*   **Markdown 自动化**：一个团队使用 MCP 服务器将数十个 GitHub Issue 转换为社区微站点的 Markdown 内容文件，实现了自动化处理。\n*   **每周团队摘要**：一个轻量级机器人扫描特定 GitHub 仓库，编译每周摘要，并将其发布到 Slack，保持团队同步。\n*   **对话式项目助手**：一个开源团队构建了基于聊天的界面，贡献者可以提出自然语言问题，代理使用 MCP 转换为 GitHub 查询并返回实时数据摘要。\n*   **个人 LLM 仪表板**：一位开发者将自己的 GitHub 账户连接到本地仪表板上的 MCP 感知代理，提供主动提示，如需要审查的拉取请求、过时问题和基于合并更改的草稿发布说明。\n\n通过为 AI 模型提供真实、结构化的上下文，MCP 服务器使工具变得更智能、更安全。\n\n## 更多资源\n*   阅读关于如何使用 MCP 服务器的实用指南。\n*   深入了解如何构建安全可扩展的远程 MCP 服务器。\n*   订阅 GitHub Podcast，收听最新一集。\n\n文章作者：\n![Kedasha Kerr](https://avatars.githubusercontent.com/u/47188731?v=4&s=200)\nKedasha Kerr 是 GitHub 的开发者倡导者。\n\n相关内容：\n*   ![Docs](https://github.blog/wp-content/uploads/2024/07/Icon-Circle.svg) **文档**：掌握 GitHub 所需的一切。\n*   ![GitHub](https://github.blog/wp-content/uploads/2024/07/Icon_95220f.svg) **GitHub**：在 GitHub 上构建未来。\n*   ![Customer stories](https://github.blog/wp-content/uploads/2024/07/Icon_da43dc.svg) **客户案例**：了解使用 GitHub 的公司和工程团队。\n*   ![GitHub Universe 2025](https://github.blog/wp-content/uploads/2024/04/Universe24-North_Star.svg) **GitHub Universe 2025**：参加旧金山的年度大会。",
      "shortSummary": "GitHub 已开源其模型上下文协议（MCP）服务器，旨在解决大型语言模型（LLMs）因缺乏外部工具和数据连接而产生的幻觉问题。MCP 是一个开放协议，标准化了 LLM 应用与外部资源交互的方式，类似于 LLM 的语言服务器协议（LSP）。GitHub 的 MCP 服务器充当 GitHub 与 LLM 之间的“事实来源”接口，允许用户通过自然语言请求获取实时、结构化的 GitHub 数据，从而实现自动化并提高 AI 工具的智能性和安全性。它支持多种实际应用，从自动化文档生成到个性化仪表板。",
      "translated_title": "我们为何开源MCP服务器，以及这对您意味着什么",
      "images": [
        {
          "url": "https://avatars.githubusercontent.com/u/47188731?v=4&s=200",
          "alt": "Kedasha Kerr",
          "title": "",
          "position": 1
        },
        {
          "url": "https://github.blog/wp-content/uploads/2024/07/Icon-Circle.svg",
          "alt": "Docs",
          "title": "",
          "position": 2
        },
        {
          "url": "https://github.blog/wp-content/uploads/2024/07/Icon_95220f.svg",
          "alt": "GitHub",
          "title": "",
          "position": 3
        },
        {
          "url": "https://github.blog/wp-content/uploads/2024/07/Icon_da43dc.svg",
          "alt": "Customer stories",
          "title": "",
          "position": 4
        },
        {
          "url": "https://github.blog/wp-content/uploads/2024/04/Universe24-North_Star.svg",
          "alt": "GitHub Universe 2025",
          "title": "",
          "position": 5
        }
      ],
      "contentSource": "完整文章",
      "content": "<p>Learn how maintainers are using the GitHub MCP Server and what they are building in this episode of the GitHub Podcast.</p>\n<p>The post <a href=\"https://github.blog/open-source/maintainers/why-we-open-sourced-our-mcp-server-and-what-it-means-for-you/\">Why we open sourced our MCP server, and what it means for you</a> appeared first on <a href=\"https://github.blog\">The GitHub Blog</a>.</p>\n"
    }
  ],
  "lastUpdated": "2025-08-23T04:32:46.241Z"
}