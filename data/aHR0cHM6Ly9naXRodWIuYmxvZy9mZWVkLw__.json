{
  "sourceUrl": "https://github.blog/feed/",
  "title": "The GitHub Blog",
  "description": "Updates, ideas, and inspiration from GitHub to help developers build and design software.",
  "link": "https://github.blog/",
  "items": [
    {
      "title": "将GitHub Copilot编程代理集成到工作流中的5种方法 (原标题: 5 ways to integrate GitHub Copilot coding agent into your workflow)",
      "link": "https://github.blog/ai-and-ml/github-copilot/5-ways-to-integrate-github-copilot-coding-agent-into-your-workflow/",
      "pubDate": "Thu, 18 Sep 2025 16:00:00 +0000",
      "isoDate": "2025-09-18T16:00:00.000Z",
      "creator": "Andrea Griffiths",
      "summary": "# 将GitHub Copilot编程代理集成到工作流中的5种方法\n\n本文探讨了如何将GitHub Copilot编程代理更深入地集成到开发工作流中，超越其基本功能，充分发挥其潜力。通过以下五种强大的策略，开发者可以更有效地处理技术债务、验证UI变更、安全地进行实验等。\n\n## 1. 利用Agents面板处理技术债务\n技术债务是开发中常见的难题，例如依赖升级、遗留功能标志和小型重构等。这些任务通常枯燥但必要，容易堆积。\n*   **解决方案**：新的Agents面板允许开发者批量处理这些繁琐但重要的任务，并将其交给Copilot执行，从而使开发者能够专注于核心功能开发。\n*   **操作步骤**：\n    1.  在GitHub.com上打开你的仓库，点击Agents面板按钮。\n    2.  描述你的任务，例如：“更新扩展清单以支持VS Code 1.104”或“添加TypeScript严格模式并修复所有类型错误”。\n    3.  点击“开始任务”，让Copilot完成其余工作。\n*   **专业提示**：将小型清理任务批量处理成单独的请求。每个任务只消耗一个高级请求，你将获得范围清晰的拉取请求，可以独立合并。\n\n## 2. 通过Playwright MCP验证UI变更\n前端变更通常需要手动启动应用程序、检查UI并确保没有损坏。Copilot与Playwright MCP服务器的集成彻底改变了这一过程。\n*   **解决方案**：Copilot可以自动启动应用程序、与其交互并捕获屏幕截图。\n*   **操作步骤**：\n    1.  从Agents面板描述任务，例如：“添加英语、法语和西班牙语的国际化支持”。\n    2.  Copilot生成代码，使用Playwright MCP服务器在浏览器中运行你的应用程序，并为拉取请求捕获屏幕截图。\n    3.  在本地签出分支之前，直接在拉取请求中审查屏幕截图。\n*   **图片示例**：\n    ![Playwright MCP 验证 UI 变更](https://github.blog/wp-content/uploads/2025/09/playwright.gif)\n*   **专业提示**：这对于验证响应式设计、深色模式切换或任何屏幕截图价值千言万语的UI变更非常有用。\n\n## 3. 安全地使用分支策略进行实验\n并非所有想法都适合立即投入生产。有时，你需要一个安全的空间让Copilot进行实验，而不会影响主分支。\n*   **解决方案**：Copilot的分支处理功能非常强大，你可以选择任何分支作为起点，而不仅仅是默认分支。\n*   **操作步骤**：\n    1.  从Agents面板描述任务，例如：“添加实时航班跟踪和实时延迟通知”。\n    2.  从下拉菜单中选择你的基础分支（例如，`feature/booking-system` 而不是 `main`）。\n    3.  Copilot会从你选择的基础分支创建一个 `copilot/` 分支，并打开一个草稿拉取请求供你审查。\n    4.  审查拉取请求，并通过拉取请求评论向Copilot提供反馈。\n*   **图片示例**：\n    ![通过评论向 Copilot 提供反馈](https://github.blog/wp-content/uploads/2025/09/mentioncopilot-4.gif)\n*   **专业提示**：使用专用分支在演示中展示原型——它们干净、隔离且易于在需要时丢弃。\n\n## 4. 为任务选择正确的入口点\n为Copilot分配任务时，选择正确的入口点至关重要。\n*   **最佳选择**：\n    *   **Agents面板**：在浏览GitHub时进行临时任务的理想选择，例如审查问题或规划工作。\n    *   **GitHub Issues**：如果你的团队已经在Issues中跟踪工作，可以直接分配给Copilot，使其成为现有工作流的一部分。\n    *   **VS Code**：在编码时发现的快速重构，无需上下文切换。\n    *   **移动应用程序**：当你不在办公桌前时，对于小型任务或后续工作非常有用。\n*   **专业提示**：不要想太多。最好的入口点是灵感来袭时离你最近的那个。\n\n## 5. 通过MCP服务器扩展Copilot编程代理\nCopilot在获得更多上下文时会变得更智能。\n*   **默认MCP服务器**：\n    *   **Playwright MCP**：实现浏览器自动化和Web应用程序测试的屏幕截图功能。\n    *   **GitHub MCP**：提供对GitHub仓库、问题、拉取请求和其他GitHub特定上下文的感知。\n*   **扩展能力**：通过自定义MCP服务器，Copilot可以变得更加强大，例如：\n    *   **Notion MCP**：拉取项目规范或笔记。\n    *   **Hugging Face MCP**：访问AI模型和数据集以实现机器学习功能。\n*   **资源**：最近推出的开源MCP注册表提供了一个集中发现、发布和管理MCP服务器集成的平台。\n*   **专业提示**：访问VS Code Insider页面，其中提供了按类别（如开发工具、生产力、数据与分析、商业服务、云与基础设施）策划的MCP服务器列表，所有这些都可以一键安装。\n\n## 结论与展望\n这五种工作流展示了Copilot如何从一个建议工具演变为一个重要的开发伙伴。通过将其集成到日常工作中，你不仅节省了时间，还在根本上改变了处理开发挑战的方式。Copilot自动化了技术债务、处理了UI验证、并支持在隔离分支中安全地进行原型开发。当团队将Copilot视为一个能够解锁开发工作流新可能性的协作者时，将获得巨大的成功。",
      "shortSummary": "GitHub Copilot编程代理通过五种策略深度集成到开发工作流中，超越了基础功能。这些策略包括：利用Agents面板自动化处理技术债务；通过Playwright MCP服务器自动验证UI变更并捕获截图；安全地使用分支策略进行实验，而不会影响主分支；根据任务场景选择合适的入口点（如Agents面板、GitHub Issues、IDE或移动应用）；以及通过自定义MCP服务器（如Notion MCP、Hugging Face MCP）扩展Copilot的上下文感知能力。Copilot从一个代码建议工具转变为一个重要的开发伙伴，显著提升了开发效率和创新潜力。",
      "translated_title": "将GitHub Copilot编程代理集成到工作流中的5种方法",
      "images": [
        {
          "url": "https://github.blog/wp-content/uploads/2025/09/playwright.gif",
          "alt": "Square image",
          "title": "",
          "position": 1
        },
        {
          "url": "https://github.blog/wp-content/uploads/2025/09/mentioncopilot-4.gif",
          "alt": "Square image",
          "title": "",
          "position": 2
        },
        {
          "url": "https://github.blog/wp-content/uploads/2025/08/Andrea-Griffiths_avatar_1755783168-200x200.jpeg",
          "alt": "Andrea Griffiths",
          "title": "",
          "position": 3
        },
        {
          "url": "https://github.blog/wp-content/uploads/2024/07/Icon-Circle.svg",
          "alt": "Docs",
          "title": "",
          "position": 4
        },
        {
          "url": "https://github.blog/wp-content/uploads/2024/07/Icon_95220f.svg",
          "alt": "GitHub",
          "title": "",
          "position": 5
        },
        {
          "url": "https://github.blog/wp-content/uploads/2024/07/Icon_da43dc.svg",
          "alt": "Customer stories",
          "title": "",
          "position": 6
        },
        {
          "url": "https://github.blog/wp-content/uploads/2024/04/Universe24-North_Star.svg",
          "alt": "GitHub Universe 2025",
          "title": "",
          "position": 7
        }
      ],
      "contentSource": "完整文章",
      "content": "<p>Already know the basics of GitHub Copilot coding agent? Here are five ways to offload chores, tackle tech debt, and keep your workflow moving fast.</p>\n<p>The post <a href=\"https://github.blog/ai-and-ml/github-copilot/5-ways-to-integrate-github-copilot-coding-agent-into-your-workflow/\">5 ways to integrate GitHub Copilot coding agent into your workflow</a> appeared first on <a href=\"https://github.blog\">The GitHub Blog</a>.</p>\n"
    },
    {
      "title": "认识 GitHub MCP 注册表：发现 MCP 服务器的最快方式 (原标题: Meet the GitHub MCP Registry: The fastest way to discover MCP Servers)",
      "link": "https://github.blog/ai-and-ml/github-copilot/meet-the-github-mcp-registry-the-fastest-way-to-discover-mcp-servers/",
      "pubDate": "Tue, 16 Sep 2025 16:27:54 +0000",
      "isoDate": "2025-09-16T16:27:54.000Z",
      "creator": "Toby Padilla",
      "summary": "# GitHub MCP 注册表：AI 代理与开发工具连接的新中心\n\n## 引言：解决 AI 代理集成痛点\n在将 AI 代理连接到开发工具时，开发者常面临挑战：MCP 服务器分散在多个注册表、代码库和社区讨论中，导致发现过程缓慢且充满摩擦。同时，MCP 服务器的创建者也因需在多处发布并反复回答设置问题而感到疲惫。这种碎片化的环境不仅效率低下，还存在潜在的安全风险。\n\n为解决这一问题，GitHub 推出了 **GitHub MCP 注册表**，旨在成为发现 MCP 服务器的全新中心。无论开发者使用 GitHub Copilot、其他 AI 代理或任何支持 MCP 的 AI 工具，都可以在此找到所需资源。GitHub MCP 注册表将显著简化 MCP 服务器的发现、探索和使用过程，帮助开发者更快找到合适的工具，并促进一个更开放、可互操作的生态系统。\n\n## GitHub MCP 注册表简介\nGitHub MCP 注册表以开放协作的方式启动，初始版本包含来自主要合作伙伴和开源社区的精选 MCP 服务器目录。每个服务器都与其 GitHub 仓库关联，方便开发者快速了解其功能、入门指南并做出明智选择。\n\n**核心功能与优势：**\n*   **VS Code 内的发现能力：** 支持一键安装，简化集成流程。\n*   **信息筛选：** 服务器按 GitHub 星标和社区活跃度排序，突出高质量项目。\n*   **广泛兼容性：** 可与 GitHub Copilot 及任何 MCP 兼容的主机协同工作。\n\n注册表从一开始就由整个生态系统的贡献者共同塑造，包括帮助定义 MCP 服务器质量标准的启动合作伙伴。这种协作基础确保开发者能够访问值得信赖的工具，并为更健康、更具互操作性的 AI 生态系统奠定基础。\n\n![图片 1](https://github.blog/wp-content/uploads/2025/09/mcp2.jpg?resize=1024%2C538)\n\n## 合作伙伴的贡献与价值\n多个行业领导者已通过 GitHub MCP 注册表将其 MCP 服务器集成到开发工作流中，带来了显著价值：\n\n*   **Figma (业务发展副总裁 Anna Kohnen)：** 通过 Dev Mode MCP 服务器，开发者可轻松将 Figma 上下文引入 Copilot，加速设计到代码的工作流，生成符合设计系统且可用于生产的代码。\n*   **Postman (工程主管 Bajali Raghavan)：** 将 MCP 视为 AI 代理堆栈的基础层和构建 AI 就绪 API 的关键部分。GitHub MCP 注册表帮助开发者从编码助手内部访问整个 Postman 平台，以前所未有的方式弥合代码、文档和执行之间的鸿沟。\n*   **HashiCorp (产品管理高级副总裁 Chris Audie)：** 开发者现在可以轻松发现官方 MCP 服务器（如 HashiCorp 的 Terraform MCP 服务器），并一键将其添加到工作流中，从而更快地将 Terraform 的功能引入日常开发。\n*   **Dynatrace (产品副总裁 Bonifaz Kaufmann)：** Dynatrace MCP 服务器为开发者提供 AI 驱动的可观测性、安全性和性能洞察，减少上下文切换和认知负荷，帮助团队更快、更弹性、更稳健地交付软件。\n*   **远程 GitHub MCP 服务器：** 该服务器已全面上市，允许代理连接到 GitHub 仓库中丰富的上下文（如问题和拉取请求），从而实现更深入、多步骤的代理工作流。其纳入注册表强化了 GitHub 对开放互操作性的承诺。\n\n## 构建开放生态系统\nGitHub MCP 注册表的推出仅仅是个开始。GitHub 正与 Anthropic 和 MCP 指导委员会紧密合作，共同构建一个与 GitHub 注册表无缝集成的开源 MCP 注册表。通过与更广泛的社区合作，他们正在塑造 MCP 的开放标准和贡献模型。\n\n**统一发布流程：**\n开发者将能够直接向 OSS MCP 社区注册表自发布 MCP 服务器。一旦发布，这些服务器将自动出现在 GitHub MCP 注册表中，从而创建一个统一、可扩展的发现路径。这种发布流程将：\n*   减少注册表之间的重复。\n*   展示透明的元数据和验证信号。\n*   实现整个生态系统的大规模贡献。\n\n最终目标是建立一个更健康、更开放的生态系统，以质量为导向并加速创新。\n\n## 行动号召\nGitHub MCP 注册表是实现从想法到集成的最快途径，也是更健康、更具互操作性的 AI 工具链的基础。开发者可立即浏览 GitHub MCP 注册表，发现来自整个生态系统的精选 MCP 服务器，或为 OSS MCP 社区注册表做出贡献，共同塑造开放代理工作流的未来。\n\n![Toby Padilla](https://avatars.githubusercontent.com/u/83556?v=4&s=200)\n**作者：** Toby Padilla，GitHub 首席产品经理，负责领导 GitHub 的 MCP 计划。\n\n![Docs](https://github.blog/wp-content/uploads/2024/07/Icon-Circle.svg)\n![GitHub](https://github.blog/wp-content/uploads/2024/07/Icon_95220f.svg)\n![Customer stories](https://github.blog/wp-content/uploads/2024/07/Icon_da43dc.svg)\n![GitHub Universe 2025](https://github.blog/wp-content/uploads/2024/04/Universe24-North_Star.svg)",
      "shortSummary": "GitHub推出了MCP注册表，旨在解决AI代理与开发工具连接中MCP服务器分散、发现困难的问题。该注册表作为中心化平台，方便开发者发现、探索和使用MCP服务器，促进开放互操作的AI生态系统。它提供精选目录、VS Code一键安装、按GitHub星标排序等功能。Figma、Postman、HashiCorp、Dynatrace等合作伙伴已通过其MCP服务器加入。未来，GitHub将与Anthropic和MCP指导委员会合作，建立统一的开源MCP注册表，实现无缝发布和更健康的生态系统。",
      "translated_title": "认识 GitHub MCP 注册表：发现 MCP 服务器的最快方式",
      "images": [
        {
          "url": "https://github.blog/wp-content/uploads/2025/09/mcp2.jpg?resize=1024%2C538",
          "alt": "",
          "title": "",
          "position": 1
        },
        {
          "url": "https://avatars.githubusercontent.com/u/83556?v=4&s=200",
          "alt": "Toby Padilla",
          "title": "",
          "position": 2
        },
        {
          "url": "https://github.blog/wp-content/uploads/2024/07/Icon-Circle.svg",
          "alt": "Docs",
          "title": "",
          "position": 3
        },
        {
          "url": "https://github.blog/wp-content/uploads/2024/07/Icon_95220f.svg",
          "alt": "GitHub",
          "title": "",
          "position": 4
        },
        {
          "url": "https://github.blog/wp-content/uploads/2024/07/Icon_da43dc.svg",
          "alt": "Customer stories",
          "title": "",
          "position": 5
        },
        {
          "url": "https://github.blog/wp-content/uploads/2024/04/Universe24-North_Star.svg",
          "alt": "GitHub Universe 2025",
          "title": "",
          "position": 6
        }
      ],
      "contentSource": "完整文章",
      "content": "<p>This is your new home base for discovering MCP servers. Learn how we’re working with the broader community on MCP publication and discovery.</p>\n<p>The post <a href=\"https://github.blog/ai-and-ml/github-copilot/meet-the-github-mcp-registry-the-fastest-way-to-discover-mcp-servers/\">Meet the GitHub MCP Registry: The fastest way to discover MCP Servers</a> appeared first on <a href=\"https://github.blog\">The GitHub Blog</a>.</p>\n"
    },
    {
      "title": "GitHub SSH 访问的后量子安全性 (原标题: Post-quantum security for SSH access on GitHub)",
      "link": "https://github.blog/engineering/platform-security/post-quantum-security-for-ssh-access-on-github/",
      "pubDate": "Mon, 15 Sep 2025 16:00:00 +0000",
      "isoDate": "2025-09-15T16:00:00.000Z",
      "creator": "brian m. carlson",
      "summary": "# GitHub SSH 访问的后量子安全性\n\nGitHub 宣布了一项重要更新，旨在提升通过 SSH 访问 Git 数据的安全性。\n\n## 主要变更与目的\n\n*   **引入新算法**：GitHub 正在其用于访问 Git 数据的 SSH 端点中，添加一种新的后量子安全 SSH 密钥交换算法，即 `sntrup761x25519-sha512`（或 `sntrup761x25519-sha512@openssh.com`）。\n*   **影响范围**：此变更仅影响 SSH 访问，对 HTTPS 访问无任何影响。此外，它也不影响在美国地区进行数据驻留的 GitHub Enterprise Cloud。\n*   **安全目标**：此举旨在确保数据在当前及未来都能抵御量子计算机可能发起的解密攻击，从而提供长期的安全性。\n*   **应对“先存储后解密”攻击**：目前的密钥交换算法虽然安全，但未来强大的量子计算机可能能够破解它们。攻击者可能现在保存加密会话，待未来量子计算机建成后进行解密。引入后量子算法正是为了防范这种“先存储后解密”（store now, decrypt later）的攻击。\n\n## 混合后量子密钥交换算法\n\nGitHub 正在推出一种混合后量子密钥交换算法 `sntrup761x25519-sha512`。\n\n*   **技术构成**：该算法结合了新的后量子安全算法 Streamlined NTRU Prime 和经典的椭圆曲线 Diffie-Hellman (X25519) 算法。\n*   **安全性保障**：尽管后量子算法相对较新，测试较少，但与经典算法的结合使用，确保了整体安全性不会弱于经典算法所提供的水平。\n\n## 部署时间与范围\n\n*   **生效日期**：新算法将于 **2025 年 9 月 17 日**起在 GitHub.com 和非美国地区数据驻留的 GitHub Enterprise Cloud 上启用。\n*   **GitHub Enterprise Server**：此功能也将包含在 GitHub Enterprise Server 3.19 中。\n*   **美国地区例外**：由于美国地区仅允许使用 FIPS 批准的加密技术，而此后量子算法尚未获得 FIPS 批准，因此不适用于美国地区的 GitHub Enterprise Cloud。\n\n## 用户如何准备？\n\n*   **受影响用户**：此变更仅影响通过 SSH 连接的 Git 客户端。如果您的 Git 远程仓库以 `https://` 开头，则不受影响。\n*   **大多数用户**：对于大多数情况，新算法不会带来任何明显变化。如果您的 SSH 客户端支持 `sntrup761x25519-sha512` 或 `sntrup761x25519-sha512@openssh.com`（例如 OpenSSH 9.0 或更新版本），它将默认自动选择新算法，除非您修改了客户端的默认设置。\n*   **旧版客户端**：如果使用旧版 SSH 客户端，客户端将回退到旧的密钥交换算法。这意味着在升级之前，您将无法体验到后量子算法带来的安全优势，但 SSH 连接仍将正常工作，因为 SSH 协议会自动选择双方都支持的算法。\n*   **测试客户端支持**：\n    *   要测试您的 OpenSSH 版本是否支持此算法，可以运行命令：`ssh -Q kex`。如果输出中包含 `sntrup761x25519-sha512` 或 `sntrup761x25519-sha512@openssh.com`，则表示支持。\n    *   要检查 OpenSSH 在连接到 GitHub.com 时使用了哪个密钥交换算法，请在 Linux、macOS、Git Bash 或其他类 Unix 环境中运行命令：`$ ssh -v git@github.com exit 2>&1 | grep 'kex: algorithm:'`。\n    *   对于其他 SSH 实现，请查阅其文档。\n\n## 未来展望\n\nGitHub 将持续关注安全领域的最新发展。随着所使用的 SSH 库开始支持更多后量子算法（包括符合 FIPS 标准的算法），GitHub 将及时更新其服务。\n\n---\n\n### 贡献者\n\n*   ![brian m. carlson](https://avatars.githubusercontent.com/u/497054?v=4&s=200) brian m. carlson 是 Git Systems 团队的工程师，业余时间也是 Git 的贡献者。\n*   ![Taylor Blau](https://avatars.githubusercontent.com/u/443245?v=4&s=200) Taylor Blau 是 GitHub 的首席软件工程师，负责 Git 相关工作。\n\n### 相关文章\n\n探索更多来自 GitHub 的内容：\n\n*   ![Docs](https://github.blog/wp-content/uploads/2024/07/Icon-Circle.svg) Docs：掌握 GitHub 所需的一切，尽在一处。\n*   ![GitHub](https://github.blog/wp-content/uploads/2024/07/Icon_95220f.svg) GitHub：在 GitHub 上构建未来，这里是任何人、任何地方、构建任何东西的平台。\n*   ![Customer stories](https://github.blog/wp-content/uploads/2024/07/Icon_da43dc.svg) Customer stories：了解使用 GitHub 进行构建的公司和工程团队。\n*   ![GitHub Universe 2025](https://github.blog/wp-content/uploads/2024/04/Universe24-North_Star.svg) GitHub Universe 2025：最后机会：节省 700 美元购买 Universe 现场通行证，于 10 月 28-29 日在旧金山与我们相聚。",
      "shortSummary": "GitHub 宣布为 SSH 访问 Git 数据引入新的后量子安全密钥交换算法 `sntrup761x25519-sha512`。此举旨在保护数据免受未来量子计算机可能发起的“先存储后解密”攻击。该混合算法结合了后量子与经典加密技术，确保安全性。变更将于 2025 年 9 月 17 日起在 GitHub.com 和非美国地区 GitHub Enterprise Cloud 生效。大多数现代 SSH 客户端将自动支持，旧版客户端将回退。此更新不影响 HTTPS 访问。",
      "translated_title": "GitHub SSH 访问的后量子安全性",
      "images": [
        {
          "url": "https://avatars.githubusercontent.com/u/497054?v=4&s=200",
          "alt": "brian m. carlson",
          "title": "",
          "position": 1
        },
        {
          "url": "https://avatars.githubusercontent.com/u/443245?v=4&s=200",
          "alt": "Taylor Blau",
          "title": "",
          "position": 2
        },
        {
          "url": "https://github.blog/wp-content/uploads/2024/07/Icon-Circle.svg",
          "alt": "Docs",
          "title": "",
          "position": 3
        },
        {
          "url": "https://github.blog/wp-content/uploads/2024/07/Icon_95220f.svg",
          "alt": "GitHub",
          "title": "",
          "position": 4
        },
        {
          "url": "https://github.blog/wp-content/uploads/2024/07/Icon_da43dc.svg",
          "alt": "Customer stories",
          "title": "",
          "position": 5
        },
        {
          "url": "https://github.blog/wp-content/uploads/2024/04/Universe24-North_Star.svg",
          "alt": "GitHub Universe 2025",
          "title": "",
          "position": 6
        }
      ],
      "contentSource": "完整文章",
      "content": "<p>GitHub is introducing post-quantum secure key exchange methods for SSH access to better protect Git data in transit.</p>\n<p>The post <a href=\"https://github.blog/engineering/platform-security/post-quantum-security-for-ssh-access-on-github/\">Post-quantum security for SSH access on GitHub</a> appeared first on <a href=\"https://github.blog\">The GitHub Blog</a>.</p>\n"
    },
    {
      "title": "利用开源和AI构建个人应用 (原标题: Building personal apps with open source and AI)",
      "link": "https://github.blog/open-source/maintainers/building-personal-apps-with-open-source-and-ai/",
      "pubDate": "Fri, 12 Sep 2025 16:00:00 +0000",
      "isoDate": "2025-09-12T16:00:00.000Z",
      "creator": "Kedasha Kerr",
      "summary": "## 利用开源和AI构建个人应用\n\n文章探讨了如何结合开源（Open Source）和人工智能（AI）的力量，来构建满足个人需求的定制化应用程序，从而提高效率、减少心智负担并增加开发乐趣。\n\n### 定制化小工具的巨大价值\n\n作者指出，最有效的解决方案往往是那些简单、精准的工具，它们能自动化重复性任务，显著节省时间和精力。例如：\n\n*   **自动化内容整理：** 作者的同事Cassidy Williams编写了一个脚本，能将各种格式的通讯订阅者答案转换为Markdown列表，省去了繁琐的手动整理工作。\n*   **数据格式转换：** 作者本人也开发了一个将CSV转换为Markdown的工具，虽然不复杂，但极大地提高了工作效率。\n\n这些看似不起眼的小工具，通过将人们从重复性劳动中解放出来，使其能专注于更有意义的工作，从而产生巨大的影响。\n\n### 开源：创新的游乐场\n\n开源社区为个人应用开发提供了丰富的资源和协作环境：\n\n*   **社区力量：** 开发者在遇到问题时，很可能在开源社区中找到已有的解决方案。GitHub是发现和利用这些工具的宝库。\n*   **修改与定制：** 即使没有完全符合需求的工具，开发者也可以通过“fork”现有项目并进行修改，使其适应自己的工作流程。\n*   **分享与贡献：** 将个人项目开源不仅能帮助自己，还能惠及他人，甚至激发社区贡献，为项目带来新功能（例如，作者的待办事项应用在开源后，社区成员建议添加了“恢复任务”按钮）。\n*   **鼓励“fork”：** 作者鼓励用户根据自己的需求“fork”项目，实现个性化定制。\n\n### AI：效率倍增器\n\n如果说开源是基础，那么AI就是个人软件开发的“火箭燃料”：\n\n*   **加速开发流程：** AI工具（如GitHub Copilot）能够协助项目搭建、故障排除，甚至解释复杂的代码库，极大地加速了开发进程。\n*   **降低技术门槛：** AI使得即使是不熟悉前端开发的开发者，也能在短时间内构建出功能性的仪表盘。\n*   **促进学习与创新：** AI不是学习的替代品，而是促进者，它能帮助开发者突破瓶颈，加速想法的实现。\n\n### 降低心智负担，提升开发乐趣\n\n构建个人工具最大的益处在于减少了心智负担。当工作流程中的一部分被自动化处理后，开发者可以将精力集中在更具创造性或更有意义的任务上。AI作为“开发伙伴”，能够指出错误并提供解决方案，使得软件开发过程变得更加愉快，减少了因调试难题而产生的挫败感。\n\n### 工具的安全、分享与成长\n\n当个人工具被开源并被他人使用时，安全性与可维护性成为重要的考量。此时，社区的协作作用尤为突出：\n\n*   **社区协作：** 其他开发者可能会发现问题、提出改进建议，甚至将项目带向新的方向。\n*   **清晰的贡献指南：** 作者建议在贡献指南中明确，如果用户想添加不在个人路线图上的功能，可以自由“fork”项目进行实现。\n\n构建、分享并看着自己的工具在社区中成长，是作为开发者最有成就感的部分之一。在开源和AI的助力下，现在是创造所需解决方案并帮助他人的最佳时机。\n\n### 作者信息\n\n*   **Kedasha Kerr** 是GitHub的开发者倡导者，乐于与更广泛的开发者社区分享经验和学习心得。\n    ![Kedasha Kerr](https://avatars.githubusercontent.com/u/47188731?v=4&s=200)\n\n### 相关资源\n\n*   **Git 2.51亮点**\n*   **GitHub文档：** 掌握GitHub所需的一切。 ![Docs](https://github.blog/wp-content/uploads/2024/07/Icon-Circle.svg)\n*   **GitHub平台：** 在GitHub上构建未来。 ![GitHub](https://github.blog/wp-content/uploads/2024/07/Icon_95220f.svg)\n*   **客户案例：** 了解使用GitHub进行构建的公司和工程团队。 ![Customer stories](https://github.blog/wp-content/uploads/2024/07/Icon_da43dc.svg)\n*   **GitHub Universe 2025：** 注册参加10月28-29日在旧金山举行的活动。 ![GitHub Universe 2025](https://github.blog/wp-content/uploads/2024/04/Universe24-North_Star.svg)",
      "shortSummary": "文章阐述了利用开源和AI构建个人应用的巨大价值。开源提供了丰富的社区资源和协作机会，允许开发者发现、修改并分享工具。AI（如GitHub Copilot）则作为效率倍增器，加速开发进程，降低技术门槛，并减少心智负担。这种结合使得创建定制化工具变得更加愉快、高效和易于实现，同时促进了开发者社区内的分享与成长，让开发者能专注于更有创造性的工作。",
      "translated_title": "利用开源和AI构建个人应用",
      "images": [
        {
          "url": "https://avatars.githubusercontent.com/u/47188731?v=4&s=200",
          "alt": "Kedasha Kerr",
          "title": "",
          "position": 1
        },
        {
          "url": "https://github.blog/wp-content/uploads/2024/07/Icon-Circle.svg",
          "alt": "Docs",
          "title": "",
          "position": 2
        },
        {
          "url": "https://github.blog/wp-content/uploads/2024/07/Icon_95220f.svg",
          "alt": "GitHub",
          "title": "",
          "position": 3
        },
        {
          "url": "https://github.blog/wp-content/uploads/2024/07/Icon_da43dc.svg",
          "alt": "Customer stories",
          "title": "",
          "position": 4
        },
        {
          "url": "https://github.blog/wp-content/uploads/2024/04/Universe24-North_Star.svg",
          "alt": "GitHub Universe 2025",
          "title": "",
          "position": 5
        }
      ],
      "contentSource": "完整文章",
      "content": "<p>Hear about the personal tools we use to improve our workflows (and how to get started building your own) on this episode of the GitHub Podcast.</p>\n<p>The post <a href=\"https://github.blog/open-source/maintainers/building-personal-apps-with-open-source-and-ai/\">Building personal apps with open source and AI</a> appeared first on <a href=\"https://github.blog\">The GitHub Blog</a>.</p>\n"
    },
    {
      "title": "GitHub 可用性报告：2025 年 8 月 (原标题: GitHub Availability Report: August 2025)",
      "link": "https://github.blog/news-insights/company-news/github-availability-report-august-2025/",
      "pubDate": "Thu, 11 Sep 2025 19:53:44 +0000",
      "isoDate": "2025-09-11T19:53:44.000Z",
      "creator": "Jakub Oleksy",
      "summary": "# GitHub 2025 年 8 月可用性报告\n\n本报告详细介绍了 GitHub 在 2025 年 8 月经历的三起导致服务性能下降的事件。\n\n## 1. 2025 年 8 月 5 日事件 (持续 32 分钟)\n\n*   **时间**: UTC 时间 8 月 5 日 15:42 开始，持续 32 分钟。\n*   **原因**: 在生产数据库中执行了一次迁移，以删除一个支持拉取请求功能的表中的列。尽管该列已不再直接使用，但 GitHub 的 ORM（对象关系映射）在部分拉取请求查询中仍引用了该已删除的列。\n*   **影响**: 导致推送、Webhook、通知和拉取请求的错误率升高。对所有 Web 和 REST API 流量的影响在高峰期达到约 4%。\n*   **缓解措施**: 部署了一个更改，指示 ORM 忽略已删除的列。大多数受影响的服务在 UTC 时间 16:13 恢复。\n*   **次生事件**: 由于修复未能应用于所有自定义和 Canary 环境，导致了第二次事件，影响了约 0.1% 的拉取请求流量。该次生事件在 UTC 时间 19:45 完全解决。\n*   **经验教训与未来行动**: 尽管迁移有渐进式部署和确认门等保护措施，但此次事件暴露了应用程序监控的不足。GitHub 将增加额外的自动化和安全措施，以防止未来发生类似事件，减少人工干预。正在努力简化跨环境的某些类型更改，以避免再次发生次生事件。\n\n## 2. 2025 年 8 月 12 日事件 (持续 3 小时 44 分钟)\n\n*   **时间**: UTC 时间 8 月 12 日 13:30 至 17:14。\n*   **原因**: 负载均衡器与搜索主机之间出现间歇性连接问题。重试逻辑最初掩盖了问题，但重试队列最终使负载均衡器不堪重负，导致故障。\n*   **影响**: GitHub 搜索服务性能下降。用户遇到不准确或不完整的搜索结果，某些页面（如问题、拉取请求、项目和部署）加载失败，以及组件（如 Actions 工作流和标签过滤器）损坏。大部分用户影响发生在 UTC 时间 14:00 至 15:30 之间，当时高达 75% 的搜索查询失败，搜索结果更新延迟长达 100 分钟。\n*   **缓解措施**: 在 UTC 时间 15:30，通过限制搜索索引管道以减少负载并稳定重试，缓解了查询失败。在 UTC 时间 17:14，通过自动重启一个搜索主机，解决了连接故障，使系统其余部分恢复。\n*   **经验教训与未来行动**: 改进了内部监控器和操作手册。调整了搜索集群负载均衡器，以进一步缓解此类故障模式的再次发生。识别并解决了负载均衡层中的配置问题。\n\n## 3. 2025 年 8 月 27 日事件 (持续 46 分钟)\n\n*   **时间**: UTC 时间 8 月 27 日 20:35 至 21:17。\n*   **原因**: 在生产数据库中执行了一次迁移，以删除一个支持 Copilot 功能的表中的列。与 8 月 5 日的事件类似，ORM 仍引用了已删除的列。\n*   **影响**: Copilot 服务平均 36% 的请求失败，峰值失败率高达 77%。约 2% 的非 Copilot Web 和 REST API 流量请求失败。\n*   **缓解措施**: 在 UTC 时间 21:15，对生产模式应用了修复。到 UTC 时间 21:17，所有服务完全恢复。\n*   **经验教训与未来行动**: 尽管正在进行修复以避免此类情况，但未能及时完成以防止第二次事件。GitHub 已立即实施了对所有删除列操作的临时阻止，作为短期解决方案。将增加更多安全措施以防止未来发生类似问题。正在实施优雅降级机制，以确保 Copilot 问题不会影响产品其他功能。\n\n## 更多信息\n\n*   **作者**: ![Jakub Oleksy](https://avatars.githubusercontent.com/u/6147691?v=4&s=200) Jakub Oleksy\n*   **相关资源**:\n    *   **文档**: ![Docs](https://github.blog/wp-content/uploads/2024/07/Icon-Circle.svg) 掌握 GitHub 所需的一切，尽在一处。前往文档\n    *   **GitHub**: ![GitHub](https://github.blog/wp-content/uploads/2024/07/Icon_95220f.svg) 在 GitHub 上构建未来，这里是任何人、任何地点构建任何事物的平台。开始构建\n    *   **客户案例**: ![Customer stories](https://github.blog/wp-content/uploads/2024/07/Icon_da43dc.svg) 了解使用 GitHub 进行构建的公司和工程团队。了解更多\n    *   **GitHub Universe 2025**: ![GitHub Universe 2025](https://github.blog/wp-content/uploads/2024/04/Universe24-North_Star.svg) 最后机会：节省 700 美元购买 Universe 现场通行证，于 10 月 28-29 日在旧金山与我们相聚。立即注册",
      "shortSummary": "GitHub在2025年8月共发生三起服务降级事件。8月5日，因数据库列删除后ORM引用，导致拉取请求等服务受影响，已通过修复并改进监控解决。8月12日，搜索服务因负载均衡器连接问题而降级，导致查询失败和结果延迟，通过限制索引和主机重启恢复。8月27日，Copilot服务因类似数据库列删除问题导致高错误率，已实施临时阻止并计划优雅降级。GitHub正加强自动化、监控和配置管理以防范未来事件。",
      "translated_title": "GitHub 可用性报告：2025 年 8 月",
      "images": [
        {
          "url": "https://avatars.githubusercontent.com/u/6147691?v=4&s=200",
          "alt": "Jakub Oleksy",
          "title": "",
          "position": 1
        },
        {
          "url": "https://github.blog/wp-content/uploads/2024/07/Icon-Circle.svg",
          "alt": "Docs",
          "title": "",
          "position": 2
        },
        {
          "url": "https://github.blog/wp-content/uploads/2024/07/Icon_95220f.svg",
          "alt": "GitHub",
          "title": "",
          "position": 3
        },
        {
          "url": "https://github.blog/wp-content/uploads/2024/07/Icon_da43dc.svg",
          "alt": "Customer stories",
          "title": "",
          "position": 4
        },
        {
          "url": "https://github.blog/wp-content/uploads/2024/04/Universe24-North_Star.svg",
          "alt": "GitHub Universe 2025",
          "title": "",
          "position": 5
        }
      ],
      "contentSource": "完整文章",
      "content": "<p>In August, we experienced three incidents that resulted in degraded performance across GitHub services.</p>\n<p>The post <a href=\"https://github.blog/news-insights/company-news/github-availability-report-august-2025/\">GitHub Availability Report: August 2025</a> appeared first on <a href=\"https://github.blog\">The GitHub Blog</a>.</p>\n"
    },
    {
      "title": "GitHub Copilot 编程代理 101：在 GitHub 上开始使用代理工作流 (原标题: GitHub Copilot coding agent 101: Getting started with agentic workflows on GitHub)",
      "link": "https://github.blog/ai-and-ml/github-copilot/github-copilot-coding-agent-101-getting-started-with-agentic-workflows-on-github/",
      "pubDate": "Thu, 11 Sep 2025 16:00:00 +0000",
      "isoDate": "2025-09-11T16:00:00.000Z",
      "creator": "Alexandra Lietzke",
      "summary": "文章介绍了 GitHub Copilot 编程代理，这是一种旨在自动化开发工作流的集成式企业级AI队友。\n\n### 什么是 GitHub Copilot 编程代理？\n\n*   **定义**：一个软件工程（SWE）代理，在后台独立运行以完成分配的任务，类似于一位同行开发者。\n*   **工作方式**：当您分配任务时，它会启动一个由 GitHub Actions 提供支持的完全可定制的开发环境，并可全程跟踪其进度，从问题到拉取请求、审查和批准。\n*   **主要目标**：帮助开发者卸载诸如修复错误、提高测试覆盖率或重构代码等任务，使他们能专注于更感兴趣的工作。\n*   **角色**：作为异步AI队友，旨在增强开发者工作流并端到端地处理分配的任务。\n\n### 如何向编程代理分配任务？\n\n您可以通过多种方式将任务交给编程代理：\n\n*   **GitHub Issues**：在 github.com 或 GitHub Mobile 上将问题分配给 Copilot。\n*   **Visual Studio Code**：通过 GitHub Pull Requests 扩展将任务委托给 Copilot 并跟踪正在运行的任务。\n*   **代理面板**：通过点击“查看所有任务”或直接访问 github.com/copilot/agents，在不离开当前工作的情况下向 Copilot 分配新任务并跟踪现有任务。\n\n### 编程代理可以提供哪些帮助？\n\n编程代理可以处理中低复杂度的任务，让您专注于更重要的事情。它会审查您的仓库上下文，包括相关问题、拉取请求讨论和自定义指令，以帮助您：\n\n*   修复错误\n*   实现增量功能\n*   重构代码\n*   提高测试覆盖率\n*   更新文档\n*   加速秘密扫描\n*   解决技术债务\n\n### 安全性考量\n\n编程代理在设计时充分考虑了安全性，其拉取请求在任何 CI/CD 工作流运行前都需要人工批准，这增加了一层额外的保护。它还内置了审计日志和分支保护，确保每次更改在发布前都经过审查，让您保持控制。\n\n*   **沙盒环境**：在受限互联网访问和有限仓库权限的沙盒环境中运行。\n*   **分支限制**：只能推送到它自己创建的分支（例如 `copilot/*`），确保主分支和团队管理的分支不受影响。\n*   **人工审查**：所有拉取请求都需要独立的人工审查，Copilot 无法批准或合并自己的工作。\n*   **CI/CD 检查**：未经您的批准，GitHub Actions 中的 CI/CD 检查不会运行。\n*   **可追溯性**：所有提交都采用共同作者模式，以实现可追溯性。\n*   **现有策略**：您的现有组织策略和分支保护会自动应用。\n\n### 编程代理与传统 AI 编码助手的区别\n\n*   **传统 AI 编码助手**：代码存储在本地，助手帮助编写代码，但开发者仍需完成大部分繁重工作，如创建分支、编写提交信息、推送更改、打开和编写拉取请求、管理审查等。\n*   **Copilot 编程代理**：自动化开发者工作流，直接在 GitHub 拉取请求工作流中操作。它异步自动化繁琐的任务，如分支创建、提交编写和拉取请求审查，使过程更透明和协作。每一步都被记录、可见并开放给团队输入。\n\n### 编程代理与代理模式的区别\n\n*   **编程代理**：作为异步协作者，像队友一样代表您工作。它是一个 SWE 代理，在 GitHub Actions 中运行，处理您分配的问题，探索仓库以获取上下文，编写代码，通过测试，并打开拉取请求供您审查。它使用一个 Copilot 高级请求和 GitHub Actions 分钟。\n*   **代理模式**：在您选择的 IDE（如 VS Code、JetBrains、Eclipse 和 Xcode）中与您同步配对，作为实时协作者，实时迭代代码、运行测试并修复自己的错误。\n\n### 编程代理如何工作？\n\nCopilot 编程代理直接内置于 GitHub 的原生控制层中，旨在融入您的 GitHub 开发流程。\n\n*   **启动方式**：当您将 GitHub Issue 分配给 Copilot、从代理面板启动任务或从 VS Code 中的 Copilot Chat 启动任务时，它就开始工作。\n*   **工作流程**：代理会打开一个标记为 `[WIP]` 的草稿拉取请求，并在工作过程中推送提交，记录关键步骤，以便您实时跟踪进度。\n*   **用户控制**：尽管编程代理完成工作，但您在整个过程中始终保持控制。您可以通过拉取请求审查进行审查、提供反馈并要求 Copilot 迭代。\n*   **运行环境**：在由 GitHub Actions 提供支持的安全、短暂的开发环境中运行。在此环境中，Copilot 可以探索代码库以获取上下文、进行更改、运行测试和代码检查等。您可以利用 25,000 个社区操作目录，使用所需的工具和依赖项自定义此开发环境。\n\n### 如何在 GitHub Copilot 中使用编程代理？\n\n使用 GitHub 编程代理的过程类似于将任务分配给队友。\n\n*   **分配任务**：在 GitHub.com、GitHub Mobile 或 CLI 上将问题分配给 `@github`。您也可以在 GitHub.com 的任何页面上使用代理面板，或直接从您喜欢的 IDE 中的 GitHub Copilot Chat 或任何支持模型上下文协议（MCP）的工具中提示 Copilot。\n*   **分步指南**：\n    1.  将任务交给 Copilot（例如，分配问题或使用代理面板）。\n    2.  编程代理会打开一个标记为 `[WIP]` 的草稿拉取请求，用于跟踪和完成其工作。\n    3.  一旦 Copilot 完成，它将更新拉取请求，提供清晰的标题和描述，并标记您进行审查。\n    4.  如果需要更改，您可以在草稿拉取请求上留下评论并标记 `@copilot`，编程代理将根据您的反馈进行迭代。\n\n### 通过 MCP 释放 Copilot 的全部潜力\n\n当您将 Copilot 与模型上下文协议（MCP）结合使用时，其功能会显著扩展。MCP 是一个开放标准，允许应用程序与大型语言模型（LLM）共享上下文。\n\n*   **内置支持**：编程代理内置了 Playwright 和 GitHub MCP 服务器，您也可以添加自己的服务器。\n*   **互联网访问**：Copilot 的互联网访问受防火墙限制，但默认规则允许访问 Copilot 用于与 GitHub 交互或下载依赖项的多个主机。\n*   **配置**：仓库管理员可以通过仓库设置中的 JSON 文件配置 MCP 服务器。\n*   **优势**：一旦启用，编程代理将自主使用这些工具，从而简化工作流并减少开发人员的开销。MCP 将 Copilot 变成一个更具上下文感知能力、工具熟练且功能强大的编码伙伴。\n\n### 总结\n\nCopilot 编程代理可以帮助您完成最佳工作。它承担了开发中更繁琐的部分，让您保持专注、更快地行动，并专注于解决实际问题。无论您是开发全新想法还是处理长长的修复列表，编程代理都能帮助您建立动力，减少摩擦，提高流畅性。",
      "shortSummary": "GitHub Copilot 编程代理是一个企业级AI队友，旨在自动化开发工作流。它能独立完成分配的任务，如修复bug、重构代码和提高测试覆盖率，并在GitHub Actions中运行。通过创建草稿拉取请求并等待人工审核，它确保了安全性和可追溯性。与传统AI助手不同，编程代理能异步处理从任务分配到拉取请求的整个流程，从而让开发者专注于更重要的工作，提高效率和协作。",
      "translated_title": "GitHub Copilot 编程代理 101：在 GitHub 上开始使用代理工作流",
      "images": [],
      "contentSource": "RSS",
      "content": "<p>Delegate it a task, and coding agent can independently write, run, and test code. Here’s how you can make the most of it.</p>\n<p>The post <a href=\"https://github.blog/ai-and-ml/github-copilot/github-copilot-coding-agent-101-getting-started-with-agentic-workflows-on-github/\">GitHub Copilot coding agent 101: Getting started with agentic workflows on GitHub</a> appeared first on <a href=\"https://github.blog\">The GitHub Blog</a>.</p>\n"
    },
    {
      "title": "GitHub Universe 2025 指南：日程已发布！ (原标题: Your guide to GitHub Universe 2025: The schedule just launched!)",
      "link": "https://github.blog/news-insights/company-news/your-guide-to-github-universe-2025-the-schedule-just-launched/",
      "pubDate": "Wed, 10 Sep 2025 20:52:28 +0000",
      "isoDate": "2025-09-10T20:52:28.000Z",
      "creator": "GitHub Staff",
      "summary": "# GitHub Universe 2025：日程已发布，探索AI驱动的开发未来\n\nGitHub Universe 2025 的完整日程现已发布，活动将涵盖AI驱动开发的无限潜力，包括超过100场精彩的会议、演示和小组讨论。如果您尚未注册，以下是您需要了解的关键信息。\n\n## 活动概览\n\n*   **日期与地点**：活动将于 **10月28日至29日** 在加利福尼亚州旧金山的 **Fort Mason Center** 举行。\n*   **主要亮点**：为期两天的活动将汇聚科技界顶尖人才，包括来自 Red Hat、HubSpot、CVS、General Motors 等公司的专家。今年还设有两个演示舞台，其中一个提供甜甜圈，另一个则有无声迪斯科。\n*   **演讲嘉宾与主题**：会议内容丰富，涵盖从“氛围编程”和大规模自动化到AI驱动的安全等各个方面。\n*   **特别体验**：参会者有机会与 GitHub 团队进行一对一交流，解答疑问，甚至获得职业建议。\n\n## 票务与优惠\n\n*   **早鸟优惠**：早鸟票折扣已延长至 **9月17日（星期三）**，这是节省400美元现场门票的最后机会。\n*   **团体折扣**：购买3张或更多门票可享25%折扣，购买8张或更多门票可享35%折扣。早鸟优惠可与团体折扣叠加使用。\n\n## 日程预览\n\n以下是部分精选会议的概览，您可以在[完整日程](https://github.blog/2024-09-04-your-guide-to-github-universe-2025-the-schedule-just-launched/)中标记您感兴趣的会议，创建个人日程。\n\n### 更快构建，保持流畅\n\n*   ![如何在代码审查中实践同情（而非批评）](https://github.blog/wp-content/uploads/2025/09/table1-1.png?resize=1024%2C538)\n    *   **如何在代码审查中实践同情（而非批评）**\n*   ![使用 Copilot 编码代理解决技术债务](https://github.blog/wp-content/uploads/2025/09/table1-2.png?resize=1024%2C538)\n    *   **使用 Copilot 编码代理解决技术债务**\n*   ![与 GitHub Copilot 合作：更智能地构建游戏](https://github.blog/wp-content/uploads/2025/09/table1-4.png?resize=1024%2C538)\n    *   **与 GitHub Copilot 合作：更智能地构建游戏**\n*   ![使用 Copilot 构建 GitHub：我们的工程师如何倍增影响力并可靠地发布功能](https://github.blog/wp-content/uploads/2025/09/table1-3.png?resize=1024%2C538)\n    *   **使用 Copilot 构建 GitHub：我们的工程师如何倍增影响力并可靠地发布功能**\n\n### 自信地自动化和扩展\n\n*   ![代理的黎明：利用AI驱动工具加速软件开发](https://github.blog/wp-content/uploads/2025/09/table2-1.png?resize=1024%2C538)\n    *   **代理的黎明：利用AI驱动工具加速软件开发**\n*   ![与AI共飞：国泰航空如何转型软件开发](https://github.blog/wp-content/uploads/2025/09/table2-2.png?resize=1024%2C538)\n    *   **与AI共飞：国泰航空如何转型软件开发**\n*   ![从倦怠到突破：构建节省数百万的代理工作流](https://github.blog/wp-content/uploads/2025/09/table-2-4.png?resize=1024%2C538)\n    *   **从倦怠到突破：构建节省数百万的代理工作流**\n*   ![使用 GitHub Actions 自动化日常工作流的5种方法](https://github.blog/wp-content/uploads/2025/09/table-2-3.png?resize=1024%2C538)\n    *   **使用 GitHub Actions 自动化日常工作流的5种方法**\n\n### 确保每次提交的安全\n\n*   ![图片 9](https://github.blog/wp-content/uploads/2025/09/table3-1.png?resize=1024%2C538)\n*   ![图片 10](https://github.blog/wp-content/uploads/2025/09/table3-2.png?resize=1024%2C538)\n*   ![图片 11](https://github.blog/wp-content/uploads/2025/09/table-3-4.png?resize=1024%2C538)\n*   ![图片 12](https://github.blog/wp-content/uploads/2025/09/table3-3.png?resize=1024%2C538)\n\n*   **定制化日程**：除了完整日程，大会还提供针对特定目标、角色（如开发者、金融服务从业者）或行业（如AI时代新趋势）的定制化日程。\n\n## 会前、会中、会后学习机会\n\n### GitHub 总部学习日与认证 (10月30日)\n\n*   **新亮点**：今年新增的 GitHub 总部学习日体验，您的 GitHub Universe 普通门票包含一次 GitHub 或 Microsoft 认证考试。名额有限，先到先得。\n*   **认证考试**：可获得官方 GitHub 或 Microsoft Learn 证书（需提前注册），包括 GitHub Actions、GitHub Administration、GitHub Advanced Security、GitHub Foundations 和 GitHub Copilot 等。此外，还提供 Microsoft DevOps Engineer Expert、Microsoft Azure Administrator Associate 和 Microsoft Azure Developer Associate 认证。如果无法在总部参加考试，可在 Universe 结束后90天内远程参加。\n*   **应用技能实验室**：通过实际、互动挑战测试您的知识。\n*   **总部参观**：难得的机会参观 GitHub 旧金山总部，了解幕后运作。\n*   **社区与庆祝**：享受周边礼品、抽奖活动，并与 GitHub 领导和同行建立联系。\n\n### 一对一会谈\n\n已注册的参会者可报名参加一对一会谈：\n\n*   **职业角 (Career Corner)**：寻求职业建议。\n*   **GitHub 专家中心 (GitHub Expert Center)**：获取其他方面的帮助。\n\n### 现场探索区\n\n会议间隙有丰富的活动：\n\n*   **开源区 (Open Source Zone)**：与贡献者、维护者和社区领袖交流。\n*   **商店 (The Shop)**：购买最新的 Copilot 周边产品。\n*   **休息区 (Recess)**：结识与您有共同非开发兴趣的参会者。\n*   **创客空间 (Makerspace)**：重新构想代码的可能性。\n\n### 学生虚拟微辅导项目\n\n作为社会影响力项目的一部分，GitHub 为在校学生提供与 GitHub 员工进行虚拟微辅导的机会。这些30分钟的一对一会谈将于10月20日至10月31日举行，提供简历反馈、职业建议和技能发展技巧。名额有限，请务必在 **9月19日** 前申请。\n\n## 更多资源\n\n*   了解更多 GitHub Universe 的信息。\n*   使用可定制的电子邮件模板说服您的经理。\n*   查看常见问题解答 (FAQ)。",
      "shortSummary": "GitHub Universe 2025 的日程已发布，活动将于10月28-29日在旧金山举行。大会将聚焦AI驱动的开发，提供超过100场会议，涵盖构建、自动化和安全等主题。参会者可与专家交流，参加GitHub总部学习日及认证考试。早鸟票优惠延长至9月17日，并可叠加团体折扣。此外，还设有学生虚拟微辅导项目。",
      "translated_title": "GitHub Universe 2025 指南：日程已发布！",
      "images": [
        {
          "url": "https://github.blog/wp-content/uploads/2025/09/table1-1.png?resize=1024%2C538",
          "alt": "How to practice compassion (not criticism) during code reviews",
          "title": "",
          "position": 1
        },
        {
          "url": "https://github.blog/wp-content/uploads/2025/09/table1-2.png?resize=1024%2C538",
          "alt": "Tackling your tech debt with Copilot coding agent",
          "title": "",
          "position": 2
        },
        {
          "url": "https://github.blog/wp-content/uploads/2025/09/table1-4.png?resize=1024%2C538",
          "alt": "Co-op with GitHub Copilot: Building games the smarter way",
          "title": "",
          "position": 3
        },
        {
          "url": "https://github.blog/wp-content/uploads/2025/09/table1-3.png?resize=1024%2C538",
          "alt": "Building GitHub with Copilot: How our engineers multiply their impact and reliably ship features",
          "title": "",
          "position": 4
        },
        {
          "url": "https://github.blog/wp-content/uploads/2025/09/table2-1.png?resize=1024%2C538",
          "alt": "Dawn of the agents: Leveraging AI-powered tools to accelerate software development",
          "title": "",
          "position": 5
        },
        {
          "url": "https://github.blog/wp-content/uploads/2025/09/table2-2.png?resize=1024%2C538",
          "alt": "Flying high with AI: Cathay Pacific on transforming software development",
          "title": "",
          "position": 6
        },
        {
          "url": "https://github.blog/wp-content/uploads/2025/09/table-2-4.png?resize=1024%2C538",
          "alt": "From burnout to breakthrough: Building agentic workflows that save millions",
          "title": "",
          "position": 7
        },
        {
          "url": "https://github.blog/wp-content/uploads/2025/09/table-2-3.png?resize=1024%2C538",
          "alt": "5 ways to automate everyday workflows with GitHub Actions",
          "title": "",
          "position": 8
        }
      ],
      "contentSource": "完整文章",
      "content": "<p>Create your own agenda of favorites, sign up for one-on-on mentoring sessions, and register if you haven’t already. We’ll see you there!</p>\n<p>The post <a href=\"https://github.blog/news-insights/company-news/your-guide-to-github-universe-2025-the-schedule-just-launched/\">Your guide to GitHub Universe 2025: The schedule just launched!</a> appeared first on <a href=\"https://github.blog\">The GitHub Blog</a>.</p>\n"
    },
    {
      "title": "如何使用GitHub和JFrog集成实现从代码提交到生产环境的安全可追溯构建 (原标题: How to use the GitHub and JFrog integration for secure, traceable builds from commit to production)",
      "link": "https://github.blog/enterprise-software/devsecops/how-to-use-the-github-and-jfrog-integration-for-secure-traceable-builds-from-commit-to-production/",
      "pubDate": "Tue, 09 Sep 2025 22:00:00 +0000",
      "isoDate": "2025-09-09T22:00:00.000Z",
      "creator": "April Yoho",
      "summary": "## GitHub与JFrog集成：实现从代码提交到生产环境的安全可追溯构建\n\n### 概述\nGitHub与JFrog推出了一项新集成，旨在连接源代码和经证明的二进制文件，创建一个安全、可追溯的统一工作流。此举旨在帮助开发者摆脱在多个工具间切换以追踪构建产物或手动整合安全扫描结果的困境，从而节省时间和精力，将所需的一切集中在一个地方。\n\n### 集成的重要性\n现代软件交付被视为一个供应链，其中源代码、构建管道和生产产物都是重要环节，每个环节都必须安全、可追溯且自动化。任何薄弱环节都可能成为恶意攻击者获取敏感数据的入口。开发者在维护完整供应链安全方面面临诸多挑战，常见痛点包括：\n*   构建离开GitHub后，可追溯性丧失。\n*   安全扫描分散在多个系统，需要手动协调结果。\n*   CI/CD管道感觉是拼凑而非无缝连接。\n\n为解决这些问题，GitHub与JFrog工程师紧密合作，设计了一个工作流，其核心目标是：\n*   将触发构建的代码提交与生成的制品进行加密链接。\n*   自动进行上下文相关的安全扫描，并将漏洞扫描证明（attestations）存储在JFrog Evidence中。\n*   将符合组织策略的制品发布和推广作为GitHub Actions工作流的一部分，而非独立流程。\n\n最终目标是减少摩擦、降低风险，并让开发者有更多时间专注于功能开发，而非管理交接。\n\n### 集成带来的无缝体验\n此次集成解锁了以下无缝体验：\n*   **统一安全扫描**：根据JFrog提供的生产上下文，优先处理Dependabot警报。\n*   **策略驱动的制品推广**：通过基于策略的门控机制发布和推广制品。\n*   **自动证明摄取**：自动将GitHub上创建的所有证明（如来源证明、SBOM、自定义证明）摄取到JFrog Evidence中，并与构建制品关联。\n\n### 工作原理\n该集成通过安全认证和构建元数据，连接GitHub的开发者平台与JFrog的软件供应链平台。其流程如下：\n1.  将代码推送到GitHub。\n2.  使用GitHub Actions进行构建和测试。\n3.  链接提交、构建和制品，实现完整的生命周期可见性。\n4.  自动将制品发布到Artifactory。\n5.  使用GitHub Advanced Security扫描代码，使用JFrog Xray扫描制品。\n\n![GitHub和JFrog集成示意图](https://github.blog/wp-content/uploads/2025/09/jfrog1.png?resize=1024%2C658)\n\n### 设置步骤\n1.  **在JFrog Artifactory中启用GitHub集成**：导航至 `Administration → General Management → Manage Integrations → GitHub`。\n2.  切换“Enable GitHub Actions”并验证您的GitHub组织。\n3.  选择令牌类型，然后创建拉取请求。\n\n![JFrog Artifactory集成界面](https://github.blog/wp-content/uploads/2025/09/jfrog2.jpg?resize=1024%2C576)\n\n### 触发构建并生成证明\n确保您的GitHub Actions工作流使用 `jfrog/jfrog-setup-cli` 和 `actions/attest-build-provenance` 动作。文章提供了一个示例工作流，用于生成证明并将其推送到Artifactory。\n\n### 制品验证与推广\n构建运行并生成证明后，制品将被推送到JFrog Artifactory的暂存仓库。制品此时已准备好进行验证。一旦制品经过验证，确认有效的GitHub签名来源证明与受信任条件（例如发行者、仓库、工作流、分支）匹配，并且策略通过，JFrog可以自动将证明从开发环境推广到生产环境。\n\n![Artifactory中开发环境的证明视图](https://github.blog/wp-content/uploads/2025/09/jfrog3.png?resize=1024%2C310)\n\n### 推广后的安全监控\n制品推广到生产环境后，Dependabot会继续扫描其源仓库，查找依赖项和漏洞。当发现关键CVE时，管理员将收到安全威胁警报。\n\n![关键Dependabot警报视图](https://github.blog/wp-content/uploads/2025/09/jfrog4.jpg?resize=1024%2C692)\n\n为了查找已进入生产环境的制品的警报和漏洞，可以使用标签 `artifact-registry:jfrog-artifactory` 进行过滤。启用此集成后，制品生命周期数据会通过GitHub新的制品元数据API自动从JFrog推送到GitHub。当制品在JFrog Artifactory中推广到生产环境时，JFrog会自动通知GitHub，以便Dependabot使用新的过滤器捕获该制品。\n\n![JFrog的Dependabot过滤器](https://github.blog/wp-content/uploads/2025/09/jfrog5.jpg?resize=1024%2C387)\n\n### 漏洞修复\n一旦识别出警报，可以通过建议的依赖项更新进行修复，然后使用新的来源证明重新构建和重新部署。\n\n### 最佳实践\n为了充分利用GitHub和JFrog Artifactory的集成，建议遵循以下最佳实践：\n*   使用OIDC避免在工作流中使用长期凭据。\n*   在Artifactory中自动化推广流程，将制品从开发环境推向暂存环境再到生产环境。\n*   尽早设置安全门控，确保未经证明或存在漏洞的构建不会进入生产环境。\n*   利用JFrog Evidence中的来源证明实现即时可追溯性。\n\n### 展望\n您可以立即启用GitHub和JFrog集成，开始构建更安全、自动化和可追溯的软件供应链。",
      "shortSummary": "GitHub与JFrog推出新集成，旨在实现从代码提交到生产环境的安全、可追溯构建。该集成将源代码与经证明的二进制文件连接起来，通过统一工作流解决多工具切换、安全扫描碎片化等痛点。它提供统一安全扫描、基于策略的制品推广，并自动将GitHub的证明（如来源、SBOM）导入JFrog Evidence。这简化了CI/CD流程，增强了整个软件供应链的安全性、可追溯性和自动化，帮助开发者专注于功能开发，减少风险。",
      "translated_title": "如何使用GitHub和JFrog集成实现从代码提交到生产环境的安全可追溯构建",
      "images": [
        {
          "url": "https://github.blog/wp-content/uploads/2025/09/jfrog1.png?resize=1024%2C658",
          "alt": "Diagram showing the GitHub and JFrog integration.",
          "title": "",
          "position": 1
        },
        {
          "url": "https://github.blog/wp-content/uploads/2025/09/jfrog2.jpg?resize=1024%2C576",
          "alt": "JFrog Artifactory integration screen.",
          "title": "",
          "position": 2
        },
        {
          "url": "https://github.blog/wp-content/uploads/2025/09/jfrog3.png?resize=1024%2C310",
          "alt": "Artifactory view of the attestation in the dev environment.",
          "title": "",
          "position": 3
        },
        {
          "url": "https://github.blog/wp-content/uploads/2025/09/jfrog4.jpg?resize=1024%2C692",
          "alt": "View of critical Dependabot alerts.",
          "title": "",
          "position": 4
        },
        {
          "url": "https://github.blog/wp-content/uploads/2025/09/jfrog5.jpg?resize=1024%2C387",
          "alt": "Dependabot filter for JFrog.",
          "title": "",
          "position": 5
        },
        {
          "url": "https://avatars.githubusercontent.com/u/26086919?v=4&s=200",
          "alt": "April Yoho",
          "title": "",
          "position": 6
        },
        {
          "url": "https://github.blog/wp-content/uploads/2024/07/Icon-Circle.svg",
          "alt": "Docs",
          "title": "",
          "position": 7
        },
        {
          "url": "https://github.blog/wp-content/uploads/2024/07/Icon_95220f.svg",
          "alt": "GitHub",
          "title": "",
          "position": 8
        }
      ],
      "contentSource": "完整文章",
      "content": "<p>Connect commits to artifacts without switching tools.</p>\n<p>The post <a href=\"https://github.blog/enterprise-software/devsecops/how-to-use-the-github-and-jfrog-integration-for-secure-traceable-builds-from-commit-to-production/\">How to use the GitHub and JFrog integration for secure, traceable builds from commit to production</a> appeared first on <a href=\"https://github.blog\">The GitHub Blog</a>.</p>\n"
    },
    {
      "title": "如何使用 Playwright MCP 和 GitHub Copilot 调试 Web 应用 (原标题: How to debug a web app with Playwright MCP and GitHub Copilot)",
      "link": "https://github.blog/ai-and-ml/github-copilot/how-to-debug-a-web-app-with-playwright-mcp-and-github-copilot/",
      "pubDate": "Fri, 05 Sep 2025 16:00:00 +0000",
      "isoDate": "2025-09-05T16:00:00.000Z",
      "creator": "Christopher Harrison",
      "summary": "## 如何使用 Playwright MCP 和 GitHub Copilot 调试 Web 应用\n\n### 引言：自动化调试的挑战与解决方案\n\n传统的 bug 报告通常包含复现步骤，但手动验证这些步骤既耗时又繁琐。许多项目缺乏健壮的端到端测试来自动化此过程。本文介绍了一种解决方案：利用 GitHub Copilot 代理模式结合 Playwright 模型上下文协议（MCP）服务器，实现 Web 应用 bug 的自动化复现、追踪和解决。\n\n### Playwright 与 MCP 概述\n\n*   **Playwright**：一个用于 Web 应用的端到端测试框架。它允许开发者创建脚本来模拟用户行为，验证应用程序的功能集，并确保产品质量。例如，在购物应用中，Playwright 可以自动化搜索产品、添加到购物车和完成购买的整个流程。\n*   **MCP (Model Context Protocol)**：由 Anthropic 开发的开放且开源的协议，旨在向 AI 代理暴露工具。这些工具可以提供额外的上下文信息，或允许 AI 代理执行特定操作。\n*   **Playwright MCP 服务器**：将 Playwright 的功能作为工具提供给 AI 代理（如 GitHub Copilot）。这使得 Copilot 能够创建测试脚本并直接执行 Playwright 操作，从而自动化地执行 bug 复现步骤。\n\n### 在 VS Code 中配置 Playwright MCP 服务器\n\n要在 VS Code 中使用 Playwright MCP 服务器，需要进行以下配置：\n\n1.  **安装或配置**：可以在 VS Code 中全局安装 Playwright MCP 服务器，或者在项目的 `.vscode` 文件夹中创建一个名为 `mcp.json` 的文件，并添加以下配置：\n    ```json\n    {\n      \"servers\": {\n        \"playwright\": {\n          \"command\": \"npx",
      "shortSummary": "本文介绍了如何利用 GitHub Copilot 代理模式和 Playwright 模型上下文协议 (MCP) 服务器自动化 Web 应用的 bug 调试。Playwright 作为端到端测试框架，通过 MCP 协议将工具暴露给 AI 代理。开发者可在 VS Code 中配置 Playwright MCP 服务器，然后指示 Copilot 自动执行 bug 复现步骤，确认问题，追踪代码（包括前端、API 调用和后端），并定位错误。Copilot 甚至能在提出修复方案后，利用 Playwright 验证其有效性，显著提升调试效率，让 AI 能够“看到”代码更改对网站的实际影响。",
      "translated_title": "如何使用 Playwright MCP 和 GitHub Copilot 调试 Web 应用",
      "images": [
        {
          "url": "https://github.blog/wp-content/uploads/2025/09/image.png?resize=1024%2C816",
          "alt": "A screenshot showing the play button below \"servers\", just above \"playwright\", in a VS Code window.",
          "title": "",
          "position": 1
        },
        {
          "url": "https://avatars.githubusercontent.com/u/6109729?v=4&s=200",
          "alt": "Christopher Harrison",
          "title": "",
          "position": 2
        },
        {
          "url": "https://github.blog/wp-content/uploads/2024/07/Icon-Circle.svg",
          "alt": "Docs",
          "title": "",
          "position": 3
        },
        {
          "url": "https://github.blog/wp-content/uploads/2024/07/Icon_95220f.svg",
          "alt": "GitHub",
          "title": "",
          "position": 4
        },
        {
          "url": "https://github.blog/wp-content/uploads/2024/07/Icon_da43dc.svg",
          "alt": "Customer stories",
          "title": "",
          "position": 5
        },
        {
          "url": "https://github.blog/wp-content/uploads/2024/04/Universe24-North_Star.svg",
          "alt": "GitHub Universe 2025",
          "title": "",
          "position": 6
        }
      ],
      "contentSource": "完整文章",
      "content": "<p>Reproduce and debug web app issues with ease using the Playwright MCP server and GitHub Copilot.</p>\n<p>The post <a href=\"https://github.blog/ai-and-ml/github-copilot/how-to-debug-a-web-app-with-playwright-mcp-and-github-copilot/\">How to debug a web app with Playwright MCP and GitHub Copilot</a> appeared first on <a href=\"https://github.blog\">The GitHub Blog</a>.</p>\n"
    },
    {
      "title": "GitHub 在新的政府贸易规则下为叙利亚开发者提供更广泛的访问权限 (原标题: GitHub is enabling broader access for developers in Syria following new government trade rules)",
      "link": "https://github.blog/company/github-is-enabling-broader-access-for-developers-in-syria-following-new-government-trade-rules/",
      "pubDate": "Fri, 05 Sep 2025 06:00:00 +0000",
      "isoDate": "2025-09-05T06:00:00.000Z",
      "creator": "Mike Linksvayer",
      "summary": "# GitHub 在新的政府贸易规则下为叙利亚开发者提供更广泛的访问权限\n\n## 引言\nGitHub 宣布，随着对叙利亚的制裁和出口管制放松，将为叙利亚开发者提供更广泛的访问权限。这一举措是 GitHub 长期以来坚持的“所有开发者都应自由使用 GitHub，无论他们身在何处”这一核心立场的又一重要里程碑。\n\n## 主要变化与影响\n*   **服务恢复**：GitHub.com 上的私人和付费功能将再次广泛向叙利亚的开发者开放，覆盖阿勒颇、霍姆斯、大马士革以及全国各地。\n*   **持续可用性**：在此之前，开源项目和其他公共仓库的协作功能一直保持可用，这在 GitHub Innovation Graph（一个提供叙利亚公共仓库贡献汇总数据的开放数据集）中有所体现。\n*   **感谢与欢迎**：GitHub 对那些为促成这一改变而持续发声并寻求更新的开发者表达了诚挚的感谢。GitHub 欢迎叙利亚开发者将他们的项目贡献给全球开发者社区，无论项目大小。\n\n## GitHub 的承诺与具体行动\nGitHub 承诺将继续致力于在法律允许的范围内，让尽可能多的开发者使用其平台。为此，GitHub 正在迅速采取以下措施：\n*   **解除限制**：解除对叙利亚开发者的限制。\n*   **恢复功能**：恢复账户的正常功能。\n*   **提供 Copilot**：提供 GitHub Copilot 的访问权限。\n\n这些更改目前正在进行中，预计将在未来一周内对相关账户生效。\n\n## 作者信息\n本文由开发者政策主管 Mike Linksvayer 撰写。\n\n![Mike Linksvayer](https://secure.gravatar.com/avatar/8cc1e22f2b79ef8eb4c53537d6ba5ac6ae3cf311c9eef3006657ebe8be0551ce?s=200&d=mm&r=g)\n\n## 相关内容\n*   **Docs**：掌握 GitHub 所需的一切，尽在一个地方。\n    ![Docs](https://github.blog/wp-content/uploads/2024/07/Icon-Circle.svg)\n*   **GitHub**：在 GitHub 上构建未来，这里是任何地方的任何人都可以构建任何东西的地方。\n    ![GitHub](https://github.blog/wp-content/uploads/2024/07/Icon_95220f.svg)\n*   **客户案例**：了解使用 GitHub 进行构建的公司和工程团队。\n    ![Customer stories](https://github.blog/wp-content/uploads/2024/07/Icon_da43dc.svg)\n*   **GitHub Universe 2025**：最后机会：节省 700 美元购买 Universe 现场通行证，于 10 月 28-29 日在旧金山与我们相聚。\n    ![GitHub Universe 2025](https://github.blog/wp-content/uploads/2024/04/Universe24-North_Star.svg)",
      "shortSummary": "由于对叙利亚的制裁和出口管制放松，GitHub 正在恢复叙利亚开发者的全面访问权限。这意味着 GitHub.com 上的私人和付费功能将再次广泛可用，包括正常的账户功能和 GitHub Copilot。此前，开源项目协作一直保持开放。GitHub 感谢为这一改变发声的开发者，并重申其致力于在法律允许范围内，让所有开发者自由使用 GitHub 的承诺。相关更改预计将在下周内生效。",
      "translated_title": "GitHub 在新的政府贸易规则下为叙利亚开发者提供更广泛的访问权限",
      "images": [
        {
          "url": "https://secure.gravatar.com/avatar/8cc1e22f2b79ef8eb4c53537d6ba5ac6ae3cf311c9eef3006657ebe8be0551ce?s=200&d=mm&r=g",
          "alt": "Mike Linksvayer",
          "title": "",
          "position": 1
        },
        {
          "url": "https://github.blog/wp-content/uploads/2024/07/Icon-Circle.svg",
          "alt": "Docs",
          "title": "",
          "position": 2
        },
        {
          "url": "https://github.blog/wp-content/uploads/2024/07/Icon_95220f.svg",
          "alt": "GitHub",
          "title": "",
          "position": 3
        },
        {
          "url": "https://github.blog/wp-content/uploads/2024/07/Icon_da43dc.svg",
          "alt": "Customer stories",
          "title": "",
          "position": 4
        },
        {
          "url": "https://github.blog/wp-content/uploads/2024/04/Universe24-North_Star.svg",
          "alt": "GitHub Universe 2025",
          "title": "",
          "position": 5
        }
      ],
      "contentSource": "完整文章",
      "content": "<p>With the relaxation of sanctions and export controls on Syria, GitHub will once again be broadly available to Syrian developers.</p>\n<p>The post <a href=\"https://github.blog/company/github-is-enabling-broader-access-for-developers-in-syria-following-new-government-trade-rules/\">GitHub is enabling broader access for developers in Syria following new government trade rules</a> appeared first on <a href=\"https://github.blog\">The GitHub Blog</a>.</p>\n"
    }
  ],
  "lastUpdated": "2025-09-21T04:31:01.107Z"
}